/*package com.root;

import static org.testng.AssertJUnit.assertEquals;

import java.io.FileNotFoundException;
import java.io.IOException;

import org.openqa.selenium.WebDriver;
import org.testng.Assert;

public class TB_BP_BrokerJointPC extends LocalBusinessFunctions{
	
	
	public TB_BP_BrokerJointPC() throws FileNotFoundException,
	IOException {
super();

}

public void Call(WebDriver driver)
{
	String login="", strCustomer="";
	String strOpp="Fail";
	boolean bNa=false,bPs=false,bMorApp=false,bFCr=false,bCustInf=false;;//, bOpp=false;
	boolean bAddcust=false;

	try
	{
		
		TB_GG_Report("TB_BP_BrokerJointPC","", false);

		login=TB_LB_Login(driver,2);
		strCustomer=TB_LB_CustomerSearch(driver, 8);
		strOpp=TB_LB_CreateOpportunity(driver,1);
	//	TB_LB_OpportunityLink(driver);
		bAddcust=TB_LB_AddCustomerToOpp(driver, 9);


		bNa=TB_LB_JointNeedAnalysis(driver,13,false);//row 11 is guarantor//13for joint individual non spouse
		bPs=TB_LB_ProductSearch(driver, 1,false);
		bCustInf = TB_LB_CustomerInformationApp1(driver, 1);
		bMorApp = TB_LB_MortgageApp(driver, 1);
		bFCr = TB_LB_FinalCapacityToRepay(driver);
		
		TB_LB_Logout(driver);
		
		
		System.out.println("Login:" + login);
		System.out.println("Search Customer:" + strCustomer);
		System.out.println("Edit Opp:" + strOpp);
		System.out.println("Add Cust:" + bAddcust);
	
		System.out.println("NA:" + bNa);
		System.out.println("PS:" + bPs);

		 if(login.equalsIgnoreCase("Pass") && strCustomer.equalsIgnoreCase("Match Found") && strOpp.equalsIgnoreCase("Pass")  && bAddcust && bNa && bPs && bMorApp && bFCr && bCustInf)
		 

		 {
			 TB_GG_Report("Final Test Result for TB_BP_BrokerJointPC","Pass", false);
		
		 }
		 else
		 {
			 TB_GG_Report("Final Test Result for TB_BP_BrokerJointPC","Fail", false);
			 
		 }
		 TB_GG_Report("","", true);
		
	}
	catch (Exception e) 
	{
		
		e.printStackTrace();
	}
	assertEquals("Pass", login);
	assertEquals("Match Found", strCustomer);
	assertEquals("Pass", strOpp);
	Assert.assertTrue(bAddcust);
	Assert.assertTrue(bNa);
	Assert.assertTrue(bPs);
}

}*/
package com.root;
//import static org.testng.AssertJUnit.assertEquals;

import java.io.FileNotFoundException;
import java.io.IOException;


import org.openqa.selenium.WebDriver;
//import org.testng.Assert;
public class TB_BP_BrokerJointPC extends LocalBusinessFunctions
{

	public TB_BP_BrokerJointPC() throws FileNotFoundException,IOException 
	{
		super();

	}

	public void Call(WebDriver driver)
	{
	
		
		for(int i=15;  i<=15; i++) // 1 to 7 Personal, 9 to 13 Company
		{
			System.out.println("Running for row: " + i);
			String login="", strCustomer="";
			String strOpp="Fail";
			
			boolean  bNa=false, bPs=false, bApp=false, bBC= false, bAddcust;
			try 
			{
				TB_GG_Report("Broker_Joint_Scenario BP_ID 0"+ i,"", false);
				login=TB_LB_Login(driver,2);
				strCustomer=TB_LB_CustomerSearch(driver,3 );
				strOpp=TB_LB_CreateOpportunity(driver,1);
			//	TB_LB_OpportunityLink(driver);
				bAddcust=TB_LB_AddCustomerToOpp(driver, 4);
				bNa=TB_LB_JointNeedAnalysis(driver,i,false,"TB_DFL_NeedAnalysisXML.xls");
				
					if(bNa)
					{	
						bPs=TB_LB_ProductSearch(driver, i,false, "TB_DFL_NeedAnalysisXML.xls");
						if(bPs)
						{
							bApp = TB_LB_CompleteApp(driver, i,true);
							bBC= TB_LB_BrokerCentre(driver,"BP_ID 0"+ i);
						}
					}
					
				
				TB_LB_Logout(driver);
				 if(login.equalsIgnoreCase("Pass") && strCustomer.equalsIgnoreCase("Match Found")&& strCustomer.equalsIgnoreCase("Pass")  && strOpp.equalsIgnoreCase("Pass")  && bAddcust && bNa && bPs && bApp && bBC)
				 {
					 TB_GG_Report("Test Result for TB_BP_Broker_Scenario: "+i,"Pass", false);
				
				 }
				 else
				 {
					 TB_GG_Report("Test Result for TB_BP_Broker_Scenario: "+i,"Fail", false);
					 	driver.quit();
						driver = TB_GG_LaunchApplication();
					
				 }
				 TB_GG_Report("","", true);
				
					
			} 
			
			catch (Exception e) 
			{
				
				e.printStackTrace();
			}
		}
		
		
	}
	/*assertEquals("Pass", login);
	assertEquals("Match Found", strCustomer);
	assertEquals("Pass", strOpp);
	Assert.assertTrue(bNa);
	Assert.assertTrue(bPs);*/
	
}
