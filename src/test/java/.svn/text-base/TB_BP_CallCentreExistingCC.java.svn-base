package com.root;

import static org.testng.AssertJUnit.assertEquals;

import java.io.FileNotFoundException;
import java.io.IOException;


import org.openqa.selenium.WebDriver;
import org.testng.Assert;


public class TB_BP_CallCentreExistingCC extends LocalBusinessFunctions
{
	/*
	 * FOR CALL CENTRE USER
	 * This business process is to verify existing COMPANY customer for 
	 * Editing Customer details, 
	 * Reallocating -COTR  
	 * Add Note and 
	 * Set Appointment Via CSR 
	 * INPUT: 
	 * This scenario requires an existing customer with an existing opportunity as input
	 * OUTPUT:
	 *
	 * Results.xls
	 */

	public TB_BP_CallCentreExistingCC() throws FileNotFoundException, IOException {
		super();
	
	}

	public void Call(WebDriver driver)
	{
		String login="", strCustomer="", strOpp="";
		//String strOpp="Fail";
		//String strResult="Fail";
		boolean bAddNote=false,bEdit=false, bOpp=false,bEr=false, bAppmt;
		try {
			
			 TB_GG_Report("TB_BP_CallCentreExistingCC","", false);

			login=TB_LB_Login(driver,5);
			strCustomer = TB_LB_CustomerSearch(driver,13);
			assertEquals("Match Found", strCustomer);
			bEdit=TB_LB_EditCustomer(driver, 3);
			bOpp = TB_LB_OpportunityLink(driver);
			
			if(!bOpp)
			{	
				strOpp = TB_LB_CreateOpportunity(driver,1);
				if(strOpp.equalsIgnoreCase("Pass"))
				bOpp = true;
			}
			bAddNote=TB_LB_AddOppNote(driver);
			TB_GG_Wait();
			bAppmt=TB_LB_SetAppointment(driver,1);
			TB_GG_Wait();
			bEr=TB_LB_EditReallocateOpp(driver,3); //allocate to a broker from different branch: COTR
			
			TB_LB_Logout(driver);
			System.out.println("Login:"+login);
			System.out.println("Search Customer:"+strCustomer);
			System.out.println("Edit Customer"+bEdit);
			System.out.println("OPP:"+bOpp);
			System.out.println("Appoinment:"+bAddNote);
			
			if(login.equalsIgnoreCase("Pass") && strCustomer.equalsIgnoreCase("Match Found")&& bEdit && bOpp && bEr && bAddNote && bAppmt)

			 {
				 TB_GG_Report("Final Test Result for TB_BP_CallCentreExistingCC","Pass", false);
				 TB_GG_Report("","", true);
			 }
			 	
			 else
			 {
				 TB_GG_Report("Final Test Result for TB_BP_CallCentreExistingCC","Fail", false);
				 TB_GG_Report("","", true);
			 }	 
			
			
		} 
		catch (Exception e) {
			
			e.printStackTrace();
		}
		
		assertEquals("Pass", login);
		
		Assert.assertTrue(bOpp);
		Assert.assertTrue(bEdit);
		Assert.assertTrue(bEr);
		Assert.assertTrue(bAddNote);
		
	}

	
}
