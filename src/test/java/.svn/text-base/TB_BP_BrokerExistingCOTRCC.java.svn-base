package com.root;

import static org.testng.AssertJUnit.assertEquals;

import java.io.FileNotFoundException;
import java.io.IOException;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.testng.Assert;

public class TB_BP_BrokerExistingCOTRCC extends LocalBusinessFunctions{
	public TB_BP_BrokerExistingCOTRCC() throws FileNotFoundException,
	IOException {
super();

}
	/*
	 * FOR BROKER USER
	 *This BP tests COTR Process for a Company type Customer
	 
	 * INPUT: 
	 * These scenario requires
	 * 1. An Existing Company Customer
	 * 2.Two brokers login details
	 * 
	 *Test Details:
	 *First broker create the Opp then logout.
	 *Login with second broker to initiate the COTR for same customer.
	 *Again login with First broker to verify the COTR process is done Successfully
	 * 
	 * output:
	 * Results.xls
	 */
public void Call(WebDriver driver)
{

String login="", strCustomer="";

String strOpp="Fail";
boolean bAppmt=false,bExist=false;
try {
		
		TB_GG_Report("TB_BP_BrokerExistingCOTRCC","", false);
		login=TB_LB_Login(driver,2);//2-b1
		strCustomer = TB_LB_CustomerSearch(driver,1);
		strOpp = TB_LB_CreateOpportunity(driver,1);
		TB_LB_Logout(driver);
		TB_GG_Wait();
		TB_LB_Login(driver,3);
		TB_LB_CustomerSearch(driver, 1);
		TB_LB_COTR(driver, 1);
		TB_GG_Wait(8000);
		TB_LB_Logout(driver);
		TB_GG_Wait();
		TB_LB_Login(driver,3);
		TB_LB_CustomerSearch(driver, 1);
		bExist=TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Img_COTR_PadLock")), intTimeOutForPaging);
		if(bExist)
		{	
			String strStepdetail="PadLock is available";
			TB_GG_Report(strStepdetail, "Pass", true);
		
		}
	
	
		TB_LB_Logout(driver);
	
			 if(login.equalsIgnoreCase("Pass") && strCustomer.equalsIgnoreCase("Match Found") && strOpp.equalsIgnoreCase("Pass")   && bAppmt && bExist )
		 {
			 TB_GG_Report("Final Test Result for TB_BP_BrokerExistingCC","Pass", false);
			 TB_GG_Report("","", true);
		 }
		 	
		 else
		 {
			 TB_GG_Report("Final Test Result for TB_BP_BrokerExistingCC","Fail", false);
			 TB_GG_Report("","", true);
		 }	 
	
	
} 

 catch (Exception e) {
	
	e.printStackTrace();
}

assertEquals("Pass", login);
assertEquals("Match Found", strCustomer);
assertEquals("Pass", strOpp);
Assert.assertTrue(bExist);

}
}

