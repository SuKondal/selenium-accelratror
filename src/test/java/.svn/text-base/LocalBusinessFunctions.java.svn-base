package com.root;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebDriverException;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;
import static org.testng.AssertJUnit.assertEquals;


public class LocalBusinessFunctions extends GlobalGenericFunctions{

	BusinessGlobalFunctions bgf;
	BusinessGlobalFunctions bgfJoint;
	public int intTimeOutForPaging=10000;
	private int iTimeOut;
	String strGivenAddressDetails="";
	String strAddressDetailsDisplayed="";
	String strGivenBroker;
	String strGivenBranch="";
	String strBrokerDisplayed="";
	String strBranchDisplayed="";
	String strSearchType="";
//	//created for  mixed customer Search Personal/Company
	String strSearchTypeJoint="";
	boolean bMixed=false;
	public String strCustId="";
	public String strCustIdJoint="";
	///For random generated data
	protected String strGenFName;
	protected String strGenLName;
	protected String strGenEntityName;
	String strGivenCustomerName="";
	double dAAprDisplayed=0;
	
	String strGivenOppNum=""; 
	String  strOppNo; 
	
	double dTotalNetIncome=0;
	double dTotalGrossIncome=0;
	double dAnnGrossTaxableIncome = 0;
	
	DecimalFormat df = new DecimalFormat("#.##");
	
	////// for Income
	
	double dBaseSalaryAcc=0;
	double dOverTimeAcc=0;
	double dPartTimeAcc=0;
	double dBonusAcc=0;
	double dInvestmentsAcc=0;
	double dFAAcc=0;
	double dGovPenAcc=0;
	double dPropRentIncAcc=0;
	double dGrsrentIncAcc=0;
	double dAvgSelfIncAcc=0;
	
	double dBaseSalaryTax=0;
	double dOverTimeTax=0;
	double dPartTimeTax=0;
	double dBonusTax=0;
	double dInvestmentsTax=0;
	double dFATax=0;
	double dGovPenTax=0;
	double dPropRentIncTax=0;
	double dGrsrentIncTax=0;
	double dAvgSelfIncTax=0;
//Negative Gearing Varaibles
	
	double dNegVariance = 0; 
	double dFinalExistingRate = 0;
	boolean bOutstandingBalance=false;
	boolean bOriginalAmount=false;
	
	
	//Negative Gearing for Proposed Investment Loans
	double dNegPropVariance = 0; 
	double dFinalPropRate = 0;
	//for Assessment Monthly Repayment
	String strLoanTerm="";
	String strRepaymentType = "";
	
	
	///////
	//////// for Living Expenses//////////////
	public final String[][] P_Couple =  new String[8][6];
	public final String[][] P_Single =  new String[8][6];
	public final String[][] F_Couple =  new String[8][6];
	public final String[][] F_Single =  new String[8][6];
	boolean loaded = false;
	Properties serv = new Properties(); 
	///////
	public LocalBusinessFunctions() throws FileNotFoundException, IOException {
		super();
		bgf = new BusinessGlobalFunctions();
	}
public void TB_LB_SetNames()
{
	this.strGenFName=TB_GG_GenerateRandomName();
	this.strGenLName=TB_GG_GenerateRandomName();
	this.strGenEntityName=TB_GG_GenerateRandomName()+" Ltd";
}
	/**********************************************************************************************************
	'  Function Name:	TB_LB_Login 
	'  Purpose: 		This function will login to the ToolBox 
	'  Inputs Parameters:Username,password
	'  Returns: 		boolean
	'  Author       : Ruchi
	'  Creation Date: 02/08/2012
/**********************************************************************************************************/

	public String TB_LB_Login(WebDriver driver,int intRowid)
	{
		
		super.driver= driver;
		String strFile=TB_GG_SetInputFile("TB_DFL_Login.xls");
		String strResult = "";
		String strTitle="";
		String strLogInfo="Login";
		TB_GG_Log(strLogInfo);
		TB_GG_Report(strLogInfo, "", true);
		try
			{
			String usName = TB_GG_ReadXL(intRowid,"Ed_LG_Username",strFile);
			driver.findElement(By.xpath(prop.getProperty("Ed_LG_Username"))).sendKeys(usName);
					
			driver.findElement(By.xpath(prop.getProperty("Ed_LG_Password"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_LG_Password",strFile));
					
			driver.findElement(By.xpath(prop.getProperty("Btn_LG_Login"))).click();
			TB_GG_Wait();
			strTitle=driver.getTitle();
		
		
			if(strTitle.equalsIgnoreCase("Aussie Toolbox | Customer Search"))
				{
					strResult="Pass";
					strLogInfo = usName+ ": Logged in successfully";
				}
			else if(TB_GG_DoesWebElementExist(driver,By.xpath(prop.getProperty("Txt_LG_LoginError")),intTimeOutForPaging))
				{
					strResult="Fail";
					strLogInfo ="Invalid Login Details"; 
							
				}
			else 
			   {
				strResult="Fail";
				strLogInfo ="Cannot Login to the ToolBox"; 
			   }
				
				
			TB_GG_Log(strLogInfo);
			TB_GG_Report(strLogInfo, strResult, true);
			
			}
			catch(Exception ex)
			{
	            TB_GG_Log("Got an exception! "+ ex.getMessage().toString());
	            
			}
			return strResult;
	}
	public String TB_LB_Logout(WebDriver driver)
	{
		String strResult = "";
		String strLogInfo="";
		try{
		//	driver.findElement(By.xpath(prop.getProperty("Btn_Logout"))).click();
			driver.findElement(By.linkText("Log Out")).click();
			if(TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Ed_LG_Username")), intTimeOut))
			strResult="Pass";
			else
			strResult="Fail";
		
			Thread.sleep(5000);
		}
		catch(Exception e)
		{
			e.printStackTrace();
			strResult="Fail";
			
		}
		strLogInfo ="Logged out";	
		TB_GG_Log(strLogInfo);
		TB_GG_Report(strLogInfo, strResult, true);
		return strResult;
		
	}

	/**********************************************************************************************************************************************************
	* @ Purpose:Search Personal/Company Customer
	* @param :Row number of TB_DFL_SearchCustomer.xls with all the data needed for customer Search 
	* @return boolean
	* @author Rusingh
	*
	 * 
	 * ********************************************************************************************************************************************************/                
public String TB_LB_CustomerSearch(WebDriver driver, int intRowid)
{
	return TB_LB_CustomerSearch(driver, intRowid,false);
}
public String TB_LB_CustomerSearch(WebDriver driver, int intRowid,boolean b)
{
	return TB_LB_CustomerSearch(driver, intRowid,b,"TB_DFL_SearchCustomer.xls");
}

public String TB_LB_CustomerSearch(WebDriver driver, int intRowid, boolean newcust,String strFilename )
{
		
		String strFile=TB_GG_SetInputFile(strFilename);
		
		///for displayed customer details
		String 	strCustomertNameDisplayed="";
		String strMobNumber="";
		String strResult = "";
		String strR="Fail";
		boolean bFound = false;
		String strCustSearch="";
		String strTitle="";
		String strStepDetail="Customer Search";
		
		///for given customer details
		
		String strGivenMobNumber="";
		String strFirstName;
		String strLastName;
		String strMobArea;
		String strMobNum;
		strCustSearch = TB_GG_ReadXL(intRowid,"Dlst_CS_SearchType",strFile);
		if(strSearchType.equals(""))
		{
			strSearchType=TB_GG_ReadXL(intRowid,"Dlst_CS_SearchType",strFile);
			 
		}
		else 
		{
		 strSearchTypeJoint = TB_GG_ReadXL(intRowid,"Dlst_CS_SearchType",strFile);
		 if( ! strSearchType.equalsIgnoreCase(strSearchTypeJoint))
		    bMixed=true;
		}
		
		TB_GG_Log(strStepDetail);
		TB_GG_Report(strStepDetail, "", true);
		try
		{	
			//if(bMixed)	
				
			TB_GG_SelectDDListItem(driver , prop.getProperty("Dlst_CS_SearchType"), "Search Type",TB_GG_ReadXL(intRowid,"Dlst_CS_SearchType",strFile));
			if(strCustSearch.equalsIgnoreCase("Personal") )/////////////Personal Type Customer Search
			{
				strStepDetail="Customer type is Personal ";
				if(this.strGenFName==null && this.strGenLName==null)
				{
					strFirstName=TB_GG_ReadXL(intRowid,"Ed_CSP_Firstname",strFile).trim();
				
					strLastName=TB_GG_ReadXL(intRowid,"Ed_CSP_Lastname",strFile).trim();
					
					
				}
				else
				{
					strFirstName=this.strGenFName;
					strLastName=this.strGenLName;
				}
				strMobArea=TB_GG_ReadXL(intRowid,"Ed_CSP_MobArea",strFile).trim();
				strMobNum=TB_GG_ReadXL(intRowid,"Ed_CSP_MobNum",strFile).trim();
				
				strGivenCustomerName=strFirstName + " "+ strLastName;
				strGivenMobNumber =strMobArea   + "-"+ strMobNum;
							
	
				TB_GG_SelectDDListItem(driver , prop.getProperty("Dlst_CSP_Title"), "Title",TB_GG_ReadXL(intRowid,"Dlst_CSP_Title",strFile));
				
				
				driver.findElement(By.xpath(prop.getProperty("Ed_CSP_Firstname"))).sendKeys(strFirstName);
				driver.findElement(By.xpath(prop.getProperty("Ed_CSP_Lastname"))).sendKeys(strLastName);
				driver.findElement(By.xpath(prop.getProperty("Ed_CSP_MobArea"))).sendKeys(strMobArea);
				driver.findElement(By.xpath(prop.getProperty("Ed_CSP_MobNum"))).sendKeys(strMobNum);
				
				bgf.TB_BG_SetCustomer(strCustSearch, strFirstName, strLastName,"");
			}
			else if(strCustSearch.equalsIgnoreCase("Company"))/////////////Company Type Customer Search
			{
				strStepDetail="Customer type is Company";
				if(this.strGenEntityName==null)
					strGivenCustomerName=TB_GG_ReadXL(intRowid,"Ed_CSC_Entityname",strFile).trim() ;
				else
					strGivenCustomerName=this.strGenEntityName;
				
				strMobArea=TB_GG_ReadXL(intRowid,"Ed_CSC_OfficeArea",strFile);
				strMobNum=TB_GG_ReadXL(intRowid,"Ed_CSC_OfficePhone",strFile);
				strGivenMobNumber = strMobArea + "-"+ strMobNum ;
				
				strFirstName=TB_GG_ReadXL(intRowid,"Ed_NCC_ContFirstname",strFile).trim();
				
				strLastName=TB_GG_ReadXL(intRowid,"Ed_NCC_ContSurname",strFile).trim();
				
				driver.findElement(By.xpath(prop.getProperty("Ed_CSC_Entityname"))).sendKeys(strGivenCustomerName);
				
				if( ! strFirstName.isEmpty() && ! strLastName.isEmpty())
				{   
					driver.findElement(By.xpath(prop.getProperty("Ed_NCC_ContFirstname"))).sendKeys(strFirstName);
					driver.findElement(By.xpath(prop.getProperty("Ed_NCC_ContSurname"))).sendKeys(strLastName);
				}
				driver.findElement(By.xpath(prop.getProperty("Ed_CSC_OfficeArea"))).sendKeys(strMobArea);
				driver.findElement(By.xpath(prop.getProperty("Ed_CSC_OfficePhone"))).sendKeys(strMobNum);
				bgf.TB_BG_SetCustomer(strCustSearch, strFirstName, strLastName,strGivenCustomerName);
			}
			
			//boolean bExist = isElementPresent(By.xpath(prop.getProperty("Btn_CS_Search")));
			TB_GG_Report(strStepDetail,"Pass", true);
			boolean bExist= TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Btn_CS_Search")),intTimeOutForPaging);
			if(bExist)
			{
					strStepDetail="Search button Found";
					TB_GG_ClickFast(driver,By.xpath(prop.getProperty("Btn_CS_Search")),"Search Button");
					//driver.findElement(By.xpath(prop.getProperty("Btn_CS_Search"))).click();
					TB_GG_Wait(3000);
					strResult="Pass";
					strTitle=driver.getTitle();
					
					
			}
			 else
				{
					strStepDetail="Search Button Not Found";
					strResult="Fail";
					
							
				}
			//TB_GG_Report(strStepDetail,strResult, true);
			//TB_GG_Log(strStepDetail);
			
					
			if(strTitle.equalsIgnoreCase("Aussie Toolbox | Customer Search Result"))
			{
				strStepDetail="Search Result Displayed";	
				TB_GG_Log(strStepDetail);
				TB_GG_Wait(6000);
				if(TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Tbl_CSR_ResTable")),9000))
				 /////////////Personal Type Customer Search
					
					{
						if(strCustSearch.equalsIgnoreCase("Personal"))

						{
						strCustomertNameDisplayed= driver.findElement(By.xpath(prop.getProperty("Txt_CSRP_CustomerNameFound"))).getText();
						strMobNumber = driver.findElement(By.xpath(prop.getProperty("Txt_CSRP_MobileNumber"))).getText();
						bFound=TB_LB_VerifyCustomer(strCustomertNameDisplayed, strGivenCustomerName);
						}
						else if(strCustSearch.equalsIgnoreCase("Company"))
						{
							if(TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Txt_CSRC_CustomerNameFound")),7000))
							{
								strCustomertNameDisplayed= driver.findElement(By.xpath(prop.getProperty("Txt_CSRC_CustomerNameFound"))).getText();
								System.out.println("Dissplayed name "+strCustomertNameDisplayed);
								strMobNumber = driver.findElement(By.xpath(prop.getProperty("Txt_CSRC_PhoneNumber"))).getText();
							    bFound=TB_LB_VerifyCustomer(strCustomertNameDisplayed, strGivenCustomerName);
							}
						}
						
						if(bFound)
						{
							strStepDetail="Customer found with \n Name: "+strCustomertNameDisplayed;
							
							if(strGivenMobNumber.equals(strMobNumber))
								{
									strStepDetail +=	" \n Contact Number: "+strMobNumber;
									strResult="Match Found";
									strR="Pass";
								}
							else
							{
								strR = "Fail";
								strStepDetail += "\n No Match for Contact Number " + strGivenMobNumber;
							}
							
						}
						else 
						{
							TB_GG_captureScreen(driver, "Search_Customer");
							strStepDetail="No Customer found with name " + strGivenCustomerName+" and Contact Number " + strGivenMobNumber;
							strResult="No Match Found";
							if(newcust) strR="Pass";
							else strR="Fail";
						}
									
					 }
				else if(TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Txt_CSR_CustomerNotFound")),intTimeOutForPaging))
				{
					strResult="Not Found";
					strStepDetail = "No Customer found with name " + strGivenCustomerName+" and Mobile Number " + strGivenMobNumber;
					if(newcust) strR="Pass";
					else strR="Fail";
					
				}
				//bResult=true;
				TB_GG_Report(strStepDetail,strR, true);
			}
			else
			{	
				TB_GG_captureScreen(driver, "Search_Customer");
				strResult="Customer Search has failed";
				strStepDetail = "Customer Search has failed";
				TB_GG_Report(strStepDetail,"Fail", true);
			}
			
		TB_GG_Log(strStepDetail);	
		}
		catch(NullPointerException ex) 
		{	
			System.out.println("Element does not found");
			ex.printStackTrace();
		}
		catch(Exception ex)
		{
			System.err.println("Got an exception! ");
            ex.printStackTrace();
            TB_GG_Log(ex.getMessage().toString());
		}
		return strResult;
		
	}
public String TB_LB_CustomerSearchDM(WebDriver driver, int intRowid, boolean newcust )
{
		
		String strFile=TB_GG_SetInputFile("TB_DFL_SearchCustomer.xls");
		
		///for displayed customer details
		String 	strCustomertNameDisplayed="";
		String strMobNumber="";
		String strResult = "";
		String strR="Fail";
		boolean bFound = false;
		String strCustSearch="";
		String strTitle="";
		String strStepDetail="Customer Search";
		
		///for given customer details
		
		String strGivenMobNumber="";
		String strFirstName;
		String strLastName;
		String strMiddleName="";
		String strMobArea;
		String strMobNum;
		strCustSearch = TB_GG_ReadXL(intRowid,"Dlst_CS_SearchType",strFile);
		if(strSearchType.equals(""))
		{
			strSearchType=TB_GG_ReadXL(intRowid,"Dlst_CS_SearchType",strFile);
			 
		}
		else 
		{
		 strSearchTypeJoint = TB_GG_ReadXL(intRowid,"Dlst_CS_SearchType",strFile);
		 if( ! strSearchType.equalsIgnoreCase(strSearchTypeJoint))
		    bMixed=true;
		}

		TB_GG_Log(strStepDetail);
		TB_GG_Report(strStepDetail, "", true);
		try
		{	
			//if(bMixed)	
				
			TB_GG_SelectDDListItem(driver , prop.getProperty("Dlst_CS_SearchType"), "Search Type",TB_GG_ReadXL(intRowid,"Dlst_CS_SearchType",strFile));
			if(strCustSearch.equalsIgnoreCase("Personal") )/////////////Personal Type Customer Search
			{
				strStepDetail="Customer type is Personal ";
				if(this.strGenFName==null && this.strGenLName==null)
				{
					strFirstName=TB_GG_ReadXL(intRowid,"Ed_CSP_Firstname",strFile).trim();
				
					strLastName=TB_GG_ReadXL(intRowid,"Ed_CSP_Lastname",strFile).trim();
					
					strMiddleName=TB_GG_ReadXL(intRowid,"Ed_CSP_Middlename",strFile).trim();
					
				}
				else
				{
					strFirstName=this.strGenFName;
					strLastName=this.strGenLName;
				}
				strMobArea=TB_GG_ReadXL(intRowid,"Ed_CSP_MobArea",strFile).trim();
				strMobNum=TB_GG_ReadXL(intRowid,"Ed_CSP_MobNum",strFile).trim();
				if(strMiddleName !="")
				strGivenCustomerName=strFirstName + " "+strMiddleName+" "+ strLastName;
				else
					strGivenCustomerName=strFirstName + " "+strLastName;
				strGivenMobNumber =strMobArea   + "-"+ strMobNum;
							
	
				TB_GG_SelectDDListItem(driver , prop.getProperty("Dlst_CSP_Title"), "Title",TB_GG_ReadXL(intRowid,"Dlst_CSP_Title",strFile));
				
				
				TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_CSP_Firstname")),"First Name",strFirstName);
				TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_CSP_Middlename")),"Middle Name",strMiddleName);

				TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_CSP_Lastname")),"Last Name",strLastName);
				TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_CSP_MobArea")),"Mobile Area",strMobArea);
				TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_CSP_MobNum")),"Mobile Number",strMobNum);
				
			}
			else if(strCustSearch.equalsIgnoreCase("Company"))/////////////Company Type Customer Search
			{
				strStepDetail="Customer type is Company";
				if(this.strGenEntityName==null)
					strGivenCustomerName=TB_GG_ReadXL(intRowid,"Ed_CSC_Entityname",strFile).trim() ;
				else
					strGivenCustomerName=this.strGenEntityName;
				
				strMobArea=TB_GG_ReadXL(intRowid,"Ed_CSC_OfficeArea",strFile);
				strMobNum=TB_GG_ReadXL(intRowid,"Ed_CSC_OfficePhone",strFile);
				strGivenMobNumber = strMobArea + "-"+ strMobNum ;
				
				//strFirstName=TB_GG_ReadXL(intRowid,"Ed_NCC_ContFirstname",strFile).trim();
				
			//	strLastName=TB_GG_ReadXL(intRowid,"Ed_NCC_ContSurname",strFile).trim();
				
				TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_CSC_Entityname")),"Entity Name ",strGivenCustomerName);
				
			/*	if( ! strFirstName.isEmpty() && ! strLastName.isEmpty())
				{   
					driver.findElement(By.xpath(prop.getProperty("Ed_NCC_ContFirstname"))).sendKeys(strFirstName);
					driver.findElement(By.xpath(prop.getProperty("Ed_NCC_ContSurname"))).sendKeys(strLastName);
				}*/
				driver.findElement(By.xpath(prop.getProperty("Ed_CSC_OfficeArea"))).sendKeys(strMobArea);
				driver.findElement(By.xpath(prop.getProperty("Ed_CSC_OfficePhone"))).sendKeys(strMobNum);
			}
			
			//boolean bExist = isElementPresent(By.xpath(prop.getProperty("Btn_CS_Search")));
			TB_GG_Report(strStepDetail,"Pass", true);
			boolean bExist= TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Btn_CS_Search")),intTimeOutForPaging);
			if(bExist)
			{
					strStepDetail="Search button Found";
					TB_GG_ClickFast(driver,By.xpath(prop.getProperty("Btn_CS_Search")),"Search Button");
					//driver.findElement(By.xpath(prop.getProperty("Btn_CS_Search"))).click();
					TB_GG_WaitAnElementPresent(driver, By.xpath(prop.getProperty("Tbl_CSR_ResTable")),30000);
					TB_GG_Wait(3000);
					strResult="Pass";
					strTitle=driver.getTitle();
					
					
			}
			 else
				{
					strStepDetail="Search Button Not Found";
					strResult="Fail";
					
							
				}
			//TB_GG_Report(strStepDetail,strResult, true);
			//TB_GG_Log(strStepDetail);
			
					
			if(strTitle.equalsIgnoreCase("Aussie Toolbox | Customer Search Result"))
			{
				strStepDetail="Search Result Displayed";	
				TB_GG_Log(strStepDetail);
				TB_GG_Wait(6000);
				if(TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Tbl_CSR_ResTable")),9000))
				 /////////////Personal Type Customer Search
					
					{
						if(strCustSearch.equalsIgnoreCase("Personal"))

						{
						strCustomertNameDisplayed= driver.findElement(By.xpath(prop.getProperty("Txt_CSRP_CustomerNameFound"))).getText();
						strMobNumber = driver.findElement(By.xpath(prop.getProperty("Txt_CSRP_MobileNumber"))).getText();
						bFound=TB_LB_VerifyCustomer(strCustomertNameDisplayed, strGivenCustomerName);
						}
						else if(strCustSearch.equalsIgnoreCase("Company"))
						{
							if(TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Txt_CSRC_CustomerNameFound")),7000))
							{
								strCustomertNameDisplayed= driver.findElement(By.xpath(prop.getProperty("Txt_CSRC_CustomerNameFound"))).getText();
								System.out.println("Dissplayed name "+strCustomertNameDisplayed);
								strMobNumber = driver.findElement(By.xpath(prop.getProperty("Txt_CSRC_PhoneNumber"))).getText();
							    bFound=TB_LB_VerifyCustomer(strCustomertNameDisplayed, strGivenCustomerName);
							}
						}
						
						if(bFound)
						{
							strStepDetail="Customer found with \n Name: "+strCustomertNameDisplayed;
							
							if(strGivenMobNumber.equals(strMobNumber))
								{
									strStepDetail +=	" \n Contact Number: "+strMobNumber;
									strResult="Match Found";
									strR="Pass";
								}
							else
							{
								strR = "Fail";
								strStepDetail += "\n No Match for Contact Number " + strGivenMobNumber;
							}
							
						}
						else 
						{
							TB_GG_captureScreen(driver, "Search_Customer");
							strStepDetail="No Customer found with name " + strGivenCustomerName+" and Contact Number " + strGivenMobNumber;
							strResult="No Match Found";
							if(newcust) strR="Pass";
							else strR="Fail";
						}
									
					 }
				else if(TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Txt_CSR_CustomerNotFound")),intTimeOutForPaging))
				{
					strResult="Not Found";
					strStepDetail = "No Customer found with name " + strGivenCustomerName+" and Mobile Number " + strGivenMobNumber;
					if(newcust) strR="Pass";
					else strR="Fail";
					
				}
				//bResult=true;
				TB_GG_Report(strStepDetail,strR, true);
			}
			else
			{	
				TB_GG_captureScreen(driver, "Search_Customer");
				strResult="Customer Search has failed";
				strStepDetail = "Customer Search has failed";
				TB_GG_Report(strStepDetail,"Fail", true);
			}
			
		TB_GG_Log(strStepDetail);	
		}
		catch(NullPointerException ex) 
		{	
			System.out.println("Element does not found");
			ex.printStackTrace();
		}
		catch(Exception ex)
		{
			System.err.println("Got an exception! ");
            ex.printStackTrace();
            TB_GG_Log(ex.getMessage().toString());
		}
		return strResult;
		
	}

/**********************************************************************************************************************************************************
* @ Purpose:Create Personal/Company Customer
* @param :Row number of TB_DFL_CreateCustomer.xls with all the data needed to create customer 
* @return boolean
* @author Rusingh
 * ********************************************************************************************************************************************************/                

public String TB_LB_CreateCustomer(WebDriver driver,int intRowid ){
	
	String strFile=TB_GG_SetInputFile("TB_DFL_CreateCustomer.xls");
	String strBroker="";
	//boolean bResult = false;
	String strStepDetails="";
	String strStatus="";
	String strSuiteStatus="";
	TB_GG_Report("Creating Customer","", true);
	
		try{
			boolean bExist= TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Btn_NC_NewCustomer")),intTimeOutForPaging);
		
			 if(bExist)
			 {
				 strStepDetails="New Customer button Found";
				 TB_GG_Report(strStepDetails,"Pass", true);
				 TB_GG_Log(strStepDetails);
				 driver.findElement(By.xpath(prop.getProperty("Btn_NC_NewCustomer"))).click();
				 TB_GG_Wait(1000);
	        	 TB_GG_SwitchToIframe(driver,prop.getProperty("Frm_AllNewframes"));
	        	 strStepDetails="Creating a new customer";
				 TB_GG_Report(strStepDetails,"Pass", true);
				 TB_GG_Log(strStepDetails);	

	        
				if(strSearchType.equalsIgnoreCase("Personal"))/////////////Personal Type Customer Search

				{
						
			        	 if(TB_GG_ReadXL(intRowid,"Cbox_NCP_AussieTeamMember",strFile).equalsIgnoreCase("Yes"))
						 {   
			        		 driver.findElement(By.xpath(prop.getProperty("Cbox_NCP_AussieTeamMember"))).click();
			        		 TB_GG_Report("AussieTeamMember chkbox click","", true);
						 }
			        	 /////////////////check for customer type:Personal or company
			        	 WebElement calendar= driver.findElement(By.xpath(prop.getProperty("Ed_NCP_DOB")));
			     		calendar.clear();
			     		calendar.sendKeys(TB_GG_ReadXL(intRowid, "Ed_NCP_DOB", strFile));//"28/09/1998");

						TB_GG_SelectDDListItem(driver , prop.getProperty("Dlst_NCP_MaritalStatus"), "Marital Status",TB_GG_ReadXL(intRowid,"Dlst_NCP_MaritalStatus",strFile));
														
						driver.findElement(By.xpath(prop.getProperty("Ed_NCP_Email"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCP_Email",strFile));
													
						driver.findElement(By.xpath(prop.getProperty("Ed_NCP_BuildingName"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCP_BuildingName",strFile));
						 driver.findElement(By.xpath(prop.getProperty("Ed_NCP_FloorNum"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCP_FloorNum",strFile));

						driver.findElement(By.xpath(prop.getProperty("Ed_NCP_UnitNum"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCP_UnitNum",strFile));
						driver.findElement(By.xpath(prop.getProperty("Ed_NCP_StreetName"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCP_StreetName",strFile));
						driver.findElement(By.xpath(prop.getProperty("Ed_NCP_StreetNum"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCP_StreetNum",strFile));
								
						TB_GG_SelectDDListItem(driver , prop.getProperty("Dlst_NCP_StreetType"), "Street Type",TB_GG_ReadXL(intRowid,"Dlst_NCP_StreetType",strFile));
		
						driver.findElement(By.xpath(prop.getProperty("Ed_NCP_Suburb"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCP_Suburb",strFile));
						
						TB_GG_Wait();
						
						driver.findElement(By.cssSelector("li.ui-autocomplete1-even")).click();//auto select of state and pin code
						
						driver.findElement(By.xpath(prop.getProperty("Dlst_NCP_Country"))).click();
					
						TB_GG_SelectDDListItem(driver , prop.getProperty("Dlst_NCP_Country"), "Country",TB_GG_ReadXL(intRowid,"Dlst_NCP_Country",strFile));	
						TB_GG_Wait();
						strGivenAddressDetails=TB_GG_ReadXL(intRowid,"Ed_NCP_BuildingName",strFile)+" "+TB_GG_ReadXL(intRowid,"Ed_NCP_FloorNum",strFile)+" "+ TB_GG_ReadXL(intRowid,"Ed_NCP_UnitNum",strFile)+"\n"+TB_GG_ReadXL(intRowid,"Ed_NCP_StreetNum",strFile)+" "+ TB_GG_ReadXL(intRowid,"Ed_NCP_StreetName",strFile)+" "+ TB_GG_ReadXL(intRowid,"Dlst_NCP_StreetType",strFile)+"\n"+TB_GG_ReadXL(intRowid,"Ed_NCP_Suburb",strFile)+"\n"+TB_GG_ReadXL(intRowid,"Dlst_NCP_State",strFile)+"\n"+TB_GG_ReadXL(intRowid,"Ed_NCP_Postcode",strFile)+"\n"+TB_GG_ReadXL(intRowid,"Dlst_NCP_Country",strFile)	;

						//strGivenAddressDetails=TB_GG_ReadXL(intRowid,"Ed_NCP_BuildingName",strFile)+TB_GG_ReadXL(intRowid,"Ed_NCP_UnitNum",strFile)+TB_GG_ReadXL(intRowid,"Ed_NCP_StreetNum",strFile)+TB_GG_ReadXL(intRowid,"Ed_NCP_StreetName",strFile)+TB_GG_ReadXL(intRowid,"Dlst_NCP_StreetType",strFile)+TB_GG_ReadXL(intRowid,"Ed_NCP_Suburb",strFile)+TB_GG_ReadXL(intRowid,"Ed_NCP_Postcode",strFile);
					
						if (TB_GG_ReadXL(intRowid,"Cbox_NCP_SamePostalAddress",strFile).equalsIgnoreCase("Yes"))
						{
							//driver.findElement(By.xpath(prop.getProperty("Cbox_NCP_SamePostalAddress"))).click();
							//TB_GG_Report(" Checking same as Postal Addresss","Pass", true);
						}
						else
						{
							
						}
						if (TB_GG_ReadXL(intRowid,"Cbox_NCP_Contact",strFile).equalsIgnoreCase("Yes"))
							driver.findElement(By.xpath(prop.getProperty("Cbox_NCP_Contact"))).click();
						
						
						
				//Broker is always selected by which is it is login for a broker user
				// for call centre user
			
						
						new Select(driver.findElement(By.id("personal-ownership-idBranch"))).selectByVisibleText(TB_GG_ReadXL(intRowid,"Dlst_NCP_Branch",strFile));
						TB_GG_Wait();
				// for call centre user
						strBroker=TB_GG_ReadXL(intRowid,"Dlst_NCP_Broker",strFile);
						
				// for call centre user
						if(driver.findElement(By.xpath(prop.getProperty("Dlst_NCP_SourceType"))).isEnabled()) 
							{
								TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_NCP_SourceType"), "Source Type",TB_GG_ReadXL(intRowid,"Dlst_NCP_SourceType",strFile));
								if(!strBroker.equals(""))
								TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_NCP_Broker"),"Broker",strBroker);
							}
						//	
						TB_GG_Wait();
						TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_NCP_SourceMode"), "Source Mode",TB_GG_ReadXL(intRowid,"Dlst_NCP_SourceMode",strFile));
						TB_GG_Wait();
						TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_NCP_SourceMotivation"), "Source Motivation",TB_GG_ReadXL(intRowid,"Dlst_NCP_SourceMotivation",strFile));


						TB_GG_Wait(8000);
						boolean bExistsst=driver.findElement(By.xpath(prop.getProperty("Dlst_NCP_SourceTrigger"))).isDisplayed();
						System.out.println(bExistsst);
						if(bExistsst)
							TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_NCP_SourceTrigger"), "Source Trigger",TB_GG_ReadXL(intRowid,"Dlst_NCP_SourceTrigger",strFile));

						
						TB_GG_SelectDDListItem(driver , prop.getProperty("Dlst_NCP_Status"), "Status",TB_GG_ReadXL(intRowid,"Dlst_NCP_Status",strFile));
					//	TB_GG_SelectDDListItem(driver , prop.getProperty("Dlst_NCP_Rating"), "Rating",TB_GG_ReadXL(intRowid,"Dlst_NCP_Rating",strFile));
					
						
		                
						
						if (!TB_GG_ReadXL(intRowid,"Ed_NCP_StatusDate",strFile).equalsIgnoreCase(""))
							driver.findElement(By.xpath(prop.getProperty("Ed_NCP_StatusDate"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCP_StatusDate",strFile));
							driver.findElement(By.xpath(prop.getProperty("Ed_NCP_StatusDate"))).sendKeys(Keys.TAB);
						
							strGivenBroker=TB_GG_getSelectedOption(driver.findElement(By.xpath(prop.getProperty("Dlst_NCP_Broker"))));//driver.findElement(By.xpath(prop.getProperty("Dlst_NCP_Broker"))).getText();//TB_GG_GetValuesOfDropdownlist(driver.findElement(By.xpath(prop.getProperty("Ed_NCP_StatusDate"))));
							strGivenBranch=TB_GG_ReadXL(intRowid,"Dlst_NCP_Branch",strFile);
						/*	strBrokerDisplayed=driver.findElement(By.xpath(prop.getProperty("Txt_NCP_Broker"))).getText();
							strBranchDisplayed=driver.findElement(By.xpath(prop.getProperty("Txt_NCP_Branch"))).getText();
*/
				}
				else if(strSearchType.equalsIgnoreCase("Company"))
				{
					strBroker=TB_GG_ReadXL(intRowid,"Dlst_NCC_Broker",strFile);
					//Company  Details Entered
					 if(TB_GG_ReadXL(intRowid,"Cbox_NCC_AussieTeamMember",strFile).equalsIgnoreCase("Yes"))
						 driver.findElement(By.xpath(prop.getProperty("Cbox_NCC_AussieTeamMember"))).click();

					 	WebElement calendar1= driver.findElement(By.xpath(prop.getProperty("Ed_NCC_CompanyEstd")));
			     		calendar1.clear();
			     		calendar1.sendKeys(TB_GG_ReadXL(intRowid, "Ed_NCC_CompanyEstd", strFile));//"28/09/1998");

					 driver.findElement(By.xpath(prop.getProperty("Ed_NCC_ABN"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCC_ABN",strFile));
					 driver.findElement(By.xpath(prop.getProperty("Ed_NCC_ACN"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCC_ACN",strFile));
					 
				
					 ///Company  Contact Details Entered
					TB_GG_SelectDDListItem(driver , prop.getProperty("Dlst_NCC_Title"), "Title",TB_GG_ReadXL(intRowid,"Dlst_NCC_Title",strFile));
					 driver.findElement(By.xpath(prop.getProperty("Ed_NCC_MobArea"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCC_MobArea",strFile));
					 driver.findElement(By.xpath(prop.getProperty("Ed_NCC_MobNum"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCC_MobNum",strFile));
					 driver.findElement(By.xpath(prop.getProperty("Ed_NCC_AltPhNum"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCC_AltPhNum",strFile));
					 driver.findElement(By.xpath(prop.getProperty("Ed_NCC_FaxArea"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCC_FaxArea",strFile));
					 driver.findElement(By.xpath(prop.getProperty("Ed_NCC_FaxNum"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCC_FaxNum",strFile));
					 driver.findElement(By.xpath(prop.getProperty("Ed_NCC_Website"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCC_Website",strFile));
					 driver.findElement(By.xpath(prop.getProperty("Ed_NCC_Email"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCC_Email",strFile));
					
				
						
					 driver.findElement(By.xpath(prop.getProperty("Ed_NCC_BuildingName"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCC_BuildingName",strFile));
					 driver.findElement(By.xpath(prop.getProperty("Ed_NCC_FloorNum"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCC_FloorNum",strFile));
					 driver.findElement(By.xpath(prop.getProperty("Ed_NCC_UnitNum"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCC_UnitNum",strFile));
					 driver.findElement(By.xpath(prop.getProperty("Ed_NCC_StreetNum"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCC_StreetNum",strFile));
					 driver.findElement(By.xpath(prop.getProperty("Ed_NCC_StreetName"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCC_StreetName",strFile));
					 TB_GG_SelectDDListItem(driver , prop.getProperty("Dlst_NCC_StreetType"), "Street Type",TB_GG_ReadXL(intRowid,"Dlst_NCC_StreetType",strFile));
					 driver.findElement(By.xpath(prop.getProperty("Ed_NCC_Suburb"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCC_Suburb",strFile));
					
					 TB_GG_Wait();
					 driver.findElement(By.cssSelector("li.ui-autocomplete1-even")).click();
					 driver.findElement(By.xpath(prop.getProperty("Ed_NCC_Suburb"))).click();
					
					 TB_GG_Wait();
					 TB_GG_SelectDDListItem(driver , prop.getProperty("Dlst_NCC_Country"), "Country",TB_GG_ReadXL(intRowid,"Dlst_NCC_Country",strFile));				 if (TB_GG_ReadXL(intRowid,"Cbox_NCC_SamePostalAddress",strFile).equalsIgnoreCase("Yes"))
					
						 if (TB_GG_ReadXL(intRowid,"Cbox_NCC_SamePostalAddress",strFile).equalsIgnoreCase("Yes"))
						 driver.findElement(By.xpath(prop.getProperty("Cbox_NCC_SamePostalAddress"))).click();
					 else{
						 
					 }
					 if (TB_GG_ReadXL(intRowid,"Cbox_NCC_SameRegAddress",strFile).equalsIgnoreCase("Yes"))
							driver.findElement(By.xpath(prop.getProperty("Cbox_NCC_SameRegAddress"))).click();
					 TB_GG_Report("Selecting the Branch","Pass", true);
						
					 new Select(driver.findElement(By.id("company-ownership-idBranch"))).selectByVisibleText(TB_GG_ReadXL(intRowid,"Dlst_NCC_Branch",strFile));
					 TB_GG_Report("Selecting the Source Mode","Pass", true);
					// for call centre user
					 
						if(driver.findElement(By.xpath(prop.getProperty("Dlst_NCC_SourceType"))).isEnabled()) 
							{
								TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_NCC_SourceType"), "Source Type",TB_GG_ReadXL(intRowid,"Dlst_NCC_SourceType",strFile));
								if(!strBroker.equals(""))
								TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_NCC_Broker"),"Broker",strBroker);
							}
						//	
						TB_GG_Wait();
					 new Select(driver.findElement(By.id("company-source-idSourceMode"))).selectByVisibleText(TB_GG_ReadXL(intRowid,"Dlst_NCC_SourceMode",strFile));
					 TB_GG_Report("Selecting the Source Motivation","Pass", true);
					 TB_GG_Wait( );
					 new Select(driver.findElement(By.id("company-source-idSourceMotivation"))).selectByVisibleText(TB_GG_ReadXL(intRowid,"Dlst_NCC_SourceMotivation",strFile));
					 TB_GG_Report("Selecting the Source Trigger","Pass", true);
					// TB_GG_Wait( );
					 //new Select(driver.findElement(By.id("company-source-idSourceTrigger"))).selectByVisibleText(TB_GG_ReadXL(intRowid,"Dlst_NCC_SourceTrigger",strFile));
					 
					 
				TB_GG_SelectDDListItem(driver , prop.getProperty("Dlst_NCC_Status"), "Status",TB_GG_ReadXL(intRowid,"Dlst_NCC_Status",strFile));
				driver.findElement(By.xpath(prop.getProperty("Ed_NCC_StatusDate"))).sendKeys(Keys.TAB);
				strGivenAddressDetails=TB_GG_ReadXL(intRowid,"Ed_NCC_BuildingName",strFile)+" "+TB_GG_ReadXL(intRowid,"Ed_NCC_FloorNum",strFile)+" " + TB_GG_ReadXL(intRowid,"Ed_NCC_UnitNum",strFile)+"\n"+TB_GG_ReadXL(intRowid,"Ed_NCC_StreetNum",strFile)+" "+ TB_GG_ReadXL(intRowid,"Ed_NCC_StreetName",strFile)+" "+ TB_GG_ReadXL(intRowid,"Dlst_NCC_StreetType",strFile)+"\n"+TB_GG_ReadXL(intRowid,"Ed_NCC_Suburb",strFile)+"\n"+TB_GG_ReadXL(intRowid,"Dlst_NCC_State",strFile)+"\n"+TB_GG_ReadXL(intRowid,"Ed_NCC_Postcode",strFile)+"\n"+TB_GG_ReadXL(intRowid,"Dlst_NCC_Country",strFile)	;

					//	TB_GG_ReadXL(intRowid,"Ed_NCC_BuildingName",strFile)+TB_GG_ReadXL(intRowid,"Ed_NCC_UnitNum",strFile)+TB_GG_ReadXL(intRowid,"Ed_NCC_StreetNum",strFile)+TB_GG_ReadXL(intRowid,"Ed_NCC_StreetName",strFile)+TB_GG_ReadXL(intRowid,"Dlst_NCC_StreetType",strFile)+TB_GG_ReadXL(intRowid,"Ed_NCC_Suburb",strFile)+TB_GG_ReadXL(intRowid,"Ed_NCC_Postcode",strFile);
				//TB_GG_ReadXL(intRowid,"Ed_NCC_BuildingName",strFile)+ 23\n50 Street Circle\nSydney\nNew South Wales\n2000\nAustralia
				//		TB_GG_ReadXL(intRowid,"Ed_NCC_BuildingName",strFile)+TB_GG_ReadXL(intRowid,"Ed_NCC_UnitNum",strFile)+TB_GG_ReadXL(intRowid,"Ed_NCC_StreetNum",strFile)+TB_GG_ReadXL(intRowid,"Ed_NCC_StreetName",strFile)+TB_GG_ReadXL(intRowid,"Dlst_NCC_StreetType",strFile)+TB_GG_ReadXL(intRowid,"Ed_NCC_Suburb",strFile)+TB_GG_ReadXL(intRowid,"Ed_NCC_Postcode",strFile);
			
				strGivenBroker = TB_GG_getSelectedOption(driver.findElement(By.xpath(prop.getProperty("Dlst_NCC_Broker"))));//driver.findElement(By.xpath(prop.getProperty("Dlst_NCP_Broker"))).getText();
				strGivenBranch = TB_GG_ReadXL(intRowid,"Dlst_NCC_Branch",strFile);
			//	strBrokerDisplayed=driver.findElement(By.xpath(prop.getProperty("Txt_NCC_Broker"))).getText();
			//	strBranchDisplayed=driver.findElement(By.xpath(prop.getProperty("Txt_NCC_Branch"))).getText();
				
				}
				driver.findElement(By.id("save")).sendKeys(Keys.ENTER);
				TB_GG_Wait(40000);
				driver.switchTo().defaultContent();
				if(strSearchType.equalsIgnoreCase("Personal"))
				{
					strAddressDetailsDisplayed=driver.findElement(By.xpath(prop.getProperty("Txt_NCP_AllAddress"))).getText();
					
					TB_GG_Wait(5000);
			    	TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Txt_NCP_AllAddress")), 5000);
			  
			    	if(!(strGivenBroker.contains("- Select -") || strGivenBroker.equals(null)))
			    		strBrokerDisplayed=driver.findElement(By.xpath(prop.getProperty("Txt_NCP_Broker"))).getText();
			        if(!(strGivenBranch.equals("")|| strGivenBranch.equals(null)))
			        	strBranchDisplayed=driver.findElement(By.xpath(prop.getProperty("Txt_NCP_Branch"))).getText();
			      
				}
				
				else if(strSearchType.equalsIgnoreCase("Company")){
				strAddressDetailsDisplayed=driver.findElement(By.xpath(prop.getProperty("Txt_NCC_AllAddress"))).getText();
				if(!(strGivenBroker.contains("- Select -") || strGivenBroker.equals(null)))
				strBrokerDisplayed=driver.findElement(By.xpath(prop.getProperty("Txt_NCC_Broker"))).getText();
		        if(!(strGivenBranch.equals("")|| strGivenBranch.equals(null)))
				strBranchDisplayed=driver.findElement(By.xpath(prop.getProperty("Txt_NCC_Branch"))).getText();
				}
				if(TB_LB_VerifyDataCaptured_Customer(strGivenAddressDetails,strGivenBroker,strGivenBranch))
					{
						TB_GG_Report("Customer is created Successfully	","Pass", true);
						strSuiteStatus="Pass";
					}
				else
					{
					
					TB_GG_Report("Customer is not created	","Fail", true);
					strSuiteStatus="Fail";
					}
				
			 }
			 else
			 {
	        	strStepDetails="New Customer button not Found";
	        	
			 	strStatus="Fail";
			 	TB_GG_Log(strStepDetails);
			 	TB_GG_Report(strStepDetails,strStatus, true);
			 	strSuiteStatus="Fail";
			 }
		
		
			 /////need to be deleted//////after testing
			
	}
	
	catch(Exception ex)
	{
		System.err.println("Got an exception! ");
        ex.printStackTrace();
        TB_GG_Log(ex.getMessage().toString());
	}

	return strSuiteStatus;
			

}
	
/**********************************************************************************************************************************************************
* TB_LB_EditOpportunity Edit an opportunity for customer- personal/company
* @return boolean
* @author Skaur
* @category Opportunity 
 * 
 * ********************************************************************************************************************************************************/                
public boolean TB_LB_OpportunityLink(WebDriver driver)
{

          
           String strResult = "Not Executed";
           boolean bReturn= false;
           String strStepDetail="";
           String strXOpp=""; 
           String givenName="";
           TB_GG_Report("Edit via Opportunity Link","", true);
       try{
                                                                                            
                        
                  if(strSearchType.equalsIgnoreCase("Personal"))  strXOpp =/*"Lnk_CSRP_OppLink";//*/"Cbox_CSRP_OpportunityTick";
                   
                  else if(strSearchType.equalsIgnoreCase("Company"))strXOpp ="Cbox_CSRC_OpportunityTick";
                      
                  boolean bExist = TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty(strXOpp)),intTimeOutForPaging);   
                        
                        if(bExist)
                        {
                                     strStepDetail="No Padlock ,Customer is available for Opportunity ";
                                     strResult="Pass";
                                     TB_GG_Report(strStepDetail, strResult, true);  
                                     TB_GG_Log(strStepDetail);
                                                String s = "";
                                     
                                        if(strSearchType.equalsIgnoreCase("Personal"))
                                                {
                                                       strXOpp = "Img_CSRP_EditOpportunity";
                                                       s="Lb_CSRP_EditOpp";
                                                }
                                         else if(strSearchType.equalsIgnoreCase("Company"))
                                                {
                                                       strXOpp = "Img_CSRC_EditOpportunity";
                                                       s="Lb_CSRC_EditOpp";
                                                }
                                        //
                                        if(driver.findElement(By.xpath(prop.getProperty(s))).getText().equals(""))
                                        {
                                                strStepDetail= givenName+" has no active opportunity ";
                                                strResult="Pass";
                                                //TB_GG_Report(strStepDetail, strResult, true);  
                                                TB_GG_Log(strStepDetail);
                                                bReturn=false;
                                        }
                                        else
                                        {
                                                TB_GG_Click(driver, By.xpath(prop.getProperty(strXOpp)),"Opportunity link");
                                                TB_GG_Wait();
                                                /* if(driver.getTitle().contains("Opportunity"))
                                                   {
                                                    	   		bgf.setOpp(driver.findElement(By.xpath(prop.getProperty("Ed_OPP_No"))).getText());
                                                   }*/
                                                 strStepDetail="Edit an existing Opportunity";
                                                 strResult="Pass";
                                                 TB_GG_Report(strStepDetail, strResult, true);  
                                                 TB_GG_Log(strStepDetail);
                                                 bReturn= true;
                                        }
                        } 
                        else TB_GG_captureScreen(driver, "Edit_Existing_Opp");
       }
       catch(Exception e)
       {
              e.printStackTrace();
              bReturn= false;
       }
              return bReturn;
}

/**********************************************************************************************************************************************************
* TB_LB_CreateOpportunity creates an opportunity for customer- personal/company
* @return String
* @author Skaur
* @category Opportunity 
 * 
 * ********************************************************************************************************************************************************/                
public String TB_LB_CreateOpportunity(WebDriver driver, int intRowid )
{       
    
	    //Set Data input file and row 
	    String strFile=TB_GG_SetInputFile("TB_DFL_CreateOpportunity.xls");
	  //  int intRowid=TB_GG_GetExecutionRow();
	    
	    String strResult = "Not Executed", strReturn="";
	    
	    String strStepDetail="";
	    String[] custName;
	    String strXOpp=""; 
	    String givenName="";
    
    	try{
                                                                                            
    			TB_GG_Report("Creating Opportunity","", true);       
                  if(strSearchType.equalsIgnoreCase("Personal"))  strXOpp ="Cbox_CSRP_OpportunityTick";
                   
                  else if(strSearchType.equalsIgnoreCase("Company"))strXOpp ="Cbox_CSRC_OpportunityTick";
                      
                  boolean bExist = TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty(strXOpp)),intTimeOutForPaging);   
                        
                        if(bExist)
                        {			 
                                     strStepDetail="No Padlock ,Customer is available for Opportunity ";
                                     strResult="Pass";
                                     TB_GG_Report(strStepDetail, strResult, true);  
                                     TB_GG_Log(strStepDetail);
                                     driver.findElement(By.xpath(prop.getProperty(strXOpp))).click();
                                     TB_GG_Wait( );
                                     strStepDetail="Creating a new Opportunity";
                                     TB_GG_Log(strStepDetail);
                                     custName = TB_GG_WaitAndGetValuesOfDropdownlist(driver.findElement(By.id((prop.getProperty("Cb_OPP_PrefContact_id")))));
                                        if(strSearchType.equalsIgnoreCase("Personal"))
                                                        givenName =driver.findElement(By.xpath(prop.getProperty("Txt_CSRP_CustomerNameFound"))).getText();
                                        else if(strSearchType.equalsIgnoreCase("Company"))
                                                        givenName =driver.findElement(By.xpath(prop.getProperty("Txt_CSRC_CustomerNameFound"))).getText();
                               
                                        if(custName[0].equals(givenName))
                                        {
                                                 strStepDetail="Creating a new Opportunity for: "+ givenName;
                                                 TB_GG_Log(strStepDetail);
                                                 strResult="Pass";
                                                 TB_GG_Report(strStepDetail,"Pass",true);
                                                 TB_GG_SelectDDListItem(driver, prop.getProperty("Cb_OPP_Purpose"), "Purpose",TB_GG_ReadXL(intRowid,"Cb_OPP_Purpose",strFile) ); 
                                                 //driver.findElement(By.xpath(prop.getProperty("Ed_OPP_Amount"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_OPP_Amount",strFile));
                                          // for CSR only       
                                                  boolean bExist1=TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Cb_OPP_HandoverNA")), 5000);
                                                  if(bExist1)
                                                  {
                                                       	if(TB_GG_ReadXL(intRowid,"Cb_OPP_HandoverWarm",strFile).contains("Yes"))
                                                       	TB_GG_Click(driver, By.xpath(prop.getProperty("Cb_OPP_HandoverWarm")), "Hand Over Warm");
                                                                        	
                                                     	else if(TB_GG_ReadXL(intRowid,"Cb_OPP_HandoverCold",strFile).contains("Yes"))
                                                     	TB_GG_Click(driver, By.xpath(prop.getProperty("Cb_OPP_HandoverCold")), "Hand Over Cold");
                                                                        	
                                                      	else
                                                        TB_GG_Click(driver, By.xpath(prop.getProperty("Cb_OPP_HandoverNA")), "Hand Over NA");
                                                   }
                                                   TB_GG_Wait(intTimeOutForPaging);
                                              // if branch is given in data file
                                                    if(!TB_GG_ReadXL(intRowid,"Cb_OPP_Branch",strFile).equals(""))                   
                                                    	TB_GG_SelectDDListItem(driver, prop.getProperty("Cb_OPP_Branch"), "Source Mode",TB_GG_ReadXL(intRowid,"Cb_OPP_Branch",strFile) );                                                        
                                              // if broker is given in data file
                                                    if(!TB_GG_ReadXL(intRowid,"Cb_OPP_Broker",strFile).equals("")) 
                                                    {
                                                    	TB_GG_Wait(2000);
                                                    	TB_GG_SelectDDListItem(driver, prop.getProperty("Cb_OPP_Broker"), "Source Mode",TB_GG_ReadXL(intRowid,"Cb_OPP_Broker",strFile) ); 
                              
                                                    }
                                                   driver.findElement(By.xpath(prop.getProperty("Btn_Save"))).click();
                                                   TB_GG_Wait(7000);
                                             // check if any error appeared on page
                                                   if(TB_GG_DoesWebElementExist(driver, By.className("errors"), 3000))
                                                   {
                                                	   	strStepDetail="Could not create Opportunity: Missing Mandatory filed";
                                                   		strResult="Fail";
                                                   		TB_GG_Report(strStepDetail,strResult,true);
                                                   		TB_GG_Log(strStepDetail);
                                                   		strReturn="Fail";  
                                                   }
                                             // check for reaching next page
                                                   if((TB_GG_FindElement(driver,By.xpath(prop.getProperty("Lb_NOR_OppManager")),11000).getText()).equalsIgnoreCase("CUSTOMER OPPORTUNITIES"))
                                                  // if(TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Img_NOR_EditOpp")),intTimeOut))
                                                   {
                                                	   strOppNo = driver.findElement(By.xpath(prop.getProperty("Ed_OPP_No"))).getText();
                                                       bgf.setOpp(strOppNo);
                                                	   System.out.println(strOppNo) ;
                                                       
                                                	   if(strOppNo!= null)	
                                                       	{
                                                        	 strResult="Pass";
                                                        	 strStepDetail="Opportunity created with Opportunity No:"+strOppNo;
                                                        	 TB_GG_Log(strStepDetail);
                                                        	 TB_GG_Report(strStepDetail, strResult, true);
                                                        	 strReturn="Pass"; 
                                                        	 
                                                        	 if(TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Img_NOR_EditOpp")), intTimeOut))
                                                        		{
                                                            	 if(TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Img_CSR_EditOpp")), intTimeOut) && TB_GG_FindElement(driver, By.xpath(prop.getProperty("Img_CSR_EditOpp")), intTimeOut).getAttribute("class").contains("edit"))
                                                            		 driver.findElement(By.xpath(prop.getProperty("Img_CSR_EditOpp"))).click();
                                                            	 else
                                                            	       driver.findElement(By.xpath(prop.getProperty("Img_NOR_EditOpp"))).click();
                                                        		 TB_GG_Report("Editing Opportunity for Needs analysis", "Pass", true);
                                                        		 TB_GG_Log("Editing opportunity for Needs analysis");
                                                        		}
                                                       	}
                                                	   
                                                   }
                                                   else
                                                   {
                                                	   TB_GG_captureScreen(driver, "CreateOpp"); 
                                                	   TB_GG_Report("Opportunity creation confirmation not received ","Fail",true);
                                                        TB_GG_Log("Opportunity creation confirmation not received ");
                                                   }	
                                                                      
                                        }
                                        else
                                        {
                                        	
                                        	strStepDetail="Opportunity is not created for correct Customer";
                                        	strResult="Fail";
                                        	TB_GG_Report(strStepDetail,strResult,true);
                                        	TB_GG_Log(strStepDetail);
                                        	strReturn="Fail"; 
                                        }	
                        }
                        else
                        {
                        	TB_GG_captureScreen(driver, "CreateOpp");
                        	strStepDetail="Customer is not available for opportunity";
                        	strResult="Fail";
                        	TB_GG_Report(strStepDetail, strResult, true);  
                            TB_GG_Log(strStepDetail); 
                            strReturn="Fail"; 
                        }
                       
                        
        }	
        catch(Exception e)
        {
            e.printStackTrace();
            strReturn= "ERROR";
        }
      return strReturn;
 }

 /**********************************************************************************************************************************************************
  * TB_LB_SetAppointment set Appointment for customer- personal/company
  * @returns boolean 
  * @category Appointment 
 *********************************************************************************************************************************************************/                     
     
   public boolean TB_LB_SetAppointment(WebDriver driver, int intRowid)
   {
                                
       //Set Data input file and row 
        String strFile=TB_GG_SetInputFile("TB_DFL_SetAppointment.xls");
                                        
        boolean bResult = false;
        String strStepDetail;
        TB_GG_Report("Set Appointment","", true); 
        try{
                       if(TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Img_NOR_EditOpp")), intTimeOutForPaging))
        	
                       {
                    		   driver.findElement(By.xpath(prop.getProperty("Img_NOR_EditOpp"))).click();           
		                       strStepDetail="Editing Opportunity to set appointment";
		                       TB_GG_Log(strStepDetail);
		                       TB_GG_Report(strStepDetail, "Pass", true);
                       }      
		                       
                       WebDriverWait wait = new WebDriverWait(driver, 10);
                        
                       TB_GG_Wait( );
                       
                       driver.manage().timeouts().setScriptTimeout(50, TimeUnit.SECONDS);
                      
                       if(TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Btn_AP_OppAppointment")),intTimeOutForPaging) && driver.findElement(By.xpath(prop.getProperty("Btn_AP_OppAppointment"))).isEnabled())
                       {
                       
	                        driver.findElement(By.xpath(prop.getProperty("Btn_AP_OppAppointment"))).click();
	                     
	                        strStepDetail="Set Appointment Button found";
	                        TB_GG_Log(strStepDetail);
	                        TB_GG_Report(strStepDetail, "Pass", true);
	                   
	                        TB_GG_SwitchToIframe(driver,prop.getProperty("Frm_CNA_Appointment"));
	                        TB_GG_Wait(3000);
	                        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(prop.getProperty("Ed_CNA_Purpose"))));
	                        driver.findElement(By.xpath(prop.getProperty("Ed_CNA_Purpose"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_CNA_Purpose",strFile));
	                      
	                        WebElement calendar=driver.findElement(By.xpath(prop.getProperty("Ed_CNA_StartDate")));
	                        calendar.clear();
	                        System.out.println(TB_GG_ThreeDaysAfter());
	                        calendar.sendKeys(TB_GG_ThreeDaysAfter());
	                        System.out.println("here");
	                       
	                        driver.findElement(By.xpath(prop.getProperty("Ed_CNA_AppAddress"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_CNA_AppAddress",strFile));
	                        
	                        driver.findElement(By.xpath(prop.getProperty("Ed_CNA_BuildingName"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_CNA_BuildingName",strFile));
	                        
	                        driver.findElement(By.xpath(prop.getProperty("Ed_CNA_FloorNumber"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_CNA_FloorNumber",strFile));
	                        
	                        driver.findElement(By.xpath(prop.getProperty("Ed_CNA_UnitNumber"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_CNA_UnitNumber",strFile));
	        
	                        driver.findElement(By.xpath(prop.getProperty("Ed_CNA_StreetNumber"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_CNA_StreetNumber",strFile));
	                        
	                        driver.findElement(By.xpath(prop.getProperty("Ed_CNA_StreetName"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_CNA_StreetName",strFile));
	                        TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_CNA_StreetType"), "Street Type", TB_GG_ReadXL(intRowid,"Dlst_CNA_StreetType",strFile));        
	                        driver.findElement(By.xpath(prop.getProperty("Ed_CNA_Town"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_CNA_Town",strFile));
	                        
	                        new Select(driver.findElement(By.xpath(prop.getProperty("Dlst_CNA_County")))).selectByVisibleText(TB_GG_ReadXL(intRowid,"Dlst_CNA_County",strFile));
	                        
	                        driver.findElement(By.xpath(prop.getProperty("Ed_CNA_Postcode"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_CNA_Postcode",strFile));
	                        
	                        strStepDetail="Set appointment form filled successfully";
	                        TB_GG_Log(strStepDetail);
	                        driver.findElement(By.xpath(prop.getProperty("Btn_Save"))).sendKeys(Keys.ENTER);
	                        Thread.sleep(5000);
	                        driver.switchTo().defaultContent();
	                        TB_GG_Wait();
	                        boolean bb=TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Btn_AP_OppAppointment")), intTimeOutForPaging);
	                        if(bb)
	                        {
	                        	strStepDetail="Set appointment form submitted";
	                            TB_GG_Log(strStepDetail);
	                            TB_GG_Report(strStepDetail, "Pass", true);
	                            bResult = true;
	                        }
	                        else
	                        {
	                        	TB_GG_captureScreen(driver, "SetAppointment");
	                        	strStepDetail="Set appointment form is not submitted";
	                            TB_GG_Log(strStepDetail);
	                            TB_GG_Report(strStepDetail, "Fail", true);
	                            bResult=false;
	                        	
	                        }
                       }
                       else 
                       {
                    	   		TB_GG_captureScreen(driver, "SetAppointment");
                    	   		bResult= false;
                                strStepDetail="Failed to click set appointment button";
                                TB_GG_Log(strStepDetail);
                                TB_GG_Report(strStepDetail, "Fail", true);
                                       
                      }
                      
         }
        catch(Exception e)
        {
        	TB_GG_captureScreen(driver, "SetAppointment");   
        	e.printStackTrace();
        } 
       
        return bResult;
                
}
                
public boolean TB_LB_VerifyCustomer(String strNameDisplayed,String strNameGiven)
{
	boolean bFound=false;
    if ((strNameDisplayed.trim()).contains(strNameGiven.trim())) bFound=true;

   return bFound;
}

public boolean TB_LB_VerifyDataCaptured_Customer(String strAddressGiven,String strBrokerSelected,String strBranchSeleted){
    String step= "", res="";
    boolean bFound=false;	
    System.out.println("Displayed Add:  " +strAddressDetailsDisplayed);
    System.out.println("Given Add:  " +strAddressGiven);
    System.out.println("Broker: " +strBrokerSelected);
    System.out.println("Branch: " +strBranchSeleted);
	System.out.println(strBrokerDisplayed);
	System.out.println(strBranchDisplayed);
   
    	if(strBrokerSelected.contains("- Select -"))
    	{
    		 step="Verify captured Branch and Address Details ";
    		 if ( strAddressDetailsDisplayed.toString().contains(strAddressGiven.trim()) && strBranchDisplayed.contains(strBranchSeleted))
    		 {
    			 bFound = true;
        		 res = "Pass";
    		 }
    		 else
        		 res = "Fail";
    		    		
    	}
    	else
    	{
    		String ss=strAddressGiven.trim();
    	
    		
    		step="Verify captured Branch, Broker  and Address Details";
    		if ( strAddressDetailsDisplayed.toString().contains(ss) && strBranchDisplayed.contains(strBranchSeleted) && strBrokerDisplayed.contains(strBrokerSelected)) 
    		{	
    			bFound=true;
    			res = "Pass";
    		}
    		 else
        		 res = "Fail";
    	}
    TB_GG_Report(step, res, true);                
   return bFound;
}

/*
 * @ Purpose    Submit COTR with all required fields
 * @ Parameters Row number of TB_DFL_COTR.xls for a scenario
 * @ return 	N/A
 * @ Author		Ruchi
 */

public void TB_LB_COTR(WebDriver driver, int intRowid) 
{

		String strFile=TB_GG_SetInputFile("TB_DFL_COTR.xls");
		String strStepdetail="";
		TB_GG_Report("COTR","", true); 
		boolean bExist=TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Img_COTR_PadLock")), intTimeOutForPaging);
		if(bExist)
		{	
			strStepdetail="PadLock is available";
			TB_GG_Report(strStepdetail, "Pass", true);
			driver.findElement(By.xpath(prop.getProperty("Img_COTR_PadLock"))).click();
		}
	
	//	TB_GG_SwitchToIframe(driver, prop.getProperty("Frm_COTR"));
		TB_GG_Wait();
		TB_GG_Report("COTR is Initiated", "Pass", true);
		 if(TB_GG_ReadXL(intRowid,"Cb_COTR_OwnerToBranch",strFile).equalsIgnoreCase("Yes"))
		 {
    		driver.findElement(By.xpath(prop.getProperty("Cb_COTR_OwnerToBranch"))).click();
    		TB_GG_Wait();
    		TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_COTR_Branch"), "Branch",TB_GG_ReadXL(intRowid,"Dlst_COTR_Branch",strFile) );
		 }
		 else if(TB_GG_ReadXL(intRowid,"Cb_COTR_OwnerToBroker",strFile).equalsIgnoreCase("Yes"))
		 {
    		driver.findElement(By.xpath(prop.getProperty("Cb_COTR_OwnerToBroker"))).click();
    		TB_GG_Wait();
    		TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_COTR_Broker"), "Broker",TB_GG_ReadXL(intRowid,"Dlst_COTR_Broker",strFile) );

		 }
		
		
         TB_GG_SelectDDListItem(driver, prop.getProperty("Ed_COTR_Reason"), "COTR Reason",TB_GG_ReadXL(intRowid,"Ed_COTR_Reason",strFile) );

         TB_GG_Wait(3000);
         Actions action = new Actions(driver); 
     	 action.sendKeys(Keys.TAB).perform();
     	 action.sendKeys(Keys.TAB).perform();
     	 action.sendKeys(Keys.ENTER).perform();
     	 TB_GG_Wait(7000);
		 
		
		
		driver.switchTo().defaultContent();
	/*	TB_GG_ClickSpecificButton(driver,prop.getProperty("Btn_COTR_RequestTransfer"), "COTR");
		*/
		
		if(! TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Cb_COTR_OwnerToBranch")), intTimeOutForPaging))
		{
			TB_GG_Report("COTR form Submitted Successfully", "Pass", true);
		}
		else
			TB_GG_Report("COTR form Not Submitted" , "Fail", true);
		
	
}
/**********************************************************************************************************************************************************
 * TB_LB_EditNA edit the existing Needs Analysis
 * @returns boolean 
 * @category NA 
*********************************************************************************************************************************************************/   
public boolean TB_LB_EditNA(WebDriver driver)
{
	boolean bRes=false;
	String strStepdetail="Edit NA";
	String strResult="Fail";
	TB_GG_Report("Edit NA","", true); 
	try{
			if(TB_GG_DoesWebElementExist(driver, By.id(prop.getProperty("Tba_AP_NAEditID")), intTimeOut))
			{	
				
				//TB_GG_Wait();
				WebElement w =driver.findElement(By.id(prop.getProperty("Tba_AP_NAEditID")));
				TB_GG_Wait(7000);
				
				if(TB_GG_FindElement(w,By.xpath(prop.getProperty("Img_AP_EditNA")), intTimeOut)!= null)
					{
						w.findElement(By.xpath(prop.getProperty("Img_AP_EditNA"))).click();
				
						strStepdetail= "Editing available active Needs analysis";
						strResult="Pass";
						bRes = true;
					}
				//driver.findElement(By.xpath(prop.getProperty("Btn_AP_NAEdit"))).click();
				else
					strResult = "Fail";
			}
			else
			{
				TB_GG_captureScreen(driver, "EditNA");
				strStepdetail="Customer does not have any active Needs Analysis to edit";
				strResult="Fail";
				bRes = false;
			}
	}
	catch(org.openqa.selenium.NoSuchElementException e)
	{
		e.printStackTrace();
		TB_GG_Log("Element not found");
	}
	catch(Exception e)
	{
		strStepdetail= "No active Needs Analysis available";
		strResult="Fail";
		bRes = false;
	}
	TB_GG_Report(strStepdetail, strResult, true);
	TB_GG_Log(strStepdetail);
	return bRes;
}

/**********************************************************************************************************************************************************
 * TB_LB_NeedAnalysis Needs Analysis for single applicant: customer- personal/company
 * @returns boolean 
 * @category NA 
 * @author Skaur

*********************************************************************************************************************************************************/   
public boolean TB_LB_NeedAnalysis(WebDriver driver, int intRowid)
{
	return TB_LB_NeedAnalysis(driver,intRowid,false,"TB_DFL_NeedAnalysis.xls");
}

public boolean TB_LB_NeedAnalysis(WebDriver driver, int intRowid, boolean bAssert)
{
	return TB_LB_NeedAnalysis(driver,intRowid, bAssert,"TB_DFL_NeedAnalysis.xls");
}
public boolean TB_LB_NeedAnalysis(WebDriver driver, int intRowid, boolean bAssert, String fileName)
{
	
	//Set Data input file and row 
	String strFile=TB_GG_SetInputFile(fileName);
	
	String strStepdetail="";
	String strResult="";
	TB_GG_Report("Need Analysis","", true); 
	/*if(TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Img_NOR_EditOpp")), intTimeOut))
	{
			driver.findElement(By.xpath(prop.getProperty("Img_NOR_EditOpp"))).click();
			TB_GG_Report("Editing Opportunity for Needs analysis", "Pass", true);
			TB_GG_Log("Editing opportunity for Needs analysis");
	}*/
	
	try{    ////For Execution of BPPPsssssss
			//   	TB_GG_Wait(7000);
				driver.manage().timeouts().setScriptTimeout(80, TimeUnit.SECONDS);
				TB_GG_WaitAnElementPresent(driver, By.xpath(prop.getProperty("Btn_AP_NANew")), 20000);
				if(!TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Btn_AP_NANew")), intTimeOut))
				{
					TB_LB_EditNA(driver);
					TB_GG_Report("Can't start new as customer already has an Active Needs Analysis", "Fail", true);
					TB_GG_Log("Can't start new as customer already has an Active Needs Analysis");
					return false; 
				}
				TB_GG_Click(driver,By.xpath(prop.getProperty("Btn_AP_NANew")),"Create new Needs analysis");  
				System.out.println("NEEDS ANALYSIS CLICKED");
					
			///Needs analysis page opens//////////////
			TB_GG_Wait();
			if(!TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Btn_AP_BackToNA")), 6000))
			{
				TB_GG_Click(driver,By.xpath(prop.getProperty("Btn_AP_NANew")),"Create new Needs analysis again");  
			}
			//driver.findElement(By.xpath(prop.getProperty("Btn_NA_MeetingDetails"))).click();
			System.out.println("Starting Needs Analysis");                                                 
		
		/////////////////For Execution OF BPS///////////
		///////////////////for calculations Testing
		/* TB_GG_Wait(9000);
			driver.manage().timeouts().setScriptTimeout(80, TimeUnit.SECONDS);
			if(!TB_LB_EditNA(driver))
			{
				TB_GG_WaitAnElementPresent(driver, By.xpath(prop.getProperty("Btn_AP_NANew")), 20000);
				if(TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Btn_AP_NANew")), intTimeOut))
			if(!TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Btn_AP_NANew")), intTimeOut))
			{
				TB_GG_Report("Can't start new as customer already has an Active Needs Analysis", "Fail", true);
				TB_GG_Log("Can't start new as customer already has an Active Needs Analysis");
				return false; 
			}
			TB_GG_Click(driver,By.xpath(prop.getProperty("Btn_AP_NANew")),"Create new Needs analysis");  
			System.out.println("NEEDS ANALYSIS CLICKED");
			TB_GG_Report("Creating new Needs analysis", "Pass", true);	
		///Needs analysis page opens//////////////
			TB_GG_Wait();
			}
			else
			TB_GG_Report("Editing Active Needs Analysis", "Pass", true);*/
		///////calculations Testing////////////
			if(strSearchType.equalsIgnoreCase("Personal"))
			{
				if(TB_GG_DoesWebElementExist(driver,By.xpath(prop.getProperty("Btn_NA_MeetingDetails")),intTimeOut))
				{
					strStepdetail="Needs Analysis page opened for Customer Type: personal";
					strResult="Pass";
					TB_GG_Report(strStepdetail, strResult, true);
					TB_GG_Log(strStepdetail);
			
			//meeting details
				//function call	
					TB_LB_MeetingDetails(driver,intRowid,strFile,"Personal");
					//TB_GG_Wait(2000);
					TB_LB_CheckGreenTick(driver,"Lb_NA_MeetingDetailsTick","Meeting Details");
						
			//Customer Details//////////////////////
		
					TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_NA_CustomerDetails")), "Customer Details");					
					TB_GG_Wait(7000);
					//if page has not opened- click again
					if(!TB_GG_DoesWebElementExist(driver, (By.xpath(prop.getProperty("Dlst_NA_ApplicantClass")+strCustId+"']")), intTimeOutForPaging))
					{
						TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_NA_CustomerDetails")), "Customer Details again");
						System.out.println("Clicked again");
						TB_GG_Wait(7000);
					}
				//function call	
					TB_LB_CustomerDetails(driver,intRowid,strFile,"Personal",strCustId,false, bgf);
					TB_GG_Wait(2000);
					TB_LB_CheckGreenTick(driver,"Lb_NA_CustomerDetailsTick","Customer Details");
			//Occupation & Income
					TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_NA_Occupation")), "Occupation Details");
					TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),20000);
					TB_GG_WaitAnElementPresent(driver,By.xpath(prop.getProperty("Dlst_NA_OccupationType")+strCustId+"']"),10000);
					//if page has not opened- click again
					if(!TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Dlst_NA_OccupationType")+strCustId+"']"), intTimeOutForPaging))
					{
						TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_NA_Occupation")), "Occupation Details");
						System.out.println("Clicked again");
						TB_GG_Wait(7000);
					}
				//function call
					TB_LB_OccupationAndIncome(driver,intRowid,strFile,strCustId,bgf);
				//check and report
					TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);
					TB_LB_CheckGreenTick(driver,"Lb_NA_OccupationTick","Occupation and income Details");
						
			//Expenses
					
					TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_NA_Expenses")), "Expenses");
					TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),20000);
					TB_GG_WaitAnElementPresent(driver,By.xpath(prop.getProperty("Cb_NA_ExpenseYes")),10000);
					//if page has not opened- click again
					
					if(!TB_GG_DoesWebElementExist(driver, (By.xpath(prop.getProperty("Cb_NA_ExpenseYes"))), intTimeOutForPaging))
					{
						TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_NA_Expenses")), "Expenses");
						System.out.println("Clicked again");
						TB_GG_Wait();
						TB_GG_WaitAnElementPresent(driver,By.xpath(prop.getProperty("Cb_NA_ExpenseYes")),10000);
					}
			//function call	
				//	TB_LB_Expenses(driver,intRowid,strFile,false, bgf);
					
					//Check and report
					TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),20000);
					TB_LB_CheckGreenTick(driver,"Lb_NA_ExpensesTick","Expenses Details");
					
			//Assets & Liabilities
					TB_GG_Wait(7000);
					TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_NA_AssLiab")),"Assets & Liabilities");
					TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),15000);
					TB_GG_WaitAnElementPresent(driver,By.xpath(prop.getProperty("Cb_NA_AssDecYes")),10000);
					if(!TB_GG_DoesWebElementExist(driver, (By.xpath(prop.getProperty("Cb_NA_AssDecYes"))), intTimeOutForPaging))
					{
						driver.findElement(By.xpath(prop.getProperty("Btn_NA_AssLiab"))).click();
						System.out.println("Clicked again");
						TB_GG_Wait(7000);
					}
				//function call		
					TB_LB_Assets(driver,intRowid,strFile,false,bgf,1);
					if(bAssert)
					{
						TB_GG_Wait();
						TB_LB_Assets(driver,intRowid+1,strFile,false, bgf ,2);
					}
		    //Liabilities
					TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),20000);
					//function call	
				TB_LB_Liabilities(driver,intRowid,strFile,false, bgf, 1);	
					if(bAssert)
					{
						TB_GG_Wait();
						TB_LB_Liabilities(driver,intRowid+1, strFile, false, bgf, 2);
					}
					//report
					TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),20000);
					TB_LB_CheckGreenTick(driver,"Btn_NA_AssLiabTick","Assets and liabilities Details");
		
			//Credit History
					TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_NA_Credit")), "Credit Details");
					TB_GG_WaitAnElementPresent(driver,By.xpath(prop.getProperty("Cb_NA_LegalNo")+strCustId+"-2']"),10000);
					//if page not opened click again
					if(!TB_GG_DoesWebElementExist(driver, (By.xpath(prop.getProperty("Cb_NA_LegalNo")+strCustId+"-2']")), intTimeOutForPaging))
					{
						TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_NA_Credit")), "Credit Details");
						System.out.println("Clicked again");
						TB_GG_Wait(7000);
					}
				//function call		
					TB_LB_CreditHistory(driver,intRowid,strFile,strCustId);
					TB_GG_Wait(2000);
					//TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_NA_Credit")), "Credit Details");

					//check and report
					TB_LB_CheckGreenTick(driver,"Lb_NA_CreditTick","Credit History Details");
					TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),20000);
			//Estimated Funds To Complete
					TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_NA_EstFunds")), "Estimated Funds");
					TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),20000);
					TB_GG_WaitAnElementPresent(driver,By.xpath(prop.getProperty("Ed_NA_PurchasePrice")),20000);
					if(!TB_GG_DoesWebElementExist(driver, (By.xpath(prop.getProperty("Ed_NA_PurchasePrice"))), intTimeOutForPaging))
					{
						driver.findElement(By.xpath(prop.getProperty("Btn_NA_EstFunds"))).click();
						System.out.println("Clicked again");
						TB_GG_Wait(7000);
					}
					
					//TB_GG_Wait(7000);
					
				//function call	
					TB_LB_EstimatedFundsToComplete(driver,intRowid,strFile);
					//check and report//verify ticks
					TB_LB_CheckGreenTick(driver,"Lb_NA_EstFundsTick","Estimated Funds To Complete");
					
					
			//PreliminaryCapacityToRepay
					//TB_GG_Wait(30000);
					//driver.findElement(By.xpath(prop.getProperty("Btn_NA_PriCapacity"))).click();
					TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);
					TB_GG_Click(driver,By.id("PreliminaryCapacityToRepayId"), "Preliminary Capacity To Repay");
					TB_GG_Wait();
					TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),20000);
					//if page not opened click again
					if(!TB_GG_DoesWebElementExist(driver, (By.id(prop.getProperty("Dlst_NA_LoanTermYearID"))), intTimeOutForPaging))
					{
						TB_GG_Click(driver,By.id("PreliminaryCapacityToRepayId"), "Preliminary Capacity To Repay");
						System.out.println("Clicked again");
						TB_GG_Wait(30000);
					}
				//function call		
					TB_LB_PreliminaryCapacityToRepay(driver,intRowid,strFile);
					//check and report
					
					TB_LB_CheckGreenTick(driver,"Lb_NA_preliminaryTickID","Preliminary Capacity To Repay");			
					
				}
				else
				{
					strStepdetail="Open Needs Analysis page";
					strResult = "Fail";
					TB_GG_Report(strStepdetail, strResult, true);
					TB_GG_Log(strStepdetail);
				}
			}
		 
			else if(strSearchType.equalsIgnoreCase("Company"))
			{
			 if(TB_GG_DoesWebElementExist(driver,By.xpath(prop.getProperty("Btn_NAC_MeetingDetails")),intTimeOut))
				{
					strStepdetail="Needs Analysis page opened for Customer Type: Company";
					strResult="Pass";
					TB_GG_Report(strStepdetail, strResult, true);
					TB_GG_Log(strStepdetail);
				TB_GG_Wait(3000);
		//Meeting Details		
				//function call		
					TB_LB_MeetingDetails(driver,intRowid,strFile,"Company");
					//check and report
					TB_LB_CheckGreenTick(driver,"Lb_NAC_MeetingDetailsTick","Meeting Details");
					
					
					
		//Customer Details//////////////////////
					
					driver.findElement(By.xpath(prop.getProperty("Btn_NAC_CustomerDetails"))).click();
					System.out.println("Filling Customer Details Form");
					TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),20000);
					//if page has not opened click again
					if(!TB_GG_DoesWebElementExist(driver, (By.xpath(prop.getProperty("Dlst_NA_ApplicantClass")+strCustId+"']")), intTimeOutForPaging))
					{
						driver.findElement(By.xpath(prop.getProperty("Btn_NAC_CustomerDetails"))).click();
						System.out.println("Clicked again");
						TB_GG_Wait(7000); 
					}
					
				//function call	
					TB_LB_CustomerDetails(driver,intRowid,strFile,"Company",strCustId,false,bgf);
					//check and report
					TB_LB_CheckGreenTick(driver,"Lb_NAC_CustomerDetailsTick","Customer Details");
					
				}
			 else
				{
					strStepdetail="Open Needs Analysis page";
					strResult = "Fail";
					TB_GG_Report(strStepdetail, strResult, true);
					TB_GG_Log(strStepdetail);
				}
			}
			//verify the product search button is enabled
			if(driver.findElement(By.xpath(prop.getProperty("Btn_PS"))).isEnabled())
			{
				strStepdetail="Needs Analysis complete and successful so the Product Search is available now";
				strResult="Pass";
				TB_GG_Report(strStepdetail, strResult, true);
				TB_GG_Log(strStepdetail);
				return true;
			}
			else
			{
				strStepdetail="Needs Analysis is not successful so the Product Search is still disabled";
				strResult="Fail";
				TB_GG_Report(strStepdetail, strResult, true);
				TB_GG_Log(strStepdetail);
				return false;
			}
	 }
	catch(org.openqa.selenium.NoSuchElementException s)
	{
		TB_GG_captureScreen(driver, "NeedsAnalysis");
		s.printStackTrace();
		TB_GG_Log(s.toString());
		TB_GG_Report("Cannot find element or required data value in given from", "Fail", true);
		strStepdetail="Needs Analysis Error: NoSuchElementException";
		strResult="Fail";
		TB_GG_Report(strStepdetail, strResult, true);
		TB_GG_Log(strStepdetail);
		return false;
	}
	catch(Exception e)
	{
		TB_GG_captureScreen(driver, "NeedsAnalysis");
		e.printStackTrace();
		TB_GG_Log(e.getLocalizedMessage());
		strStepdetail="Needs Analysis Error so Product Search is still disabled";
		strResult="Fail";
		TB_GG_Report(strStepdetail, strResult, true);
		TB_GG_Log(strStepdetail);
		return false;
	}
}
/*
 * @ Purpose    Needs Analysis for Joint Apllicants
 * @ Parameters Data for scenario 
 * @ return 	true if NA is Complete successfully 
 * @ Author		Ruchi
 */
public boolean TB_LB_JointNeedAnalysis(WebDriver driver, int intRowid,boolean spouse)
{
	return TB_LB_JointNeedAnalysis(driver,intRowid,spouse,"TB_DFL_NeedAnalysis.xls");
}

public boolean TB_LB_JointNeedAnalysis(WebDriver driver, int intRowid,boolean spouse, String fileName)
{
	//boolean bResult=false;
	String strFile=TB_GG_SetInputFile(fileName);
	//String strCheck="";
	
	String strStepdetail="";
	String strResult="";
	TB_GG_Report("Joint Need Analysis","", true); 
	try{
	TB_GG_Wait(7000);
	driver.manage().timeouts().setScriptTimeout(50, TimeUnit.SECONDS);
	if(TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Btn_AP_NANew")), 5000))
	TB_GG_Click(driver,By.xpath(prop.getProperty("Btn_AP_NANew")),"Needs Analysis Button"); 
	
	TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);

		
	if(strSearchType.equalsIgnoreCase("Personal"))
	{
		
		if(TB_GG_DoesWebElementExist(driver,By.xpath(prop.getProperty("Btn_NA_MeetingDetails")),intTimeOut))
		{
			//TB_GG_Click(driver,By.xpath(prop.getProperty("Btn_NA_CustomerDetails")),"Customer Details");
			strStepdetail="Needs Analysis page opened for Customer Type: personal";
			strResult="Pass";
			TB_GG_Report(strStepdetail, strResult, true);
			TB_GG_Log(strStepdetail);
		
			new Select(driver.findElement(By.xpath(prop.getProperty("Dlst_NA_PrfContact")))).selectByIndex(1);
			if(strSearchTypeJoint.equalsIgnoreCase(strSearchType))
				TB_LB_MeetingDetails(driver,intRowid,strFile,"Personal");
			else
				TB_LB_MeetingDetails(driver,intRowid,strFile,strSearchTypeJoint);
			TB_GG_Wait(2000);
			TB_LB_CheckGreenTick(driver,"Lb_NAC_MeetingDetailsTick","Meeting Details");	
	
		}
		
		
		TB_GG_Click(driver,By.xpath(prop.getProperty("Btn_NA_CustomerDetails")),"Customer Details");
		TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);
						
					//if page has not opened- click again
					if(!TB_GG_DoesWebElementExist(driver, (By.xpath(prop.getProperty("Dlst_NA_ApplicantClass")+strCustId+"']")), intTimeOutForPaging))
					{
						TB_GG_Click(driver,By.xpath(prop.getProperty("Btn_NA_CustomerDetails")),"Customer Details");
						System.out.println("Clicked again");
						TB_GG_Wait(7000);
					}
				//function call	
					TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);	
					//if tab is not selected
					if( ! driver.findElement(By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustId))).getAttribute("class").contains("ui-tabs-selected"))
					TB_GG_Click(driver, By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustId)), "Tab of Next customer");
							
					TB_LB_CustomerDetails(driver,intRowid,strFile,"Personal",strCustId,spouse, bgf);
					if(spouse)
					{
						new Select(driver.findElement(By.id("NA_CI_CD_PartnerFullName_".concat(strCustId)))).selectByIndex(2);
						String depens =  bgf.customerDetails.get("NumDependents");
						int dep = Integer.parseInt(depens);
						if(! bgf.customerDetails.get("NumDependents").equals("0"))
						for(int i = 1 ; i<= dep; i++)
						{
							if(driver.findElement(By.id(prop.getProperty("Hid_NA_CI_CD_DependantOf")+i+"_"+strCustId)).getAttribute("value").equals("") )
								TB_GG_Click(driver, By.xpath(prop.getProperty("Cbox_JNA_Dependents")+i+strCustIdJoint+strCustId+"']"), "Linking Dependent" +i+" to Spouse");
						}
					}
					TB_GG_Wait();
					//if tab is not selected
					if( ! driver.findElement(By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint))).getAttribute("class").contains("ui-tabs-selected"))
					TB_GG_Click(driver, By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint)), "Tab of Next customer");
					if(!bMixed)
					TB_LB_CustomerDetails(driver,intRowid+1,strFile,strSearchType,strCustIdJoint,spouse, bgfJoint);
					else
					{
							TB_LB_CustomerDetails(driver,intRowid+1,strFile,strSearchTypeJoint,strCustIdJoint,spouse, bgfJoint);
							TB_GG_Click(driver,By.xpath(prop.getProperty("Btn_NA_CustomerDetails")),"Customer Details");

					}
					if(spouse)
					{
						new Select(driver.findElement(By.id("NA_CI_CD_PartnerFullName_".concat(strCustIdJoint)))).selectByIndex(2);
						String depens =  bgfJoint.customerDetails.get("NumDependents");
						int dep = Integer.parseInt(depens);
						if(! bgfJoint.customerDetails.get("NumDependents").equals("0"))
						for(int i = 1 ; i<= dep; i++)
						{
							if(driver.findElement(By.id(prop.getProperty("Hid_NA_CI_CD_DependantOf")+i+"_"+strCustIdJoint)).getAttribute("value").equals("") )
								TB_GG_Click(driver, By.xpath(prop.getProperty("Cbox_JNA_Dependents")+i+strCustId+strCustIdJoint+"']"), "Linking Dependent" +i+" to Spouse");
						}
						
					}
					
					TB_LB_CheckGreenTick(driver,"Lb_NA_CustomerDetailsTick","Customer Details");
		
				
				TB_GG_Click(driver,By.xpath(prop.getProperty("Btn_NA_Occupation")),"Occupation Details");//driver.findElement(By.xpath(prop.getProperty("Btn_NA_Occupation"))).click();
				TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);
				
				
				TB_GG_Wait(7000);
				//if page has not opened- click again
				if(!TB_GG_DoesWebElementExist(driver, (By.xpath(prop.getProperty("Dlst_NA_OccupationType")+strCustId+"']")), intTimeOutForPaging))
				{
					driver.findElement(By.xpath(prop.getProperty("Btn_NA_Occupation"))).click();
					System.out.println("Clicked again");
					TB_GG_Wait(7000);
				}
				TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);
				//if tab is not selected
				if(! bMixed)
				{
					if( ! driver.findElement(By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustId))).getAttribute("class").contains("ui-tabs-selected"))
				    	TB_GG_Click(driver, By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustId)), "Tab of Next customer");
				}
				
				TB_LB_OccupationAndIncome(driver,intRowid,strFile,strCustId,bgf);//for first Applicant
				
				TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);
				//if tab is not selected
				if(! bMixed)
				{
					if( ! driver.findElement(By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint))).getAttribute("class").contains("ui-tabs-selected"))
					TB_GG_Click(driver, By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint)), "Tab of Next customer");
					
				TB_LB_OccupationAndIncome(driver,intRowid+1,strFile,strCustIdJoint, bgfJoint);//for second Applicant
					
					
					TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);
				}
				TB_LB_CheckGreenTick(driver,"Lb_NA_OccupationTick","Occupation and income Details");
		
//Expenses
		
	//	if(! TB_LB_CheckGreenTick(driver,"Lb_NA_ExpensesTick","Expenses Details"))
		{
				driver.findElement(By.xpath(prop.getProperty("Btn_NA_Expenses"))).click();
				TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);
				//if page has not opened- click again
				if(!TB_GG_DoesWebElementExist(driver, (By.xpath(prop.getProperty("Cb_NA_ExpenseYes"))), intTimeOutForPaging))
				{
					driver.findElement(By.xpath(prop.getProperty("Btn_NA_Expenses"))).click();
					System.out.println("Clicked again");
					TB_GG_Wait(7000);
				}
				//function call
		  	/*	if(!bMixed)/////commented for testing ,not to add more expenses for existing customer
			    	TB_LB_Expenses(driver, intRowid, strFile,true, bgf);
				else 
					TB_LB_Expenses(driver, intRowid, strFile,false, bgf);	
				TB_GG_Wait();*/
				//Check and report
				TB_LB_CheckGreenTick(driver,"Lb_NA_ExpensesTick","Expenses Details");
		}
		TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);
		//	if(! TB_LB_CheckGreenTick(driver,"Btn_NA_AssLiabTick","Assets and liabilities Details"))
		{
				driver.findElement(By.xpath(prop.getProperty("Btn_NA_AssLiab"))).click();
				TB_GG_Wait(7000);
				if(!TB_GG_DoesWebElementExist(driver, (By.xpath(prop.getProperty("Cb_NA_AssDecYes"))), intTimeOutForPaging))
				{
					driver.findElement(By.xpath(prop.getProperty("Btn_NA_AssLiab"))).click();
					System.out.println("Clicked again");
					TB_GG_Wait(7000);
				}
			//function call		
				
				if(!bMixed)
				TB_LB_Assets(driver,intRowid,strFile,true, bgf,1);
				else
				  TB_LB_Assets(driver,intRowid,strFile,false, bgf,1);
				TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);
				if(!bMixed)
				 TB_LB_Liabilities(driver,intRowid,strFile,true,bgf,1);	
				else
					TB_LB_Liabilities(driver,intRowid,strFile,false,bgf,1);	
				TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);
	
				
				//report
				TB_LB_CheckGreenTick(driver,"Btn_NA_AssLiabTick","Assets and liabilities Details");
		}		
		
		TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);
		
	//Credit History
		
		
			driver.findElement(By.xpath(prop.getProperty("Btn_NA_Credit"))).click();
			
			//if page not opened click again
			if(!TB_GG_DoesWebElementExist(driver, (By.xpath(prop.getProperty("Cb_NA_LegalNo")+strCustId+"-2']")), intTimeOutForPaging))
			{
				driver.findElement(By.xpath(prop.getProperty("Btn_NA_Credit"))).click();
				System.out.println("Clicked again");
				TB_GG_Wait(7000);
			}
			TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);
		//function call		//tab is not selected
			if(!bMixed)
			{
				if( ! driver.findElement(By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustId))).getAttribute("class").contains("ui-tabs-selected"))
				TB_GG_Click(driver, By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustId)), "Tab of Next customer");
			}
			TB_LB_CreditHistory(driver,intRowid,strFile,strCustId);

			//tab is not selected
			if(!bMixed)
			{
				if( ! driver.findElement(By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint))).getAttribute("class").contains("ui-tabs-selected"))
				TB_GG_Click(driver, By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint)), "Tab of Next customer");
				if( ! driver.findElement(By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint))).getAttribute("class").contains("ui-tabs-selected"))
					TB_GG_Click(driver, By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint)), "Tab of Next customer");
				TB_LB_CreditHistory(driver,intRowid+1,strFile,strCustIdJoint);
			}
			TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_NA_Credit")), "Credit Details");
			TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);

			//check and report
			TB_LB_CheckGreenTick(driver,"Lb_NA_CreditTick","Credit History Details");
		
			//Estimated Funds To Complete
		//verify ticks
			driver.findElement(By.xpath(prop.getProperty("Btn_NA_EstFunds"))).click();
			TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);
			//function call	
			TB_LB_EstimatedFundsToComplete(driver,intRowid,strFile);
			driver.findElement(By.xpath(prop.getProperty("Btn_NA_EstFunds"))).click();
			//check and report
			TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);
			TB_LB_CheckGreenTick(driver,"Lb_NA_EstFundsTick","Estimated Funds To Complete");
			
			
			//PreliminaryCapacityToRepay
			//TB_GG_Wait(30000);
			//driver.findElement(By.xpath(prop.getProperty("Btn_NA_PriCapacity"))).click();
			TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);
			TB_GG_Click(driver,By.id("PreliminaryCapacityToRepayId"),"Preliminary Capacity To Repay");

			//if page not opened click again
			if(!TB_GG_DoesWebElementExist(driver, (By.id(prop.getProperty("Dlst_NA_LoanTermYearID"))), 9000))
			{
			TB_GG_Click(driver,By.id("PreliminaryCapacityToRepayId"),"Preliminary Capacity To Repay");
			System.out.println("Clicked again");
			TB_GG_Wait(30000);
			}
			//function call		
			TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);

			TB_LB_PreliminaryCapacityToRepay(driver,intRowid,strFile);
			//check and report
			TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);
			TB_LB_CheckGreenTick(driver,"Lb_NA_preliminaryTickID","Preliminary Capacity To Repay");
	}
 
	else if(strSearchType.equalsIgnoreCase("Company"))
	{
	 if(TB_GG_DoesWebElementExist(driver,By.xpath(prop.getProperty("Btn_NAC_MeetingDetails")),intTimeOut))
		{
			strStepdetail="Needs Analysis page opened for Customer Type: Company";
			strResult="Pass";
			TB_GG_Report(strStepdetail, strResult, true);
			TB_GG_Log(strStepdetail);
			TB_GG_Wait(3000);
//Meeting Details		
		//function call		
			new Select(driver.findElement(By.xpath(prop.getProperty("Dlst_NA_PrfContact")))).selectByIndex(1);//selectByVisibleText("Customer Requested");

			TB_LB_MeetingDetails(driver,intRowid,strFile,"Company");
			//check and report
			TB_LB_CheckGreenTick(driver,"Lb_NAC_MeetingDetailsTick","Meeting Details");
			
			
//Customer Details//////////////////////
			
			TB_GG_Click(driver,By.xpath(prop.getProperty("Btn_NA_CustomerDetails")),"Customer Details");
			TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);

			//if page has not opened click again
			if(!TB_GG_DoesWebElementExist(driver, (By.xpath(prop.getProperty("Dlst_NA_ApplicantClass")+strCustId+"']")), intTimeOutForPaging))
			{
				TB_GG_Click(driver,By.xpath(prop.getProperty("Btn_NA_CustomerDetails")),"Customer Details");
				System.out.println("Clicked again");
				TB_GG_Wait(7000); 
			}
				TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);	
				//if tab is not selected
				if( ! driver.findElement(By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustId))).getAttribute("class").contains("ui-tabs-selected"))
				TB_GG_Click(driver, By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustId)), "Tab of Next customer");
				//function call	
				TB_LB_CustomerDetails(driver,intRowid,strFile,"Company",strCustId,spouse, bgf);

			/*	if(spouse)
				{
					new Select(driver.findElement(By.id("NA_CI_CD_PartnerFullName_".concat(strCustId)))).selectByIndex(2);
					if(driver.findElement(By.xpath(prop.getProperty("Cbox_JNA_Dependents")+"1-"+strCustId+"']/div[3]/div/input")).getAttribute("value").equals(""))
					TB_GG_Click(driver, By.xpath(prop.getProperty("Cbox_JNA_Dependents")+"1-"+strCustId+"']/div[3]/div/input"), "Linking Dependents for Spouse");
				}
				TB_GG_Wait();*/
				//if tab is not selected
				if( ! driver.findElement(By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint))).getAttribute("class").contains("ui-tabs-selected"))
				TB_GG_Click(driver, By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint)), "Tab of Next customer");

				//function call	
				if(strSearchTypeJoint.equalsIgnoreCase(strSearchType))
					TB_LB_CustomerDetails(driver,intRowid+1,strFile,"Company",strCustIdJoint,spouse, bgfJoint);
				else 
					TB_LB_CustomerDetails(driver,intRowid+1,strFile,strSearchTypeJoint,strCustIdJoint,spouse, bgfJoint);
				//check and report
				TB_LB_CheckGreenTick(driver,"Lb_NAC_CustomerDetailsTick","Customer Details");
			
		}
	 else
		{
			strStepdetail="Open Needs Analysis page";
			strResult = "Fail";
			TB_GG_Report(strStepdetail, strResult, true);
			TB_GG_Log(strStepdetail);
		}
	}
	if(driver.findElement(By.xpath(prop.getProperty("Btn_PS"))).isEnabled())
	{
		strStepdetail="Needs Analysis complete and successful so the Product Search is available now";
		strResult="Pass";
		TB_GG_Report(strStepdetail, strResult, true);
		TB_GG_Log(strStepdetail);
		return true;
	}
	else
	{
		strStepdetail="Needs Analysis is not successful so the Product Search is still disabled";
		strResult="Fail";
		TB_GG_Report(strStepdetail, strResult, true);
		TB_GG_Log(strStepdetail);
		return false;
	}

	
	}
	catch(org.openqa.selenium.NoSuchElementException s)
	{
		TB_GG_captureScreen(driver, "NeedsAnalysis");
		s.printStackTrace();
		TB_GG_Log(s.toString());
		TB_GG_Report("Cannot find element or required data value in given from", "Fail", true);
		strStepdetail="Needs Analysis Error: NoSuchElementException";
		strResult="Fail";
		TB_GG_Report(strStepdetail, strResult, true);
		TB_GG_Log(strStepdetail);
		return false;
	}
	catch(Exception e)
	{
		TB_GG_captureScreen(driver, "NeedsAnalysis");
		e.printStackTrace();
		TB_GG_Log(e.getLocalizedMessage());
		strStepdetail="Needs Analysis Error so Product Search is still disabled";
		strResult="Fail";
		TB_GG_Report(strStepdetail, strResult, true);
		TB_GG_Log(strStepdetail);
		return false;
	}
}

/*
 * Helpers- Needs Analysis
 *  @author skaur
 */
public void TB_LB_MeetingDetails(WebDriver driver,int intRowid,String strFile, String strCustType )
{
			
		TB_GG_Report("Meeting Details","", true); 
		String[] custs;
		//capturing javascript generated customer id
				custs=TB_LB_GetCustomerID(driver,By.xpath(prop.getProperty("Dlst_NA_PrfContact")),intTimeOutForPaging);
				strCustId=custs[0];
				bgf.TB_BG_SetCustomerId(strCustId);
				TB_GG_Log("Customer Id for given session is:" + strCustId);
				if(custs[1]!=null) 
					{
							bgfJoint = new BusinessGlobalFunctions();
							strCustIdJoint=custs[1];
							bgfJoint.TB_BG_SetCustomerId(strCustIdJoint);
							TB_GG_Log("Customer Id for Joint customer is:" + bgfJoint.cust.get("custId"));
					}
				
	 //
		//read from data file and set		 
		bgf.TB_BG_SetMeetingDetails(TB_GG_ReadXL(intRowid, "Dlst_NA_LoanPurpose", strFile), TB_GG_ReadXL(intRowid, "Dlst_NA_LoanReason", strFile), TB_GG_ReadXL(intRowid, "Ed_NA_TotLaonAmount", strFile));
		TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_ContactMethod"),"Contact method",TB_GG_ReadXL(intRowid, "Dlst_NA_ContactMethod", strFile));//"Email");
		TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_EnglishAbility"),"English ability","English Speaking");//"English Speaking");
		TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_LoanPurpose"),"Loan purpose",bgf.meetingDetails.get("LoanPurpose"));//"Owner Occupied");
		TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_LoanReason"),"Loan reason",bgf.meetingDetails.get("LoanReason"));//"Purchase");
		if(bgf.meetingDetails.get("LoanReason").contains("Variation")) 
			TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_NA_VariationIncreaseAmount")), "Variation Increase Amount:", bgf.meetingDetails.get("TotLaonAmount"));
		else
			TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_NA_TotLaonAmount")), "Loan Amount", bgf.meetingDetails.get("TotLaonAmount"));
		TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_NumOfHouseHold"),"No of house hold",TB_GG_ReadXL(intRowid, "Dlst_NA_NumOfHouseHold", strFile));//"1");
		driver.findElement(By.xpath(prop.getProperty("Ed_NA_CustomerGoals"))).clear();
		driver.findElement(By.xpath(prop.getProperty("Ed_NA_CustomerGoals"))).sendKeys("Testing");//"Test Goal");
		driver.findElement(By.xpath(prop.getProperty("Lb_NA_Field"))).click();
	
	if(strCustType.equalsIgnoreCase("Company"))
	{
		bgf.TB_BG_TotalSecurityValue(TB_GG_ReadXL(intRowid, "Ed_NAC_TotalSecurityValue", strFile));
	
		TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_NAC_TotalSecurityValue")), "Total Security Value", bgf.meetingDetails.get("TotalSecurityValue"));
		driver.findElement(By.xpath(prop.getProperty("Lb_NA_Field"))).click();
	}
}
/*
 * Helpers- Needs Analysis
 *  @author skaur
 */
public boolean TB_LB_CheckGreenTick(WebDriver driver,String xPath, String from_Name)
{
	String strCheck="";
	String strStepdetail="";
	String strResult="";
	boolean bcheck=false;
	TB_GG_Wait(5000);
	strCheck = TB_GG_FindElement(driver, By.xpath(prop.getProperty(xPath)),10000).getAttribute("class");
	//cSystem.out.println(strCheck
	if(strCheck!= null)
	{
		if(strCheck.equalsIgnoreCase("menu-completed"))
	
		{
			strStepdetail=from_Name+" form got a green tick";
			strResult="Pass";
			bcheck = true;
			TB_GG_Report(strStepdetail, strResult, true);
			TB_GG_Log(strStepdetail);
		}
		else
		{
			strStepdetail= "No green tick for "+ from_Name;
			strResult="Fail";
			TB_GG_Report(strStepdetail, strResult, true);
			TB_GG_Log(strStepdetail);
		}
		return bcheck;
	}
	else
	{
		return false;
	}
	
}
/*
 * Helpers- Needs Analysis
 *  @author skaur
 */
public void TB_LB_CustomerDetails(WebDriver driver,int intRowid,String strFile, String strCustType,String custId,boolean spouse,BusinessGlobalFunctions bg)
{
	TB_GG_Report("Customer Details","", true); 
	bg.TB_BG_SetApplicantClass(TB_GG_ReadXL(intRowid, "Dlst_NA_ApplicantClass", strFile));
	bg.TB_BG_SetApplicantType(TB_GG_ReadXL(intRowid, "Dlst_NA_ApplicantType", strFile));
	TB_GG_WaitAnElementPresent(driver, By.xpath(prop.getProperty("Dlst_NA_ApplicantClass")+custId+"']"), 9000);
	//TB_GG_Click(driver, By.xpath(prop.getProperty("Dlst_NA_ApplicantClass")+custId+"']"), "Applicant class");
	if(! TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_ApplicantClass")+custId+"']","Applicant class",bg.customerDetails.get("ApplicantClass")))//"Individual");
	{
			System.out.println("Try again to click Applicant Class");
			TB_GG_Click(driver, By.xpath(prop.getProperty("Dlst_NA_ApplicantClass")+custId+"']"), "Applicant class");
			TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_ApplicantClass")+custId+"']","Applicant class",TB_GG_ReadXL(intRowid, "Dlst_NA_ApplicantClass", strFile));
			
	}
	TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_ApplicantType")+custId+"']","Applicant type",bg.customerDetails.get("ApplicantType"));//"Applicant");
	
	if(strCustType.equalsIgnoreCase("Personal"))
	{
			bg.TB_BG_SetCustomerDetails_P(TB_GG_ReadXL(intRowid, "Dlst_NA_State", strFile), TB_GG_ReadXL(intRowid, "Dlst_NA_MaritalStatus", strFile), TB_GG_ReadXL(intRowid, "DlstNA_PartnerEmp", strFile),TB_GG_ReadXL(intRowid, "Dlst_NA_NumDependents", strFile));
			//TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_LivingTerm")+custId+"']","Living Term",TB_GG_ReadXL(intRowid, "Dlst_NA_LivingTerm", strFile));
			TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_State")+custId+"']","State",bg.customerDetails.get("State"));//"New South Wales");
			TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_RsdnStatus")+custId+"']","Residence Status",TB_GG_ReadXL(intRowid, "Dlst_NA_RsdnStatus", strFile));//"Australian Citizen");
			TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_MaritalStatus")+custId+"']","Marital Status",bg.customerDetails.get("MaritalStatus"));//"Married");
			if(bg.customerDetails.get("MaritalStatus").equalsIgnoreCase("Married")||bg.customerDetails.get("MaritalStatus").equalsIgnoreCase("De facto"))
			{
			if(!spouse)
			{
				TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_PartnerName")+custId+"']","Partner Name",TB_GG_ReadXL(intRowid, "Dlst_NA_PartnerName", strFile));//"Not In Application");
				TB_GG_SelectDDListItem(driver,prop.getProperty("DlstNA_PartnerEmp")+custId+"']","Partner Emp",bg.customerDetails.get("PartnerEmp"));//"Employed");
			}
			}
			TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_NumDependents")+custId+"']","No of Dependents",bg.customerDetails.get("NumDependents"));//"1");
	/*		WebElement calendar= driver.findElement(By.xpath(prop.getProperty("Ed_NA_DepntAge")+custId+"']"));
			calendar.clear();
			calendar.sendKeys(TB_GG_ReadXL(intRowid, "Ed_NA_DepntAge", strFile));//"28/09/1998");       */
	}
	if(strCustType.equalsIgnoreCase("Company"))
	{
			
			// Trust has already taken care off
			
			if(TB_GG_ReadXL(intRowid,"Dlst_NA_ApplicantClass",strFile).equalsIgnoreCase("Company"))
			{
				bg.TB_BG_SetCustomerDetails_C(TB_GG_ReadXL(intRowid, "Dlst_NAC_YearsTrading", strFile), TB_GG_ReadXL(intRowid, "Dlst_NAC_YearsABNRegistered", strFile));
				//fills two more fields
			
				TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NAC_YearsTrading")+custId+"']","Year Trading",bg.customerDetails.get("YearsTrading"));//"5");
				TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NAC_YearsABNRegistered")+custId+"']","Year ABN Reg",bg.customerDetails.get("YearsABNRegistered"));//"1");
			
			}
		//driver.findElement(By.xpath(prop.getProperty("Lb_NAC_fieldsetmain"))).click();
	}
}
/*
 * Helpers- Needs Analysis
 *  @author skaur
 */
public void TB_LB_OccupationAndIncome(WebDriver driver,int intRowid,String strFile,String custId, BusinessGlobalFunctions bg )
{
	TB_GG_Report("Occupation and Income","", true); 
	
	TB_GG_Wait(2000);
	TB_GG_WaitAnElementPresent(driver,By.xpath(prop.getProperty("Dlst_NA_OccupationType")+custId+"']"),10000);
	WebElement occuTab =TB_GG_FindElement(driver, By.xpath(prop.getProperty("Tbl_NA_OIRecord")+custId+"']/div[1]/div[2]/table"),5000);
	// if O&I information is already there in toolbox  
	if(TB_GG_FindElement(occuTab,By.className("edit"),5000)!= null && strCustIdJoint ==null )
	{
		TB_GG_Wait();
		//TB_GG_Click((WebDriver) occuTab,By.className("edit"),"Editing existing Occupation Information");
		occuTab.findElement(By.className("edit")).click();
		
	}
	else if(TB_GG_FindElement(occuTab,By.className("delete"),5000)!= null && !strCustIdJoint.isEmpty() )
	{
		TB_GG_Wait();
	//	TB_GG_Click((WebDriver) occuTab,By.className("delete"),"deleting existing Occupation Information");
		occuTab.findElement(By.className("delete")).click();
		
	}
	
	TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);

	TB_GG_Click(driver, By.xpath(prop.getProperty("Dlst_NA_OccupationType")+custId+"']"), "Occupation Type");
	bg.TB_BG_SetOccuIncome_PAYGE(TB_GG_ReadXL(intRowid, "Dlst_NA_IncomeStatus", strFile),TB_GG_ReadXL(intRowid, "Ed_NA_BaseSalary", strFile),TB_GG_ReadXL(intRowid, "Ed_NA_OverTime", strFile),TB_GG_ReadXL(intRowid, "Ed_NA_CommissionsBonus", strFile));
	if( TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_NA_OccupationType")+custId+"']","Occupation Type",TB_GG_ReadXL(intRowid, "Dlst_NA_OccupationType", strFile)))//"Current");
	{	
			TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_NA_IncomeStatus")+custId+"']","Income Status",bg.occupationAndIncome.get("IncomeStatus"));//"PAYG");
			if(TB_GG_ReadXL(intRowid,"Dlst_NA_IncomeStatus",strFile).equalsIgnoreCase("PAYG"))
			{
				TB_GG_WaitSelectDDListItem(driver,prop.getProperty("Dlst_NA_EmpType")+custId+"']","EmpType",TB_GG_ReadXL(intRowid, "Dlst_NA_EmpType", strFile));//"Full Time");
				TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_NA_EmpName")+custId+"']"),"Employer Name",TB_GG_ReadXL(intRowid, "Ed_NA_EmpName", strFile));//"Emp1");
				WebElement calendar= driver.findElement(By.xpath(prop.getProperty("Ed_NA_StartDate")+custId+"']"));
				calendar.clear();
				calendar.sendKeys("28/09/2007");//"28/09/1998"); 
				TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_PAYGIncomeType")+custId+"']","PAYGIncomeType","Gross");//"Gross");
				
				if(TB_GG_ReadXL(intRowid, "Dlst_NA_EmpType", strFile).equalsIgnoreCase("Full Time") || TB_GG_ReadXL(intRowid, "Dlst_NA_EmpType", strFile).equalsIgnoreCase("Contract") )
					TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_NA_BaseSalary")+custId+"']"),"Base Salary",bg.occupationAndIncome.get("BaseSalary"));//"15000");
				
				if(TB_GG_ReadXL(intRowid, "Dlst_NA_EmpType", strFile).equalsIgnoreCase("Part Time"))
					TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_NA_PartTimeCasual")+custId+"']"),"Part Time Casual",bg.occupationAndIncome.get("BaseSalary"));//"15000");
		
				TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_NA_OverTime")+custId+"']"),"Over Time",bg.occupationAndIncome.get("OverTime"));
				TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_NA_CommissionsBonus")+custId+"']"),"Commissions Bonus",bg.occupationAndIncome.get("CommissionsBonus"));
				
				TB_GG_Click(driver,By.xpath(prop.getProperty("Cb_NA_Companycar")+custId+"-no']"),"Company Car No");
			    driver.findElement(By.xpath(prop.getProperty("Cb_NA_Companycar")+custId+"-no']")).sendKeys(Keys.TAB);
			    //driver.findElement(By.xpath(prop.getProperty("Cb_NA_Companycar"))).sendKeys(Keys.TAB);
			}
			else if(TB_GG_ReadXL(intRowid,"Dlst_NA_IncomeStatus",strFile).equalsIgnoreCase("Self-Employed"))
			{
				bg.occupationAndIncome.put("CompOwned",TB_GG_ReadXL(intRowid, "Ed_NA_CompOwned", strFile));
				TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_SEEmpType")+custId+"']","Employment Type",TB_GG_ReadXL(intRowid, "Dlst_NA_SEEmpType", strFile));
				TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_NA_BusName")+custId+"']"),"Business Name",TB_GG_ReadXL(intRowid, "Ed_NA_EmpName", strFile));//"Emp1");
				TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_NA_CompOwned")+custId+"']"),"Company Owned",bg.occupationAndIncome.get("CompOwned"));
				WebElement calendar= driver.findElement(By.xpath(prop.getProperty("Ed_NA_DateEstablished")+custId+"']"));
				calendar.clear();
				calendar.sendKeys("28/09/2002");//"28/09/1998"); 
				TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_AbnReg")+custId+"']","Year ABN Reg","2");
				TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_PftYear")+custId+"']","Net Profit Year",TB_GG_ReadXL(intRowid, "Dlst_NA_PftYear", strFile));
				TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_NA_NetProfit")+custId+"']"),"Net Profit",TB_GG_ReadXL(intRowid, "Ed_NA_NetProfit", strFile));
				driver.findElement(By.xpath(prop.getProperty("Ed_NA_AverageIncome")+custId+"']")).click();
				String avi =driver.findElement(By.xpath(prop.getProperty("Ed_NA_AverageIncome")+custId+"']")).getAttribute("value");
				bg.occupationAndIncome.put("AverageIncome", avi.toString() );
				driver.findElement(By.xpath(prop.getProperty("Ed_NA_AverageIncome")+custId+"']")).sendKeys(Keys.TAB);
				
			}
			
			else driver.findElement(By.xpath(prop.getProperty("Dlst_NA_IncomeStatus")+custId+"']")).sendKeys(Keys.TAB);
		

	}
	
	else driver.findElement(By.xpath(prop.getProperty("Dlst_NA_IncomeStatus")+custId+"']")).sendKeys(Keys.TAB);

	
    TB_GG_Wait(3000);
    Actions action = new Actions(driver); 
	action.sendKeys(Keys.ENTER).perform();
	TB_GG_Wait(4000);

	bg.TB_BG_SetAdditionIncome(TB_GG_ReadXL(intRowid, "Ed_NA_Investments", strFile),TB_GG_ReadXL(intRowid, "Ed_NA_SSGovPension", strFile),TB_GG_ReadXL(intRowid, "Ed_NA_FamilyAllowance", strFile),TB_GG_ReadXL(intRowid, "Ed_NA_PropRentIncome", strFile));
	TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_NA_Investments")+custId+"']"), "Investments",bg.occupationAndIncome.get("Investments") );
	TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_NA_SSGovPension")+custId+"']"), "GovPension", bg.occupationAndIncome.get("SSGovPension"));
	TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_NA_FamilyAllowance")+custId+"']"), "Family Allowance", bg.occupationAndIncome.get("FamilyAllowance"));
	if(TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Ed_NA_PropRentIncome")+custId+"']"), 5000))
		if( ! TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_NA_PropRentIncome")+custId+"']"), "PropRentIncome", bg.occupationAndIncome.get("PropRentIncome")))
			bgf.occupationAndIncome.put("PropRentIncome", "0");
    TB_GG_Wait(3000);
	//TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_NA_Occupation")), "Occupation Details");

}
/*
 * Helpers- Needs Analysis
 *  @author skaur
 */
public void TB_LB_Expenses(WebDriver driver,int intRowid,String strFile, boolean joint,BusinessGlobalFunctions bg)
{
	bg.TB_BG_SetExpenses(TB_GG_ReadXL(intRowid, "Ed_NA_ApplcntOwned", strFile), TB_GG_ReadXL(intRowid, "Ed_NA_ApplcntOwned1", strFile), TB_GG_ReadXL(intRowid, "Dlst_NA_ExpType", strFile), TB_GG_ReadXL(intRowid, "Ed_NA_ExpAmount", strFile));
	Actions action =new Actions(driver);
	TB_GG_Report("Expenses Details","", true); 
	TB_GG_Click(driver,By.xpath(prop.getProperty("Cb_NA_ExpenseYes")),"Expense To Declare");
	TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_ExpType"),"Exp Type",bg.expenses.get("ExpType"));//"Health Insurance");
	TB_GG_Click(driver, By.xpath(prop.getProperty("Cbox_NA_ApplicantName")+strCustId+"']"), "Expense CheckBox");
	TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_NA_ApplcntOwned")+strCustId+"']"),"Applicant Owned",bg.expenses.get("ApplcntOwned"));
	if(joint)
	{
		TB_GG_Click(driver, By.id(prop.getProperty("Cbox_JNA_ApplicantName").concat(strCustIdJoint)), "Expense CheckBox");
		TB_GG_Input(driver, By.id(prop.getProperty("Ed_JNA_PercentageOwned").concat(strCustIdJoint)), "Percentage Owned", bg.expenses.get("ApplcntOwnedJoint"));
	}
	
	driver.findElement(By.xpath(prop.getProperty("Ed_NA_ExpAmount"))).sendKeys(bg.expenses.get("ExpAmount"));//"800");
//	driver.findElement(By.xpath(prop.getProperty("Cb_NA_ExpOngoingYes"))).click();
	//System.out.println("Total Monthly Exp: "+ driver.findElement(By.xpath(prop.getProperty("Ed_NA_TotMonExp"))).getAttribute("value"));
	//driver.findElement(By.xpath(prop.getProperty("Cb_NA_ExpOngoingYes"))).sendKeys(Keys.TAB);
	action.sendKeys(Keys.TAB).perform();
	action.sendKeys(Keys.TAB).perform();
	action.sendKeys(Keys.ENTER).perform();
	
	TB_GG_Wait();
	//((JavascriptExecutor) driver).executeScript("document.getElementById('saveExpense').click();");   //save
//	TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_NA_ExpSave")), "Expense  Save");
	//driver.findElement(By.xpath(prop.getProperty("Btn_NA_ExpSave"))).sendKeys(Keys.ENTER);
}
/*
 * Helpers- Needs Analysis
 * 	 @ Parameters assestNo can only have value 1 or 2
 *  @author skaur
 */
public void TB_LB_Assets(WebDriver driver,int intRowid,String strFile ,boolean joint, BusinessGlobalFunctions bg, int AssestNo)
{
	// storing data in bgf
	bg.TB_BG_SetAssets(AssestNo, TB_GG_ReadXL(intRowid, "Dlst_NA_AssetType", strFile), TB_GG_ReadXL(intRowid, "Ed_NA_AssPercentage", strFile), TB_GG_ReadXL(intRowid, "Ed_NA_AssPercentage1", strFile), TB_GG_ReadXL(intRowid, "Ed_NA_AssetValue", strFile), TB_GG_ReadXL(intRowid, "Ed_NA_CurrentGrossRentalIncome", strFile));
	//
	TB_GG_Report("Assets Details","", true); 
	driver.findElement(By.xpath(prop.getProperty("Cb_NA_AssDecYes"))).click();
	TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_NA_AssetType"),"Asset Type",bg.assetsAndLiab.get("AssetType"+AssestNo));//"Property");
	//if(! (TB_GG_FindElement(driver, By.xpath(prop.getProperty("Cbox_NA_AssPerOwner")+strCustId+"']"), 5000).getAttribute("checked")).equalsIgnoreCase("checked"))
	
	if(joint)
	{
		String checked1 = TB_GG_FindElement(driver, By.xpath(prop.getProperty("Cbox_NA_AssPerOwner")+strCustId+"']"), 5000).getAttribute("checked");
		if( checked1 == null)
			TB_GG_Click(driver, By.id(prop.getProperty("Cbox_JNA_AssetOwnership").concat(strCustId)), "Assets CheckBox");
		TB_GG_Input(driver, By.id(prop.getProperty("Ed_JNA_AssetPercentageOwned").concat(strCustId)), "Percentage Owned",bg.assetsAndLiab.get("AssPercentageJoint"+AssestNo) );
	
		String checked2 = TB_GG_FindElement(driver, By.xpath(prop.getProperty("Cbox_NA_AssPerOwner")+strCustIdJoint+"']"), 5000).getAttribute("checked");
		if( checked2 == null)
		TB_GG_Click(driver, By.id(prop.getProperty("Cbox_JNA_AssetOwnership").concat(strCustIdJoint)), "Assets CheckBox");
		TB_GG_Input(driver, By.id(prop.getProperty("Ed_JNA_AssetPercentageOwned").concat(strCustIdJoint)), "Percentage Owned",bg.assetsAndLiab.get("AssPercentageJoint"+AssestNo) );
	}
	else
	{
		driver.findElement(By.xpath(prop.getProperty("Cbox_NA_AssPerOwner")+strCustId+"']")).click();
		TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_NA_AssPercentage")+strCustId+"']"),"Assets Percentage",bg.assetsAndLiab.get("AssPercentage"+AssestNo));
	}
	
	TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_NA_AssetValue")),"Asset Value",bg.assetsAndLiab.get("AssetValue"+AssestNo));//"100000");
	if(bg.assetsAndLiab.get("AssetType"+AssestNo).equalsIgnoreCase("Property"))
	{
		TB_GG_Click(driver, By.xpath(prop.getProperty("Cb_NA_OwnerOccupiedNo")),"Owner Occupied No");
		TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_NA_CurrentGrossRentalIncome")), "Current Gross Rental Income", bg.assetsAndLiab.get("CurrentGrossRentalIncome"+AssestNo));
		TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_NA_GrossRentPeriod"),"GrossRentalPeriod","Monthly");//"Property");

		driver.findElement(By.xpath(prop.getProperty("Cb_NA_AssetBeingDisposedOfNo"))).click();
		//new Select(driver.findElement(By.xpath(prop.getProperty("NA_CI_AS_SelectExistingAddress")))).selectByVisibleText("Building/23/50, Street, Circle, Sydney New South Wales 2000 Australia");
	}	
	driver.findElement(By.xpath(prop.getProperty("Btn_NA_AssSave"))).click();
	TB_GG_Wait();
}
/*
 * Helpers- Needs Analysis
 *  @ Parameters LiabNo can only have value 1 or 2
 *  @author skaur
 */
public void TB_LB_Liabilities(WebDriver driver,int intRowid,String strFile,boolean joint, BusinessGlobalFunctions bg, int LiabNo )
{
	TB_GG_Report("Liabilities Details","", true);
	
	bg.TB_BG_SetLiab(LiabNo,TB_GG_ReadXL(intRowid, "Ed_NA_LiabPercentage", strFile) ,TB_GG_ReadXL(intRowid, "Ed_NA_LiabPercentage1", strFile),TB_GG_ReadXL(intRowid, "Dlst_NA_LiabType", strFile),TB_GG_ReadXL(intRowid, "Ed_NA_OutStandingBal", strFile));
	TB_GG_ClickFast(driver, By.xpath(prop.getProperty("Cbox_NA_LiabPerOwner")+strCustId+"']"), "Expense CheckBox");
	TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_NA_LiabPercentage")+strCustId+"']"),"Liability %", bg.assetsAndLiab.get("LiabPercentage"+LiabNo));//"100");
	if(joint)
	{
		TB_GG_Click(driver, By.id(prop.getProperty("Cbox_JNA_LiabilityOwnership").concat(strCustIdJoint)), "Expense CheckBox");
		TB_GG_Input(driver, By.id(prop.getProperty("Ed_JNA_LiabilityPercentageOwned").concat(strCustIdJoint)), "Percentage Owned", bg.assetsAndLiab.get("LiabPercentageJoint"+LiabNo));
	}
	TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_NA_LiabType"),"Liability Type",bg.assetsAndLiab.get("LiabType"+LiabNo));//"Credit Card");
	TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_NA_OutStandingBal")), "Out Standing Balance",bg.assetsAndLiab.get("OutStandingBal"+LiabNo) );
	//TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_NA_LiabType"),"Liability Type",TB_GG_ReadXL(intRowid, "Dlst_NA_LiabType", strFile));//"Credit Card");
	if(bg.assetsAndLiab.get("LiabType"+LiabNo).equalsIgnoreCase("Mortgage")||bg.assetsAndLiab.get("LiabType"+LiabNo).equalsIgnoreCase("Other Loan")||bg.assetsAndLiab.get("LiabType"+LiabNo).equalsIgnoreCase("Personal Loan"))
	{
		TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_NA_OriginalAmount")), "Original Amount", bg.assetsAndLiab.get("OutStandingBal"+LiabNo));
		TB_GG_Click(driver, By.xpath(prop.getProperty("Cbox_NA_TaxDeductableYes")), "Tax Deductable Yes");
	}
	else if(bg.assetsAndLiab.get("LiabType"+LiabNo).equalsIgnoreCase("Credit Card") || bg.assetsAndLiab.get("LiabType"+LiabNo).equalsIgnoreCase("Store Card"))
	{
		//TB_GG_Click(driver, By.xpath(prop.getProperty("Cb_NA_LiabHasLimitYes")), "Liability has limit- Yes");
		TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_NA_Limit")), "Limit","20000" );// hard coded to this value
	}
	TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_NA_RepayFreq"),"Repay Frequency","Monthly");
	if(bg.assetsAndLiab.get("LiabType"+LiabNo).equalsIgnoreCase("Store Card"))
		TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_NA_StoreName")), "Store Name",TB_GG_ReadXL(intRowid, "Ed_NA_Lender", strFile) );
	else if( ! bg.assetsAndLiab.get("LiabType"+LiabNo).equalsIgnoreCase("Other Loan"))
		TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_NA_Lender")),"Lender",TB_GG_ReadXL(intRowid, "Ed_NA_Lender", strFile));//"CBA");
	driver.findElement(By.xpath(prop.getProperty("Cb_NA_LiabOngoingYes"))).click();
	//TB_GG_Wait();
	TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_NA_LiabSave")),"Save");
}
/*
 * Helpers- Needs Analysis
 *  @author skaur
 */
public void TB_LB_CreditHistory(WebDriver driver,int intRowid,String strFile,String custId )
{
	TB_GG_Report("Credit History","", true); 
	TB_GG_Wait();
	TB_GG_Click(driver, By.xpath(prop.getProperty("Cb_NA_LegalNo")+custId+"-2']"),"Legal No");
	TB_GG_Click(driver, By.xpath(prop.getProperty("Cb_NA_JudgementNo")+custId+"-2']"),"Judgement No");
	TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_FinExp")+custId+"']","Final Exp","Intermediate");//"Intermediate");
	TB_GG_Click(driver, By.xpath(prop.getProperty("Cb_NA_TranAcc")+custId+"-2']"),"Transaction Account No");
	TB_GG_Click(driver, By.xpath(prop.getProperty("Cb_NA_CreditCard")+custId+"-2']"),"Credit Card No");
	TB_GG_Click(driver, By.xpath(prop.getProperty("Cb_NA_Loans")+custId+"-2']"),"Loan Payment No");
	
}
/*
 * Helpers- Needs Analysis
 *  @author skaur
 */
public void TB_LB_EstimatedFundsToComplete(WebDriver driver,int intRowid,String strFile )
{
	TB_GG_Report("Estimated Funds To Complete","", true); 
	TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),20000);

	TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_NA_PurchasePrice")),"Purchase Price",TB_GG_ReadXL(intRowid, "Ed_NA_PurchasePrice", strFile));//"600000");
	if(!TB_GG_ReadXL(intRowid, "Dlst_NA_LoanReason", strFile).contains("Variation"))
		TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_PropState"),"State",TB_GG_ReadXL(intRowid, "Dlst_NA_PropState", strFile));//"New South Wales");
	TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_NA_EFTCSavings")),"Savings",TB_GG_ReadXL(intRowid, "Ed_NA_EFTCSavings", strFile));//"45000");
	
	TB_GG_Wait();
	String TotalCosts =  driver.findElement(By.xpath(prop.getProperty("Ed_NA_TotalCosts"))).getAttribute("value");
	//TotalCosts = Ed_NA_PurchasePrice+Ed_NA_StampDuty+Ed_NA_RegTransferFee
	String TotalHeld = driver.findElement(By.xpath(prop.getProperty("Ed_NA_TotalHeld"))).getAttribute("value");
	
	String surplus = driver.findElement(By.xpath(prop.getProperty("Ed_NA_TotalSurplus"))).getAttribute("value");
	// surplus = TotalCosts - TotalHeld
	System.out.println("Toatal surplus is: " +surplus );
	
	//TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_NA_EstFunds")), "Estimated Funds");
	

	
}
/*
 * Helpers- Needs Analysis
 *  @author skaur
 */
public void TB_LB_PreliminaryCapacityToRepay(WebDriver driver,int intRowid,String strFile )
{
	String strAssRate="";
	
	TB_GG_Report("Preliminary Capacity To Repay","", true); 
	strLoanTerm =TB_GG_ReadXL(intRowid, "Dlst_NA_LoanTermYearID", strFile);
	strRepaymentType = TB_GG_ReadXL(intRowid, "Dlst_NA_RepaymentType", strFile);
    TB_GG_Wait();
	TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_NA_LoanTermYear"),"Loan Term Year",TB_GG_ReadXL(intRowid, "Dlst_NA_LoanTermYearID", strFile));//"Principle & Interest");
	TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_NA_RepaymentType"),"RepaymentType type",TB_GG_ReadXL(intRowid, "Dlst_NA_RepaymentType", strFile));//"Principle & Interest");
	// 
	TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_NA_TotalSecurityPropertyValue")),"Total Security Property Value",TB_GG_ReadXL(intRowid, "Ed_NA_TotalSecurityPropertyValue", strFile));//"45000");
	TB_GG_Wait(2000);
	String strchecked = driver.findElement(By.xpath(prop.getProperty("Cb_NA_PCRYes"))).getAttribute("checked");
	System.out.println(strchecked);
	
	String incomeAssessed = driver.findElement(By.xpath(prop.getProperty("Ed_NA_NetMonthlyIncomeForAssessmentPurposes"))).getAttribute("value");
	String ongoingMExp= driver.findElement(By.xpath(prop.getProperty("Ed_NA_TotalOngoingMonthlyExpenses"))).getAttribute("value");
	
	//Get Assessment Rate to Calculate Monthly Repayments
	strAssRate= driver.findElement(By.xpath(prop.getProperty("Ed_NA_AssRate"))).getAttribute("value");

	String livingExp = driver.findElement(By.xpath(prop.getProperty("Ed_NA_LivingExp"))).getAttribute("value");
	String loanRepay = driver.findElement(By.xpath(prop.getProperty("Ed_NA_LoanRepayment"))).getAttribute("value");
	String res ="";
	
	//////// LIVING EXPENSES TEST
	double disLivingExp = TB_GG_StringToDouble(livingExp);
	double expLivingExp =0.0;
	if(TB_GG_VerifyExecution("TB_BP_LoadLivingExp_Serviceability"))
	{
		if(!bgf.customerDetails.get("ApplicantClass").equalsIgnoreCase("Individual"))
			expLivingExp = TB_LB_getExpLivingExpJoint("PCR", bgf.customerDetails.get("State"), bgfJoint.customerDetails.get("State"), bgf.customerDetails.get("NumDependents"), bgfJoint.customerDetails.get("NumDependents"));
		else
			expLivingExp = TB_LB_getExpLivingExpIndividual("PCR",  bgf.customerDetails.get("State"), bgf.customerDetails.get("MaritalStatus"),bgf.customerDetails.get("PartnerEmp"), bgf.customerDetails.get("NumDependents"));
		//check and report
			res ="Expected Living Expenses: "+expLivingExp+" = Displayed Living Expenses: "+ disLivingExp;
			if(disLivingExp==expLivingExp) 
			{
				TB_GG_Report(res, "Pass", true);
				TB_GG_Log(res);
				
			}
			else
			{
				TB_GG_Report(res, "Fail", true);
				TB_GG_Log(res);
			}
		}
		else
		{
			TB_GG_Report("You haven't loaded Living Expenses form toolbox for expected values", "Pass", true);
		}
	/////////////////////
	
	
	/////// SURPLUS INCOME TEST
	
	String si = driver.findElement(By.xpath(prop.getProperty("Ed_NA_SurplusIncome"))).getAttribute("value");
	double disSI =  TB_GG_StringToDouble(si);
	double expSI = TB_LB_SurplusIncome(incomeAssessed,ongoingMExp, livingExp, loanRepay);
	//expSI= Math.round(expSI*10)/10;
	res = "Displayed Surplus Income: "+ disSI +" = Expected Surplus Income: "+expSI;
	if(disSI == expSI)
	{
		TB_GG_Report(res, "Pass", true );
		TB_GG_Log(res);
	}
	else
	{
		TB_GG_Report(res, "Fail", true );
		TB_GG_Log(res);
	}
	System.out.println("");
	
	//
	if((TB_GG_FindElement(driver, By.id("NA_SI_PCTR_CapacityToRepay"), 3000).getAttribute("value")).equals("2"))
	{
		TB_GG_Report(expSI+" -Surplus Income is less then minimum required value", "Fail", true);
		if(TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Ed_NA_ImpNote")), intTimeOut))
		TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_NA_ImpNote")), "Important Note", "Testing Negative Surplus");
		if(driver.findElement(By.xpath(prop.getProperty("Btn_PS"))).isEnabled())
		{ 
			TB_GG_Report("Verify negative surplus condition", "Pass", true);
		}
		else
		{
			TB_GG_Report("Verify negative surplus condition", "Pass", true);
		}
	}
	
	
	
	////Calculating Ass monthly repayments 
	double drepay= TB_LB_CalAssMonRepayment( strAssRate, strRepaymentType, strLoanTerm );
	if(drepay==TB_GG_StringToDouble(loanRepay))
		TB_GG_Report("Correct  Monthly Repayment - Actual :"+ loanRepay+ " Expected : " + drepay, "Pass", true);
	else
		TB_GG_Report("Incorrect Monthly Repayment - Actual :"+ loanRepay+ " Expected : " + drepay, "Fail", true);
	System.out.println("Monthly Repayment Actual :"+ loanRepay+ " Expected : " + drepay);
	
	//Calculate GrossIncome And net Income for first customer
	TB_GG_Wait();
	double dGrInc1 = TB_LB_CalGrossIncome( bgf);
	double dNetInc1 = TB_LB_CalNetMonthlyInc( dAnnGrossTaxableIncome) + (dGrInc1/12 - dAnnGrossTaxableIncome/12);
	double dGrInc2 = 0;
	double dNetInc2 =0;
	
	if(!strCustIdJoint.isEmpty() )
		if( ! bgfJoint.customerDetails.get("ApplicantType").equalsIgnoreCase("Guarantor"))
	{
		 dGrInc2 = TB_LB_CalGrossIncome( bgfJoint);
		 dNetInc2 = TB_LB_CalNetMonthlyInc( dAnnGrossTaxableIncome) + (dGrInc2/12 - dAnnGrossTaxableIncome/12);
	}
	dTotalNetIncome = dNetInc1+ dNetInc2;
	dTotalGrossIncome = (dGrInc1 + dGrInc2)/12;
	
		/////Total Net Income  Test
	double dMonNetIncomeDis = TB_GG_StringToDouble(driver.findElement(By.xpath(prop.getProperty("Ed_NA_NetIncome"))).getAttribute("value"));

	System.out.println("Total Net Income is Dispalyed Actual :"+ dMonNetIncomeDis+ " Expected : " + (double)Math.round(dTotalNetIncome* 100) / 100);
	if(((double)Math.round(dTotalNetIncome* 100) / 100) ==((double)Math.round(dMonNetIncomeDis* 100) / 100)) //Format and round about by two decimal place
	//if(df.format(dTotalNetIncome).equals(df.format(dMonNetIncomeDis)))
		TB_GG_Report("Correct Total Net Income - Actual :"+ dMonNetIncomeDis+ " Expected : " + (double)Math.round(dTotalNetIncome* 100) / 100, "Pass", true);
	else
		TB_GG_Report("Incorrect Total Net Income - Actual :"+ dMonNetIncomeDis+ " Expected : " + (double)Math.round(dTotalNetIncome* 100) / 100, "Fail", true);
	
	///  Total Gross Income Income

	double	dMonGrossIncomeDisp = TB_GG_StringToDouble(driver.findElement(By.xpath(prop.getProperty("Ed_NA_TotGrossIncome"))).getAttribute("value"));
	
	System.out.println("Total Gross Income is Dispalyed Actual :"+ dMonGrossIncomeDisp+ " Expected : " + (double)Math.round(dTotalGrossIncome* 100) / 100);
	
	if(((double)Math.round(dTotalGrossIncome* 100) / 100) ==((double)Math.round(dMonGrossIncomeDisp* 100) / 100))
	//if(df.format(dTotalGrossIncome).equals(df.format(dMonGrossIncomeDisp)))
		TB_GG_Report("Correct Total Gross Income - Actual :"+ dMonGrossIncomeDisp+ " Expected : " + (double)Math.round(dTotalGrossIncome* 100) / 100, "Pass", true);
	else
		TB_GG_Report("Incorrect Total Gross Income - Actual :"+ dMonGrossIncomeDisp+ " Expected : " + (double)Math.round(dTotalGrossIncome* 100) / 100, "Fail", true);
	TB_GG_Click(driver,By.id("PreliminaryCapacityToRepayId"),"Preliminary Capacity To Repay");
	////////
}

/* Formula: 
 * Surplus income = Net Income for assessment purpose -Monthly ongoing Exp - Living Exp- Assessed monthly repayments
 * 
 * @ Purpose   TB_LB_SurplusIncome calculates Surplus income	
 * @ return 	expected value for surplus income
 * @author skaur
 */

public double TB_LB_SurplusIncome(String incomeAssessed, String mthOngoingExp, String livExp, String assessedMthRepay)
{
	
	try
	{
		double ni = TB_GG_StringToDouble(incomeAssessed);
		double moe =TB_GG_StringToDouble(mthOngoingExp);
		double le = TB_GG_StringToDouble(livExp);
		double amr = TB_GG_StringToDouble(assessedMthRepay);
		Double d = (double)Math.round((ni-moe-le-amr)* 100) / 100;

		return d;
	}
	catch(NumberFormatException e)
	{
		return 0.0;
	}
}
/*
 * @ Purpose   TB_LB_PCR_VerifyStampRegTransfer is used to verify the calculation for Stamp Duty, Registration and transfer fee in Needs Analysis
 * @ Parameters	row no form data sheet	
 * @ return 	boolean
 *  @author skaur
 */



public boolean TB_LB_PCR_VerifyStampRegTransfer(WebDriver driver, int intRowid)
{
	
	TB_GG_Report("Verify Stamp,Register,Transfer Fee","", true); 
	//DecimalFormat format = (DecimalFormat) DecimalFormat.getInstance(Locale.getDefault()); // make locale-specific
	double expStampDuty=0.0,  expRT=0.0, dispStampDuty =0.0, dispRT=0.0;
	//Set Data input file and row 
	String strFile=TB_GG_SetInputFile("TB_DSL_Calulator_StampRegFee.xls");
	String strStepdetail="";
	boolean bRes = false;
	String lp, lr, pur, state, expS, reg, stamp="", rT="";
	TB_GG_Wait(7000);
	
	if(TB_GG_DoesWebElementExist(driver,By.xpath(prop.getProperty("Btn_NA_MeetingDetails")),intTimeOut))
	{
		strStepdetail="Needs Analysis page open for Customer Type: personal";
		TB_GG_Report(strStepdetail, "Pass", true);
		TB_GG_Log(strStepdetail);
		TB_GG_ReportSp(1, intRowid, TB_GG_ReadXL(intRowid, "Test Case", strFile));
		
//meeting details
		if(!TB_GG_DoesWebElementExist(driver,By.xpath(prop.getProperty("Dlst_NA_LoanPurpose")),5000))
		{
			TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_NA_MeetingDetails")), "Meeting Details");
			TB_GG_Wait();
		}
	//function call	
		//TB_LB_MeetingDetails(driver,intRowid,strFile,"Personal");
		lp = TB_GG_ReadXL(intRowid, "Dlst_NA_LoanPurpose", strFile); 
		TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_LoanPurpose"),"Loan purpose",lp);
		TB_GG_ReportSp(4,intRowid, lp);
		lr = TB_GG_ReadXL(intRowid, "Dlst_NA_LoanReason", strFile);
		TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_LoanReason"),"Laon reason",lr);//"Purchase");
		TB_GG_ReportSp(6,intRowid, lr);
		TB_GG_Wait();
		//verify ticks and report
		TB_LB_CheckGreenTick(driver,"Lb_NA_MeetingDetailsTick","Meeting Details");
	
//Estimated Funds To Complete

		TB_GG_Click(driver,By.xpath(prop.getProperty("Btn_NA_EstFunds")),"Estimated Funds To Complete");
		
		TB_GG_Wait(7000);
		TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),60000);
		//driver.findElement(By.tagName("img").name("/images/bigloading.gif"));
		//if(!TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Img_TB_Loading1")), 5000) && !TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Img_TB_Loading2")), 5000))
		{
			//TB_GG_Wait(20000);
		
			//if page not opened click again
			if(!TB_GG_DoesWebElementExist(driver, (By.xpath(prop.getProperty("Ed_NA_PurchasePrice"))), intTimeOutForPaging))
			{
				driver.findElement(By.xpath(prop.getProperty("Btn_NA_EstFunds"))).click();
				System.out.println("Clicked again");
				TB_GG_Wait(12000);
			}
			pur = TB_GG_ReadXL(intRowid, "Ed_NA_PurchasePrice", strFile);
			TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_NA_PurchasePrice")), "Prchase Price ", pur);
			TB_GG_ReportSp(5, intRowid, pur);
			state = TB_GG_ReadXL(intRowid, "Dlst_NA_PropState", strFile);
			TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_PropState"),"State",state);
			TB_GG_ReportSp(2, intRowid, state);
			if(TB_GG_ReadXL(intRowid, "First Home Buyer", strFile).equalsIgnoreCase("Yes"))
			{
				TB_GG_Click(driver, By.xpath(prop.getProperty("Cb_NA_FHBYes")), "FHO: Yes");
				TB_GG_ReportSp(3, intRowid, "Yes");
			}	
			else
			{
				TB_GG_Click(driver, By.xpath(prop.getProperty("Cb_NA_FHBNo")), "FHO: No");
				TB_GG_ReportSp(3, intRowid, "No");
			}
		}	
		 try
		 {
			 		//driver.findElement(By.xpath(prop.getProperty("Ed_NA_StampDuty"))).sendKeys(Keys.TAB);
			 		//Actions action = new Actions(driver); 
			 		//action.sendKeys(Keys.ENTER).perform();
			 		TB_GG_Wait(20000); 
						stamp = driver.findElement(By.xpath(prop.getProperty("Ed_NA_StampDuty"))).getAttribute("value").replace('$', ' ');
						stamp = stamp.replaceAll(",","");
					TB_GG_ReportSp(8, intRowid, stamp);
					System.out.println("Given stamp is: " +stamp );
					if(!stamp.isEmpty())dispStampDuty = Double.parseDouble(stamp.trim());
					System.out.println("Given double stamp is: " +dispStampDuty );
					//driver.findElement(By.xpath(prop.getProperty("Ed_NA_RegTransferFee"))).sendKeys(Keys.TAB);
					//action.sendKeys(Keys.ENTER).perform();
					//TB_GG_Wait(5000); 
						rT = driver.findElement(By.xpath(prop.getProperty("Ed_NA_RegTransferFee"))).getAttribute("value").replace('$', ' ');
						rT= rT.replaceAll(",","");
					TB_GG_ReportSp(11,intRowid, rT);
					System.out.println("Given regt & Transfer is: " +rT );
					if(!rT.isEmpty())dispRT = Double.parseDouble(rT.trim());
					System.out.println("Given double regt & Transfer is: " + dispRT );
			//get expected values from given data sheet
					expS = TB_GG_ReadXL(intRowid, "Stamp Duty", strFile);
					TB_GG_ReportSp(7, intRowid, expS);
					if(!expS.isEmpty()) 
						expStampDuty =Double.parseDouble(expS);
					System.out.println("Expected stamp: "+expStampDuty);
					reg = TB_GG_ReadXL(intRowid, "RegAndTransfer", strFile);
					TB_GG_ReportSp(10, intRowid, reg);
					if(!reg.isEmpty()) 
						expRT = Double.parseDouble(reg);
					System.out.println("Expected regt & Transfer: "+expRT);
			//verify and report in both files
				//verify Stamp Duty	
					System.out.println("Result:    "+expStampDuty +"="+ dispStampDuty);
					if(expStampDuty == dispStampDuty)
					{
						
						TB_GG_ReportSp(9, intRowid, "Pass");
						TB_GG_Report("Calculation of Stamp Duty for given scenario","Pass",true);
					}
					else
					{
						TB_GG_ReportSp(9,intRowid, "Fail");
						TB_GG_Report("Calculation of Stamp Duty for given scenario","Fail",true);
					}
				//verify Registration & Transfer fee	
					if(expRT== dispRT)
					{
						TB_GG_ReportSp(12, intRowid, "Pass");
						TB_GG_Report("Calculation of Registration & transfer for given scenario","Pass",true);
					}
					else
					{
						TB_GG_ReportSp(12,intRowid, "Fail");
						TB_GG_Report("Calculation of Registration & transfer fee for given scenario","Fail",true);
					}
					if((expStampDuty == dispStampDuty) && (expRT== dispRT)) bRes = true;
				}
				catch(Exception e)
				{
					TB_GG_captureScreen(driver, "Stamp_RegTransfer");
					e.printStackTrace();
				}
			}
			else
			{
				strStepdetail="Needs Analysis page open for Customer";
				TB_GG_Report(strStepdetail, "Fail", true);
				TB_GG_Log(strStepdetail);
				TB_GG_captureScreen(driver, "Calculator");
				TB_GG_ReportSp(8, intRowid,  new String[]{"0","Execution Fail"});
				TB_GG_ReportSp(11, intRowid, new String[]{"0","Execution Fail"});
				bRes =false;
			}
	
	return bRes;
}



/*
 * @ Purpose   TB_LB_VerifyMandatory is used to verify the mandatory field checks in the form
 * @ Parameters		Pass variables name for xpaths of required mandatory fields  
 * @ return 	returns the list of error msgs got from the form
 *  @author skaur
 */


public ArrayList<String> TB_LB_VerifyMandatory(String... errXpath) 
{       
	 ArrayList<String> strMsg = new ArrayList<String>();     
	 //boolean t = false;
	 for( int i =0 ; i< errXpath.length; i++)
	 {
		 WebElement w = driver.findElement( By.xpath(".//*[@id='fieldset-personalDetails']/ul/li[2]/div/ul"));
		 System.out.println(w.getText());
		if(TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty(errXpath[i])), 5000))
		 {
			int index= errXpath[i].indexOf('_', 4);
			strMsg.add((errXpath[i].substring(index+1))+ ": missing manadatory field check");
			TB_GG_captureScreen(driver, "VerifyMandatory");
		 }	
	 }
	return strMsg;
	
}
/*
 * @ Purpose    Editing Existing customer
 * @ Parameters Row num of create customer excel sheet which have data need to be updated 
 * @ return 	Return true if customer's information is updated 
 * @ Author		Ruchi
 */


public boolean TB_LB_EditCustomer(WebDriver driver, int intRowid){
	
	String strFile=TB_GG_SetInputFile("TB_DFL_CreateCustomer.xls");
	//"./DataPool/TB_DFL_CreateCustomer.xls";
	//int intRowid=1;//TB_GG_GetExecutionRow();
	boolean bResult = false;
	String strStepDetails="",strGivenMobNumber="",strDispMobNumber="";
	//String strStatus="";
	//String strSuiteStatus="";
	TB_GG_Report("Edit Customer","", true); 
	try{
		strStepDetails="Editing Customer Details";
		
		
		TB_GG_Log(strStepDetails);
		if(strSearchType.equalsIgnoreCase("Personal"))/////////////Personal Type Customer Search

		{
		 
	driver.findElement(By.xpath(prop.getProperty("Btn_ECP_Edit"))).click();
	 TB_GG_SwitchToIframe(driver,prop.getProperty("Frm_AllNewframes"));
//	driver.findElement(By.xpath(prop.getProperty("Ed_CSP_MobArea"))).clear();
	TB_GG_Wait(5000);
	driver.findElement(By.xpath(prop.getProperty("Ed_CSP_MobArea"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_CSP_MobArea",strFile));
	
	driver.findElement(By.xpath(prop.getProperty("Ed_CSP_MobNum"))).clear();
	driver.findElement(By.xpath(prop.getProperty("Ed_CSP_MobNum"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_CSP_MobNum",strFile));
	
	driver.findElement(By.xpath(prop.getProperty("Btn_ECP_ResidentialAdd"))).click();
	
	TB_GG_SelectDDListItem(driver , prop.getProperty("Dlst_NCP_State"), "State",TB_GG_ReadXL(intRowid,"Dlst_NCP_State",strFile));
	
	driver.findElement(By.xpath(prop.getProperty("Ed_NCP_Suburb"))).clear();
	driver.findElement(By.xpath(prop.getProperty("Ed_NCP_Suburb"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCP_Suburb",strFile));

	driver.findElement(By.xpath(prop.getProperty("Ed_NCP_Postcode"))).clear();
	driver.findElement(By.xpath(prop.getProperty("Ed_NCP_Postcode"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCP_Postcode",strFile));
	
	driver.findElement(By.xpath(prop.getProperty("Ed_NCP_BuildingName"))).clear();
	driver.findElement(By.xpath(prop.getProperty("Ed_NCP_BuildingName"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCP_BuildingName",strFile));
	
	driver.findElement(By.xpath(prop.getProperty("Ed_NCP_UnitNum"))).clear();
	driver.findElement(By.xpath(prop.getProperty("Ed_NCP_UnitNum"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCP_UnitNum",strFile));
	
	driver.findElement(By.xpath(prop.getProperty("Ed_NCP_FloorNum"))).clear();
	driver.findElement(By.xpath(prop.getProperty("Ed_NCP_FloorNum"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCP_FloorNum",strFile));
	
	
	driver.findElement(By.xpath(prop.getProperty("Ed_NCP_StreetName"))).clear();
	driver.findElement(By.xpath(prop.getProperty("Ed_NCP_StreetName"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCP_StreetName",strFile));
	
	driver.findElement(By.xpath(prop.getProperty("Ed_NCP_StreetNum"))).clear();
	driver.findElement(By.xpath(prop.getProperty("Ed_NCP_StreetNum"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCP_StreetNum",strFile));

	
	TB_GG_SelectDDListItem(driver , prop.getProperty("Dlst_NCP_StreetType"), "Street Type",TB_GG_ReadXL(intRowid,"Dlst_NCP_StreetType",strFile));

	strGivenAddressDetails=TB_GG_ReadXL(intRowid,"Ed_NCP_BuildingName",strFile)+" "+TB_GG_ReadXL(intRowid,"Ed_NCP_FloorNum",strFile)+" " + TB_GG_ReadXL(intRowid,"Ed_NCP_UnitNum",strFile)+"\n"+TB_GG_ReadXL(intRowid,"Ed_NCP_StreetNum",strFile)+" "+ TB_GG_ReadXL(intRowid,"Ed_NCP_StreetName",strFile)+" "+ TB_GG_ReadXL(intRowid,"Dlst_NCP_StreetType",strFile)+"\n"+TB_GG_ReadXL(intRowid,"Ed_NCP_Suburb",strFile)+"\n"+TB_GG_ReadXL(intRowid,"Dlst_NCP_State",strFile)+"\n"+TB_GG_ReadXL(intRowid,"Ed_NCP_Postcode",strFile)+"\n"+TB_GG_ReadXL(intRowid,"Dlst_NCP_Country",strFile)	;
    
	strGivenMobNumber = TB_GG_ReadXL(intRowid,"Ed_CSP_MobArea",strFile) + "-" + TB_GG_ReadXL(intRowid,"Ed_CSP_MobNum",strFile);

/*	driver.findElement(By.xpath(prop.getProperty("Ed_NCP_BuildingName"))).clear();
	driver.findElement(By.xpath(prop.getProperty("Ed_NCP_BuildingName"))).sendKeys("BuildingBB");
*/	
	TB_GG_SelectDDListItem(driver , prop.getProperty("Dlst_NCP_MaritalStatus"), "Marital Status","Single");//TB_GG_ReadXL(intRowid,"Dlst_NCP_MaritalStatus",strFile));


//	TB_GG_SelectDDListItem(driver , prop.getProperty("Dlst_NCP_Status"), "Status",TB_GG_ReadXL(intRowid,"Dlst_NCP_Status",strFile));
		}
	 else if(strSearchType.equalsIgnoreCase("Company"))
		{
		 	
		 	driver.findElement(By.xpath(prop.getProperty("Btn_ECC_Edit"))).click();
		 	TB_GG_SwitchToIframe(driver,prop.getProperty("Frm_AllNewframes"));
		 	driver.findElement(By.xpath(prop.getProperty("Ed_CSC_OfficeArea"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_CSC_OfficeArea",strFile));
			
			driver.findElement(By.xpath(prop.getProperty("Ed_CSC_OfficePhone"))).clear();
			driver.findElement(By.xpath(prop.getProperty("Ed_CSC_OfficePhone"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_CSC_OfficePhone",strFile));
			
			driver.findElement(By.xpath(prop.getProperty("Btn_ECC_TradingAdd"))).click();
			
			TB_GG_SelectDDListItem(driver , prop.getProperty("Dlst_NCC_State"), "State",TB_GG_ReadXL(intRowid,"Dlst_NCC_State",strFile));
			
			driver.findElement(By.xpath(prop.getProperty("Ed_NCC_Suburb"))).clear();
			driver.findElement(By.xpath(prop.getProperty("Ed_NCC_Suburb"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCC_Suburb",strFile));

			driver.findElement(By.xpath(prop.getProperty("Ed_NCC_Postcode"))).clear();
			driver.findElement(By.xpath(prop.getProperty("Ed_NCC_Postcode"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCC_Postcode",strFile));
			
			driver.findElement(By.xpath(prop.getProperty("Ed_NCC_BuildingName"))).clear();
			driver.findElement(By.xpath(prop.getProperty("Ed_NCC_BuildingName"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCC_BuildingName",strFile));
			
			 driver.findElement(By.xpath(prop.getProperty("Ed_NCC_FloorNum"))).clear();
			 driver.findElement(By.xpath(prop.getProperty("Ed_NCC_FloorNum"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCC_FloorNum",strFile));

			driver.findElement(By.xpath(prop.getProperty("Ed_NCC_UnitNum"))).clear();
			driver.findElement(By.xpath(prop.getProperty("Ed_NCC_UnitNum"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCC_UnitNum",strFile));
			
			driver.findElement(By.xpath(prop.getProperty("Ed_NCC_StreetName"))).clear();
			driver.findElement(By.xpath(prop.getProperty("Ed_NCC_StreetName"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCC_StreetName",strFile));
			
			driver.findElement(By.xpath(prop.getProperty("Ed_NCC_StreetNum"))).clear();
			driver.findElement(By.xpath(prop.getProperty("Ed_NCC_StreetNum"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_NCC_StreetNum",strFile));

			
			TB_GG_SelectDDListItem(driver , prop.getProperty("Dlst_NCC_StreetType"), "Street Type",TB_GG_ReadXL(intRowid,"Dlst_NCC_StreetType",strFile));

			strGivenAddressDetails=TB_GG_ReadXL(intRowid,"Ed_NCC_BuildingName",strFile)+" "+TB_GG_ReadXL(intRowid,"Ed_NCC_FloorNum",strFile)+" " + TB_GG_ReadXL(intRowid,"Ed_NCC_UnitNum",strFile)+"\n"+TB_GG_ReadXL(intRowid,"Ed_NCC_StreetNum",strFile)+" "+ TB_GG_ReadXL(intRowid,"Ed_NCC_StreetName",strFile)+" "+ TB_GG_ReadXL(intRowid,"Dlst_NCC_StreetType",strFile)+"\n"+TB_GG_ReadXL(intRowid,"Ed_NCC_Suburb",strFile)+"\n"+TB_GG_ReadXL(intRowid,"Dlst_NCC_State",strFile)+"\n"+TB_GG_ReadXL(intRowid,"Ed_NCC_Postcode",strFile)+"\n"+TB_GG_ReadXL(intRowid,"Dlst_NCC_Country",strFile)	;
			strGivenMobNumber = TB_GG_ReadXL(intRowid,"Ed_CSC_OfficeArea",strFile) + "-" + TB_GG_ReadXL(intRowid,"Ed_CSC_OfficePhone",strFile);

		/*	driver.findElement(By.xpath(prop.getProperty("Ed_NCP_BuildingName"))).clear();
			driver.findElement(By.xpath(prop.getProperty("Ed_NCP_BuildingName"))).sendKeys("BuildingBB");
		*/	
			//TB_GG_SelectDDListItem(driver , prop.getProperty("Dlst_NC_MaritalStatus"), "Marital Status","Single");//TB_GG_ReadXL(intRowid,"Dlst_NCP_MaritalStatus",strFile));


			//TB_GG_SelectDDListItem(driver , prop.getProperty("Dlst_NCC_Status"), "Status",TB_GG_ReadXL(intRowid,"Dlst_NCC_Status",strFile));
				
		 
		}

	driver.findElement(By.xpath(prop.getProperty("Btn_Save"))).sendKeys(Keys.ENTER);
	driver.switchTo().defaultContent();
	if(strSearchType.equalsIgnoreCase("Personal"))
	{
		TB_GG_Wait(9000);
		strAddressDetailsDisplayed="";
		//strAddressDetailsDisplayed=driver.findElement(By.xpath(prop.getProperty("Txt_NCP_AllAddress"))).getText();
		
		
    	boolean bFound=TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Txt_NCP_AllAddress")), 5000);
    	System.out.print(bFound);
    	strAddressDetailsDisplayed=driver.findElement(By.xpath(prop.getProperty("Txt_NCP_AllAddress"))).getText();
    	if(TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Txt_NCP_Broker")), 5000))
        strBrokerDisplayed=driver.findElement(By.xpath(prop.getProperty("Txt_NCP_Broker"))).getText();
        
        strBranchDisplayed=driver.findElement(By.xpath(prop.getProperty("Txt_NCP_Branch"))).getText();
		strDispMobNumber = driver.findElement(By.xpath(prop.getProperty("Txt_ECP_MobNum"))).getText();

      
	}
	
	else if(strSearchType.equalsIgnoreCase("Company")){
		TB_GG_Wait();
		strAddressDetailsDisplayed="";
		strAddressDetailsDisplayed=driver.findElement(By.xpath(prop.getProperty("Txt_NCC_AllAddress"))).getText();
		strDispMobNumber = driver.findElement(By.xpath(prop.getProperty("Txt_ECC_PhoneNum"))).getText();

//	strBrokerDisplayed=driver.findElement(By.xpath(prop.getProperty("Txt_NCC_Broker"))).getText();
  //  strBranchDisplayed=driver.findElement(By.xpath(prop.getProperty("Txt_NCC_Branch"))).getText();
	}
	if(strGivenAddressDetails.equalsIgnoreCase(strAddressDetailsDisplayed) && strGivenMobNumber.equalsIgnoreCase(strDispMobNumber))//,strGivenBroker[0],strGivenBranch))
		{
		TB_GG_Report("Customer is Updated Successfully","Pass", true);
		bResult=true;
		}
	else
		TB_GG_Report("Customer is not Updated","Fail", true);
	
	System.out.println(strGivenAddressDetails);
	System.out.println(strAddressDetailsDisplayed);
}
catch(Exception e){
	
}
	return bResult;

}



/*
 * @ Purpose    Product Search after Needs Analysisis Complete
 * @ Parameters Row num of TB_DFL_ProductSearch.xls  sheet which have data for the scenario
 * @ return 	Return true if Product is Selected 
 * @ Author		Ruchi
 */
public boolean TB_LB_ProductSearch(WebDriver driver, int intRowid,boolean aapr){
	return TB_LB_ProductSearch(driver, intRowid, aapr,"TB_DFL_ProductSearch.xls" );
}
public boolean TB_LB_ProductSearch(WebDriver driver, int intRowid,boolean aapr, String FileName){
	
	
	String strFile=TB_GG_SetInputFile(FileName);
	
	boolean bResult = false;
	String strStepDetails="",strStatus="Fail";
	
	String strRateType,strRepaymnetType,strNumSplits,strLenderName;
	Actions action = new Actions(driver); 
	
	TB_GG_Report("Product Search","", true); 
	//WebDriverWait wait = new WebDriverWait(driver, 60);
	
	strRateType=TB_GG_ReadXL(intRowid,"Dlst_PS_RateType",strFile);
	
	strRepaymnetType=TB_GG_ReadXL(intRowid,"Dlst_PS_RepaymentType",strFile);
	
	strNumSplits=TB_GG_ReadXL(intRowid,"Dlst_PS_Splits",strFile);
	
	strLenderName = TB_GG_ReadXL(intRowid,"Cbox_PS_LenderName",strFile);
	try{
		    TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_PS")), "Product Search Button");
			TB_GG_Wait(7000);
			boolean bPS = true;
			if( !TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Btn_PS_LoanDetails")), intTimeOut))
				bPS = TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_PS")), "Product Search Button");
			if(!bPS) 
				{
					TB_GG_Report("Product Search Button is still disabled", "Fail", true);
					return false;
				}
			TB_GG_Wait(7000);
			TB_GG_WaitAnElementPresent(driver, By.xpath(prop.getProperty("Btn_PS_Search")), 20000);
			if(!strLenderName.equals(""))
			{
				TB_GG_Click(driver, By.linkText("Select / Deselect All"), "Deselect All");
				TB_GG_Wait();
				String strSearchStatus=driver.findElement(By.xpath(prop.getProperty("Btn_PS_Search"))).getAttribute("class");
				if(strSearchStatus.contains("product-search-arrow-completed"))
				{
					TB_GG_Click(driver, By.linkText("Select / Deselect All"), "Deselect All");
				}
				//boolean bSelect=false;
				WebElement ee1=driver.findElement(By.xpath(".//*[@id='lender-list']/table"));
				System.out.println(ee1);
				List<WebElement> rows = ee1.findElements(By.tagName("tr"));
				int t=rows.size();
				for(int a=1;a<=t;a++)
				if(TB_GG_DoesWebElementExist(driver,By.xpath(".//*[@id='lender-list']/table/tbody/tr["+a+"]/td[2]/label"),3000))
				{
					if(	TB_GG_FindElement(driver, By.xpath(".//*[@id='lender-list']/table/tbody/tr["+a+"]/td[2]/label"),3000).getText().equalsIgnoreCase(strLenderName))//("Adelaide Bank"))
					{
						TB_GG_Click(driver, By.xpath(".//*[@id='lender-list']/table/tbody/tr["+a+"]/td[2]/label"), strLenderName+" Lender");//TB_GG_ReadXL(intRowid,"Dlst_PS_DocType",strFile)
						
						//bSelect = true;
						break;
					}
				}
				TB_GG_Wait(2000);
				if(! bgf.meetingDetails.get("LoanReason").contains("Variation"));
					TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_PS_SearchPref")), "Preffered Lender Reason ", "Correct Choice");
				TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_PS_DocType"), "Doc Type",TB_GG_ReadXL(intRowid,"Dlst_PS_DocType",strFile));//(driver, By.id("loan-pri-rateType"), intTimeOutForPaging)new Select(driver.findElement(By.id("loan-pri-rateType"))).selectByVisibleText("Variable Rate");
			}	
			TB_GG_Wait(6000);
			TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_PS_LoanDetails")), "Loan Details Button");
			
			
			TB_GG_Wait();
			TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_PS_Splits"), "Number of Splits",strNumSplits);//"No Split" );//(driver, By.id("loan-pri-rateType"), intTimeOutForPaging)new Select(driver.findElement(By.id("loan-pri-rateType"))).selectByVisibleText("Variable Rate");
			if(! (strRateType.isEmpty()))
			{	
				TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_PS_RateType"), "Rate Type",strRateType);//(driver, By.id("loan-pri-rateType"), intTimeOutForPaging)new Select(driver.findElement(By.id("loan-pri-rateType"))).selectByVisibleText("Variable Rate");
			
				
					if (strRateType.equalsIgnoreCase("Fixed Rate"))
					{
						TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_PS_FixedRateTerm"), "Fixed Rate Term",TB_GG_ReadXL(intRowid,"Dlst_PS_FixedRateTerm",strFile));//(driver, By.id("loan-pri-rateType"), intTimeOutForPaging)new Select(driver.findElement(By.id("loan-pri-rateType"))).selectByVisibleText("Variable Rate");
					}
			
			}
			
			
			if(! (strRepaymnetType.isEmpty()))
			{
				TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_PS_RepaymentType"), "Repayment Type", strRepaymnetType);//(driver, By.id("loan-pri-rateType"), intTimeOutForPaging)new Select(driver.findElement(By.id("loan-pri-rateType"))).selectByVisibleText("Variable Rate");
			
				if (strRepaymnetType.equalsIgnoreCase("Interest Only"))
				{
					TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_PS_IntPeriod"), "Interest Period",TB_GG_ReadXL(intRowid,"Dlst_PS_IntPeriod",strFile));//(driver, By.id("loan-pri-rateType"), intTimeOutForPaging)new Select(driver.findElement(By.id("loan-pri-rateType"))).selectByVisibleText("Variable Rate");
			
				}
			}
			if (strNumSplits.equalsIgnoreCase("1"))
			{
				driver.findElement(By.xpath(prop.getProperty("Ed_PS_PrimaryLoan"))).clear();
				driver.findElement(By.xpath(prop.getProperty("Ed_PS_PrimaryLoan"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_PS_PrimaryLoan",strFile));
				driver.findElement(By.xpath(prop.getProperty("Tab_PS_Split1"))).click();
				Thread.sleep(5000);
				driver.findElement(By.xpath(prop.getProperty("Ed_PS_PLSplit1"))).clear();
				driver.findElement(By.xpath(prop.getProperty("Ed_PS_PLSplit1"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_PS_PLSplit1",strFile));
				TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_PS_LPSplit1"), "Loan Purpose",TB_GG_ReadXL(intRowid,"Dlst_PS_LPSplit1",strFile) );//(driver, By.id("loan-pri-rateType"), intTimeOutForPaging)new Select(driver.findElement(By.id("loan-pri-rateType"))).selectByVisibleText("Variable Rate");
				
				//TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_PS_LRSplit1"), "Loan Reason",TB_GG_ReadXL(intRowid,"Dlst_PS_LRSplit1",strFile) );//(driver, By.id("loan-pri-rateType"), intTimeOutForPaging)new Select(driver.findElement(By.id("loan-pri-rateType"))).selectByVisibleText("Variable Rate");
				
			
				TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_PS_RateSplit1"), "Rate Type",TB_GG_ReadXL(intRowid,"Dlst_PS_RateSplit1",strFile));//(driver, By.id("loan-pri-rateType"), intTimeOutForPaging)new Select(driver.findElement(By.id("loan-pri-rateType"))).selectByVisibleText("Variable Rate");

				if (TB_GG_ReadXL(intRowid,"Dlst_PS_RateSplit1",strFile).equalsIgnoreCase("Fixed Rate"))
				{
					TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_PS_RateTermSplit1"), "Rate Term Split1",TB_GG_ReadXL(intRowid,"Dlst_PS_RateTermSplit1",strFile) );//(driver, By.id("loan-pri-rateType"), intTimeOutForPaging)new Select(driver.findElement(By.id("loan-pri-rateType"))).selectByVisibleText("Variable Rate");


				}
				
				String strRepaymnetType1= TB_GG_ReadXL(intRowid,"Dlst_PS_RepaymentSplit1",strFile);
				if(! (strRepaymnetType.isEmpty()))
				{
				 TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_PS_RepaymentSplit1"), "Repayment Type",strRepaymnetType1 );//(driver, By.id("loan-pri-rateType"), intTimeOutForPaging)new Select(driver.findElement(By.id("loan-pri-rateType"))).selectByVisibleText("Variable Rate");
					if (strRepaymnetType1.equalsIgnoreCase("Interest Only"))
					{
						TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_PS_IntPeriodSplit1"), "Interest Period Split1",TB_GG_ReadXL(intRowid,"Dlst_PS_IntPeriodSplit1",strFile) );//(driver, By.id("loan-pri-rateType"), intTimeOutForPaging)new Select(driver.findElement(By.id("loan-pri-rateType"))).selectByVisibleText("Variable Rate");
				
					}
				}
				
			
			}
			
			TB_GG_Wait();
		//	new Select(driver.findElement(By.id("loan-pri-repaymentType"))).selectByVisibleText("Principle & Interest");
			TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_PS_Results")), "Product Result Button");
			WebElement ee=driver.findElement(By.className("Loading"));
			TB_GG_WaitAnElementDisappears( driver, By.className("Loading")/*xpath(".//*[@id='ext-gen60']/div")*/,  900000);
			TB_GG_Wait(8000);
			if( ! (TB_GG_DoesWebElementExist(driver, By.xpath(".//*[@id='ext-gen22']/div[1]/table/tbody/tr/td[1]/div/div"),intTimeOut)))
			
			{ 	
				
				action.sendKeys(Keys.TAB).perform();
				action.sendKeys(Keys.ENTER).perform();
				TB_GG_Report("No Product found in Product Search", "Fail", true);
				return bResult;
				
			}
			//driver.findElement(By.xpath(prop.getProperty("Btn_PS_Results"))).click();
			
			if(!aapr)
				{
					boolean bNoMoreProd = true;
					for(int i=1;i<7;i++)
					{
						if(bNoMoreProd)
						{
							if(TB_GG_DoesWebElementExist(driver, By.xpath((".//*[@id='ext-gen22']/div[") +i+ ("]/table/tbody/tr/td[1]/div/div")), intTimeOut))
								driver.findElement(By.xpath((".//*[@id='ext-gen22']/div[") +i+ ("]/table/tbody/tr/td[1]/div/div"))).click();
							else
							{
								bNoMoreProd=false;
							}
						}
					}
					if (strNumSplits.equalsIgnoreCase("1"))
					{   
						TB_GG_Click(driver, By.xpath(".//*[@id='results-pri-tab']/a/span[2]"), "");
						action.sendKeys(Keys.TAB);
						action.sendKeys(Keys.ENTER);
						
					//	TB_GG_Click(driver, By.xpath(prop.getProperty("Tab_PS_ResSplit1")), "Tab for split1");
						boolean bNoMoreProdSplit = true;
						for(int k=1;k<7;k++)
						{
							if(bNoMoreProdSplit)
							{
								if(TB_GG_DoesWebElementExist(driver, By.xpath((".//*[@id='ext-gen68']/div[") +k+ ("]/table/tbody/tr/td[1]/div/div")), intTimeOut))
									driver.findElement(By.xpath((".//*[@id='ext-gen68']/div[") +k+ ("]/table/tbody/tr/td[1]/div/div"))).click();
								else
								{
									bNoMoreProdSplit=false;
								}
							}
						}
					}
					
					TB_GG_Wait(1000);
					TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_PS_Comparisions")), "Product Comparision Button");
			
					//////////////////////////////////////////////////////////////////////////////Test Code 
					WebElement cont =driver.findElement(By.xpath(".//*[@id='comparison-primary-container']"));
					List <WebElement> lstOptions = cont.findElements(By.tagName("input"));
					
					for (WebElement weOption : lstOptions)
					{
						if(weOption.getAttribute("type").equalsIgnoreCase("radio"))
							if(! weOption.isSelected())
							{
								weOption.click();
								break;
							}
					}
					TB_GG_Wait();
					TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_PS_SaveSelection")), "Save Selection Button");
			        
					TB_GG_WaitAnElementDisappears( driver, By.className("Loading")/*xpath(".//*[@id='ext-gen60']/div")*/,  240000);
					
					TB_GG_Click(driver, By.name("lender_selection"), "Saved product");
				
			
					TB_GG_Wait();
					String strProductSelected=	driver.findElement(By.xpath(prop.getProperty("Txt_PS_ProductSelected"))).getText();
					
					System.out.println(strProductSelected);
					String strProceedStatus=driver.findElement(By.xpath(prop.getProperty("Btn_PS_ProceedApp"))).getAttribute("class");
					System.out.println(strProceedStatus);
					
					TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_PS_ProceedApp")), "Proceed Application Button");
					//driver.findElement(By.xpath(prop.getProperty("Btn_PS_ProceedApp"))).click();
					if(strProceedStatus.contains("product-search-arrow-clickable"))
					{
					 bResult = true;
					 strStatus="Pass";
					 strStepDetails="Product Search is Complete Succesfully";
					}
					else
						 {
							strStepDetails="Product Search is not Complete";
							strStatus="Fail";
							TB_GG_captureScreen(driver, "ProductSearch");
						 }
					 TB_GG_Report(strStepDetails, strStatus, true);
				/*	 TB_GG_Wait();
					// TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_AP_BackToNA")), "Back To NA Page Button");
					 TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_NA_BackToOpp")), "Back To Opp Page Button");
					 
					
				//	wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("Txt_PS_ProductSaved")));
					
				
					TB_GG_Wait(20000);
					String strProductSaved=	driver.findElement(By.xpath(prop.getProperty("Txt_PS_ProductSaved"))).getText();
				
					
					System.out.print(strProductSaved);
					if(strProductSelected.equalsIgnoreCase(strProductSaved))
					{
						
						 bResult = true;
						 strStatus="Pass";
						 strStepDetails="Slected Product has been added to the Application";
					}
					else 
					{
						 bResult = false;
						 strStatus="Fail";
						 strStepDetails="Product is added to the Application";
					}
					TB_GG_Report(strStepDetails, strStatus, true);*/
				}
				else
				{
					bResult = true;
				}
			

	}
	catch( WebDriverException wbe){
		wbe.printStackTrace();
	}
	
	catch(Exception e){
		e.printStackTrace();
	}
	
	
	
	
	
	return bResult;

}
/*
 * @ Purpose    For joint Applicant ,add customer to the already existing OPP of Another Customer
 * @ Parameters Row num for which Search customer is to be executed for searching the adding customer
 * @ return 	Return true if customer is successfully added to the existing OPP
 * @ Author		Ruchi
 */

public boolean TB_LB_AddCustomerToOpp(WebDriver driver, int intRowid){
	
	boolean bResult=false;
	String strStepDetail="",strXOpp="",strResult, strCustomer="";
	String strCusttype="";
	TB_GG_Report("Add Customer To Opportunity","", true); 
	try
	{
		TB_GG_Wait(7000);
		if(TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Img_NOR_EditOpp")), intTimeOut))
		{
				driver.findElement(By.xpath(prop.getProperty("Img_NOR_EditOpp"))).click();
				TB_GG_Report("Click Opportunity for Adding Customer ", "Pass", true);
				TB_GG_Log("Click opportunity for Adding Customer");
		}
		
		TB_GG_Click(driver,By.xpath(prop.getProperty("Btn_AP_AddCust")),"AddCustomer");
		TB_GG_Wait();
		strCustomer=TB_LB_CustomerSearch(driver, intRowid, false,"TB_DFL_NeedAnalysisXML.xls");
		if(strSearchType.equalsIgnoreCase(strSearchTypeJoint))
			strCusttype =strSearchType;
		else 
			strCusttype =strSearchTypeJoint;
		if(strCusttype.equalsIgnoreCase("Personal"))  strXOpp ="Cbox_CSRP_OpportunityTick";
	      
	      else if(strCusttype.equalsIgnoreCase("Company"))strXOpp ="Cbox_CSRC_OpportunityTick";
	          
	      boolean bExist = TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty(strXOpp)),intTimeOutForPaging);   
	            
	            if(bExist)
	            {
	                     strStepDetail="Customer is available to add in Opportunity with current user: "+ bExist;
	                     TB_GG_Click(driver,By.xpath(prop.getProperty(strXOpp)),"Opp Tick"); 
	                     strResult="Pass";
	                     TB_GG_Report(strStepDetail, strResult, true);  
	                     TB_GG_Log(strStepDetail);
	
	
	            }
	        
	   TB_GG_Wait();
	   bResult= TB_GG_Click(driver,By.xpath(prop.getProperty("Btn_OPP_AddtoOpp")),"Save Customer button");
		
	}
	catch(Exception ee)
	{
		TB_GG_captureScreen(driver, "AddCustomerToOpp");
		ee.printStackTrace();
	}
	return bResult;
}

/*
 * @ Purpose    To get the customer ID in Joint Applicant ,needed in creating xpath of NA Elements
 * @ Parameters Element Xpath from which ID is retrieved then used by concating to another xpath
 * @ return 	Return array of ID of all applicants in the Application 
 * @ Author		Ruchi
 */
public String[] TB_LB_GetCustomerID(WebDriver driver,By by, int intTimeOut){
	
	String[] strCustomerID =new String[5] ;
	int i =0;
	try
	{
		WebElement weDropDownList = TB_GG_FindElement(driver, by, intTimeOut);
		//Select data for Object
		TB_GG_Wait();
		List <WebElement> lstOptions = weDropDownList.findElements(By.tagName("option"));
		for (WebElement weOption : lstOptions)
		{
			if(!(weOption.getText().contains("Select")))
			{
				strCustomerID[i]=weOption.getAttribute("value");

				i++;
			}
		
		}
	}
	catch(Exception ee)
	{
		ee.printStackTrace();
	}
	return strCustomerID;
	
}
/*

 * @ Purpose    Edit/Reallocate the OPP ,used in CSR BP
 * @ Parameters Row number with the data- Broker, Branch
 * @ return 	return true if OPP is Reallocated to different Branch or Broker
 *  @author skaur

 */
public boolean TB_LB_EditReallocateOpp(WebDriver driver, int intRowid)//call editopp before this
{
	//String strCustomerName;
	String strFile=TB_GG_SetInputFile("TB_DFL_CreateOpportunity.xls");
	boolean bResult = false;
	String strStepDetails="Editing the opportunity to Reallocate ";
	TB_GG_Report("Edit Reallocate Opportunity","", true); 
	TB_GG_Log(strStepDetails);
    try{
	    	boolean bEditOpp=TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Btn_AP_EditReallcoate")), 15000);
	    	String givenbroker = TB_GG_ReadXL(intRowid, "Cb_OPP_Broker", strFile);
	    	//wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(prop.getProperty("Btn_AP_EditReallcoate"))));
	    	if(bEditOpp)
	    	{
	    		
	    		TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_AP_EditReallcoate")), "Edit/Reallocate Button");	
			
				TB_GG_SwitchToIframe(driver, prop.getProperty("Frm_AllNewframes"));
				TB_GG_Wait(7000);
				String  branch1 = TB_GG_getSelectedOption(driver.findElement(By.xpath(prop.getProperty("Cb_OPP_Branch"))));
				System.out.println(branch1);
				TB_GG_SelectDDListItem(driver, prop.getProperty("Cb_OPP_Broker"), "Broker", givenbroker);
				
				if(!( TB_GG_ReadXL(intRowid, "Cb_OPP_Branch", strFile).equals("")))
				TB_GG_SelectDDListItem(driver, prop.getProperty("Cb_OPP_Branch"), "Branch", TB_GG_ReadXL(intRowid, "Cb_OPP_Branch", strFile));
				TB_GG_Wait();
				TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_OPP_Reason"), "Reason to Reallocate", TB_GG_ReadXL(intRowid, "Dlst_OPP_Reason", strFile));
				String  branch2 = TB_GG_getSelectedOption(driver.findElement(By.xpath(prop.getProperty("Cb_OPP_Branch"))));
				System.out.println(branch2);
				TB_GG_Click(driver,By.xpath(prop.getProperty("Btn_OPP_EditSave")),"Save Opportunity");
				TB_GG_Wait(10000);
				if(! branch1.equals(branch2))
				{
					
					if(TB_GG_SwitchToIframe(driver, prop.getProperty("Frm_COTR")))
					{
						
						TB_GG_Wait();
						boolean bCotrFrame=TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Cb_COTR_OwnerToBranch")), intTimeOut);/// checking for any object in cotr form
						if(bCotrFrame)
						{	
							strStepDetails="COTR triggered as expected";
							TB_GG_Report(strStepDetails,"Pass",true);
							TB_LB_COTR(driver,2);
						}
						else
						{
							strStepDetails="No COTR triggered as expected";
							TB_GG_Report(strStepDetails,"Fail",true);
						
						}
					
					}
				}
				//else
					//TB_GG_Report("Edit and Reallocate is done successfully","Pass",true);
				
				driver.switchTo().defaultContent();
				TB_GG_WaitAnElementPresent(driver, By.xpath(prop.getProperty("Cb_OPP_Broker")), 20000);
				String broker = TB_GG_getSelectedOption(driver.findElement(By.xpath(prop.getProperty("Cb_OPP_Broker"))));
				if(broker.equalsIgnoreCase(givenbroker))
				{
					TB_GG_Report("The opportunity has been assigned to "+givenbroker,"Pass", true);
				}
				else
					TB_GG_Report("The opportunity has not been assigned to "+givenbroker,"Fail", true);
		}
	    	else 
	    	{
	    		TB_GG_captureScreen(driver, "EditReallocateOpp");
	    		strStepDetails="Edit/Reallocate button is Not Found";
	    		TB_GG_Report(strStepDetails,"Fail",true);
	    	}
	    		
    }
    catch(Exception ee)
	{
    	TB_GG_captureScreen(driver, "EditReallocateOppEX");
    	ee.printStackTrace();
		TB_GG_Log("Got an exception! "+ ee.getMessage().toString());
	}
	
	return bResult;
}
/*
 * @ Purpose    Add Notes to the Data Migration Customer OPP While reallocating it
 * @ Parameters Only Text to be added in the Notes 
 * @ return 	True
 * @ Author		Ruchi
 */
public boolean bhang=false;
public boolean TB_LB_AddOppNoteDM(WebDriver driver){
	
	boolean bResult=false;
	String strOpp = "";
	//WebDriverWait wait = new WebDriverWait(driver, 40);
	TB_GG_Report("Add Opportunity Note","", true); 
	try{
		  
		if(TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Txt_AP_Opp")), intTimeOut))
		    strOpp=  driver.findElement(By.xpath(prop.getProperty("Txt_AP_Opp"))).getText();
		   
		   if(strGivenOppNum .equals(strOpp))
		    	
		    {
		    	TB_GG_WaitAnElementPresent(driver, By.xpath(prop.getProperty("Btn_AP_AddOppNotes")), 10000);
			   if(!TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_AP_AddOppNotes")), "Note Button"))
		    		bhang = true;
				TB_GG_SwitchToIframe(driver, prop.getProperty("Frm_NoteFrame"));
				TB_GG_Wait();
				
				driver.findElement(By.xpath(prop.getProperty("Ed_NT_NoteArea"))).click();
				driver.findElement(By.xpath(prop.getProperty("Ed_NT_NoteArea"))).sendKeys("Opportunity Note Selenium Test");
				
				
				TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_NT_SubmitNote")), "Save Note Button");
				driver.switchTo().defaultContent();
				//wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(prop.getProperty("Txt_NT_Dispalyed"))));
				TB_GG_Wait(9000);
				if(driver.findElement(By.xpath(prop.getProperty("Txt_NT_Dispalyed"))).getText().equalsIgnoreCase("Opportunity Note Selenium Test"))
					bResult=true;
				if(bResult)
					TB_GG_Report("Successfully Added Note to Opportunity "+strGivenOppNum, "Pass", true);
				else
					TB_GG_Report("Fail to Add Note to Opportunity "+strGivenOppNum, "Fail", true);
		    }
		}
		catch(Exception ee)
		{
			TB_GG_captureScreen(driver, "AddNoteEX");
			ee.printStackTrace();
			TB_GG_Log("Got an exception! "+ ee.getMessage().toString());
		}
	return bResult;
	
}
/*
 * @ Purpose    Add Notes to the OPP While reallocating it
 * @ Parameters Only Text to be added in the Notes 
 * @ return 	True
 * @ Author		Ruchi
 */

public boolean TB_LB_AddOppNote(WebDriver driver){
	
	boolean bResult=false;
	String strOpp = "";
	//WebDriverWait wait = new WebDriverWait(driver, 40);
	TB_GG_Report("Add Opportunity Note","", true); 
	try{
	/*	if(TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Img_NOR_EditOpp")), intTimeOut))
		{
				TB_GG_Wait(7000);
				TB_GG_Report("Editing Opportunity for Needs analysis", "Pass", true);
				TB_GG_Log("Editing opportunity for Needs analysis");
		}  */
		if(TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Txt_AP_Opp")), intTimeOut))
		    strOpp=  driver.findElement(By.xpath(prop.getProperty("Txt_AP_Opp"))).getText();
		   
		  	    	
		    {
		    	if(!TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_AP_AddOppNotes")), "Note Button"))
		    		bhang = true;
				TB_GG_SwitchToIframe(driver, prop.getProperty("Frm_NoteFrame"));
				TB_GG_Wait();
				
				driver.findElement(By.xpath(prop.getProperty("Ed_NT_NoteArea"))).click();
				driver.findElement(By.xpath(prop.getProperty("Ed_NT_NoteArea"))).sendKeys("Opportunity Note Selenium Test");
				
				
				TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_NT_SubmitNote")), "Save Note Button");
				driver.switchTo().defaultContent();
				//wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(prop.getProperty("Txt_NT_Dispalyed"))));
				TB_GG_Wait(9000);
				if(driver.findElement(By.xpath(prop.getProperty("Txt_NT_Dispalyed"))).getText().equalsIgnoreCase("Opportunity Note Selenium Test"))
					bResult=true;
				if(bResult)
					TB_GG_Report("Successfully Added Note to Opportunity "+strGivenOppNum, "Pass", true);
				else
					TB_GG_Report("Fail to Add Note to Opportunity "+strGivenOppNum, "Fail", true);
		    }
		}
		catch(Exception ee)
		{
			TB_GG_captureScreen(driver, "AddNoteEX");
			ee.printStackTrace();
			TB_GG_Log("Got an exception! "+ ee.getMessage().toString());
		}
	return bResult;
	
}
/*
 * @ Purpose    To update the OPP status
 * @ return 	true
 * @ Author		Ruchi
 */
public boolean TB_LB_OppStatus(WebDriver driver)
{
	TB_GG_Report("Update Opportunity Status","", true); 
	boolean bResult=false;
	try{
		
		TB_GG_Wait();
		TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_AP_UpdateOppStatus")), "Update Status Button");
		TB_GG_SwitchToIframe(driver, prop.getProperty("Frm_StatusFrame"));
	
		driver.findElement(By.xpath(prop.getProperty("Ed_NT_NoteArea"))).click();
		driver.findElement(By.xpath(prop.getProperty("Ed_NT_NoteArea"))).sendKeys("Adding Notes to Opp");
		
		TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_ST_Status"), "Status","Contacted");// "Cancelled");//"Contacted");
		
		TB_GG_Wait();
		
		TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_ST_StatusReason"), "Status Reason","Appointment Made");//"General Enquiry");// "Appointment Made");
		
		TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_ST_Save")), "Save Status Button");
		driver.switchTo().defaultContent();
		TB_GG_Wait(7000);
		if(driver.findElement(By.xpath(prop.getProperty("Txt_ST_Confirmation"))).getText().equalsIgnoreCase("Contacted"))
			TB_GG_Report("Status Updated Successfuly","Pass", true);
		else
		TB_GG_Report("Status is not Updated","Fail", true);
	}
	
	catch(Exception ee)
	{
		TB_GG_captureScreen(driver, "OppStatusEX");
		ee.printStackTrace();
		TB_GG_Log("Got an exception! "+ ee.getMessage().toString());
	}
	
	return bResult;
	
}
/**********************************************************************************************************
@author Ruchi
@doc  Create the Product
@param WebDriver, data row
@Date 2Oct,2012
**************************************************************************************************************/		


public boolean TB_LB_CreateProduct(WebDriver driver, int intRowid)

{	
	String strFile=TB_GG_SetInputFile("TB_DFL_CreateProduct.xls");
	TB_GG_Report("Create Product","", true); 
	boolean bResult=false;
	

	String strRate="";
	
	String strMthOngoingfee="";
	String strQuarOngoingfee="";
	String strSemiAnnOngoingfee="";
	String strAnnOngoingfee="";
	String strFstRevertRate="";
	
	String strSecRevertRate="";
	
	String strThirdRevertRate="";
	
	String strFinRevertRate="";
	
		
	try {
		
		 strRate=TB_GG_ReadXL(intRowid, "Ed_PM_InitialRate", strFile);
		 strMthOngoingfee=TB_GG_ReadXL(intRowid, "Ed_PM_OngoingMonthlyFee", strFile);
		 strQuarOngoingfee=TB_GG_ReadXL(intRowid, "Ed_PM_OngoingQuarterlyFee", strFile);
		 strSemiAnnOngoingfee=TB_GG_ReadXL(intRowid, "Ed_PM_OngoingSemiAnnualFee", strFile);
		 strAnnOngoingfee=TB_GG_ReadXL(intRowid, "Ed_PM_OngoingAnnualFee", strFile);
		 strFstRevertRate=TB_GG_ReadXL(intRowid, "Ed_PM_RevertRate1", strFile);
		 strSecRevertRate=TB_GG_ReadXL(intRowid, "Ed_PM_RevertRate2", strFile);
		 strThirdRevertRate=TB_GG_ReadXL(intRowid, "Ed_PM_RevertRate3", strFile);
		 strFinRevertRate=TB_GG_ReadXL(intRowid, "Ed_PM_RevertRateFin", strFile);
			
		TB_GG_Click(driver, By.xpath(prop.getProperty("Tb_Menu_Maintenance")), "Maintenance Tab");
	
		TB_GG_Click(driver, By.xpath(prop.getProperty("Tb_Menu_ProductHub")), "ProductHub Tab");
		
		
		TB_GG_Click(driver, By.xpath(prop.getProperty("Tb_Menu_Products")), "Product Tab");
		
	
		
		TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_PM_Filter"), "Group Name", "Group Name");//TB_GG_ReadXL(intRowid, "Cb_OPP_Broker", strFile));
		TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_PM_Keyword")), "Group Name", "Smart Fix");
		
		TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_PM_Searchfilter")), "Search Product Group Button");
		TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_PM_EditProductGrp")), "Edit Product Group Button");
		
//	TB_LB_UpdateAAPRTerm(driver,intRowid);
		
		TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_PM_NewProduct")), "Add NewProduct Button");
		TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_PM_ProuctInstance")), "Product Name",TB_GG_ReadXL(intRowid, "Ed_PM_ProuctInstance", strFile));
		TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_PM_SaveProdInstance")), "Save Product Instance Button");
	
		/////Filling the Rate details
		
		TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_PM_Rate")), "Rate Button");
		TB_GG_Wait();
		if(! TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Ed_PM_InitialRate")), 5000))
			TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_PM_Rate")), "Rate Button");
		if(! strRate.isEmpty())
		
			{
			
			TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_PM_InitialRate")), "Initial Rate", TB_GG_ReadXL(intRowid, "Ed_PM_InitialRate", strFile));
			TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_PM_InitialRateType"), "Initial Rate Type",TB_GG_ReadXL(intRowid, "Dlst_PM_InitialRateType", strFile));
			TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_PM_InitialRateTerm")), "Initial Rate Term", TB_GG_ReadXL(intRowid, "Ed_PM_InitialRateTerm", strFile));
			
			}
		
		if(!strFstRevertRate.isEmpty())
			
			TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_PM_RevertRate1")), "1st Rate Revert",  TB_GG_ReadXL(intRowid, "Ed_PM_RevertRate1", strFile));
			TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_PM_RevertRate1Term")), "1st Rate Revert Term",  TB_GG_ReadXL(intRowid, "Ed_PM_RevertRate1Term", strFile));

			
			
		if(!strSecRevertRate.isEmpty())
			
		{   TB_GG_Wait(1000);
			TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_PM_AddRevertRate")), "Add Additional Revert Rate Button");
			TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_PM_RevertRate2")), "2nd Rate Revert",  TB_GG_ReadXL(intRowid, "Ed_PM_RevertRate2", strFile));
			TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_PM_RevertRate2Term")), "2nd Rate Revert Term",  TB_GG_ReadXL(intRowid, "Ed_PM_RevertRate2Term", strFile));


		}
		if(!strThirdRevertRate.isEmpty())
		{	
			TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_PM_AddRevertRate")), "Add Additional Revert Rate Button");
			TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_PM_RevertRate3")), "3rd Rate Revert",  TB_GG_ReadXL(intRowid, "Ed_PM_RevertRate3", strFile));
			TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_PM_RevertRate3Term")), "3rd Rate Revert Term",  TB_GG_ReadXL(intRowid, "Ed_PM_RevertRate3Term", strFile));

		}
			
		if(!strFinRevertRate.isEmpty())	
		{
			TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_PM_AddRevertRate")), "Add Additional Revert Rate Button");
			TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_PM_RevertRateFin")), "Final Rate Revert", TB_GG_ReadXL(intRowid, "Ed_PM_RevertRateFin", strFile));
			TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_PM_RevertRateFinTerm")), "Final Rate Revert Term", TB_GG_ReadXL(intRowid, "Ed_PM_RevertRateFinTerm", strFile));

		}
		
		/////Filling the Attributes Details////
		
		TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_PM_Attribute")), "Attribute Button");
		
		TB_GG_Wait();
		
		TB_GG_Click(driver, By.xpath(prop.getProperty("Lb_PM_AttBorrowerTypeAll")), "Borrower Type selectall");
		
		TB_GG_Click(driver, By.xpath(prop.getProperty("Cb_PM_AttDocType")), "Full doc");
		
	//	TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_PM_AttMaxClientLVR")), "Maximum Client LVR",  TB_GG_ReadXL(intRowid, "Ed_PM_AttMaxClientLVR", strFile));
		
	//	TB_GG_Click(driver, By.xpath(prop.getProperty("Cbox_PM_FHO")), "FHO Checkbox");
		
		//TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_PM_Funder"), "Funder Name", TB_GG_ReadXL(intRowid, "Dlst_PM_Funder", strFile));//TB_GG_ReadXL(intRowid, "Cb_OPP_Broker", strFile));


		
	//	TB_GG_Click(driver, By.xpath(prop.getProperty("Lb_PM_AttInterestOnlySelectAll")), "Interest Only Selectall");

		TB_GG_Click(driver, By.xpath(prop.getProperty("Lb_PM_AttLoanTypeAll")), "Loan Type Selectall");

		
		TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_PM_AttMaxIncomeInd")), "Maximum Income Ind", TB_GG_ReadXL(intRowid, "Ed_PM_AttMaxIncomeInd", strFile));

		TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_PM_AttMaxIncomeJoint")), "Maximum Income Joint", TB_GG_ReadXL(intRowid, "Ed_PM_AttMaxIncomeJoint", strFile));

		TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_PM_MaxIntOnly")), "Maximum Interest Only", TB_GG_ReadXL(intRowid, "Ed_PM_MaxIntOnly", strFile));

		
		TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_PM_AttMaxLA")), "Maximum Loan Amount", TB_GG_ReadXL(intRowid, "Ed_PM_AttMaxLA", strFile));

		TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_PM_AttMaxLVR")), "Maximum LVR", TB_GG_ReadXL(intRowid, "Ed_PM_AttMaxLVR", strFile));

		TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_PM_AttMaxTerm")), "Maximum Term",TB_GG_ReadXL(intRowid, "Ed_PM_AttMaxTerm", strFile));

		TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_PM_AttMinIncomeInd")), "Minimum Income Ind", TB_GG_ReadXL(intRowid, "Ed_PM_AttMinIncomeInd", strFile));

		TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_PM_AttMinIncomeJoint")), "Minimum Income Joint", TB_GG_ReadXL(intRowid, "Ed_PM_AttMinIncomeJoint", strFile));

		TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_PM_AttMinLA")), "Minimum Loan Amount",TB_GG_ReadXL(intRowid, "Ed_PM_AttMinLA", strFile));

		TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_PM_AttMinLVR")), "Minimum LVR", TB_GG_ReadXL(intRowid, "Ed_PM_AttMinLVR", strFile));
		
		TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_PM_AttMinTerm")), "Minimum Term",TB_GG_ReadXL(intRowid, "Ed_PM_AttMinTerm", strFile));
		//
		TB_GG_Click(driver, By.xpath(prop.getProperty("Lb_PM_AttPurposeAll")), "Purpose Selectall");
		
		TB_GG_Click(driver, By.xpath(prop.getProperty("Lb_PM_AttReasonAll")), "Reason Selectall");

		TB_GG_Click(driver, By.xpath(prop.getProperty("Lb_PM_AttRepayFreqAll")), "Repayment Frequency Selectall");

		TB_GG_Click(driver, By.xpath(prop.getProperty("Lb_PM_AttRepayMthdAll")), "Repayment Methods Selectall");

		TB_GG_Click(driver, By.xpath(prop.getProperty("Lb_PM_AttRepaymnetTypeSelectAll")), "Repayment Type Selectall");

		TB_GG_Click(driver, By.xpath(prop.getProperty("Lb_PM_AttStateSelectAll")), "State Availability Selectall");

		
		
		TB_GG_Click(driver, By.xpath(prop.getProperty("Cbox_PM_AttSplit")), "Splits Available Checkbox");

		driver.findElement(By.id("attributes-splitsAvailable-splitsAvailableCheckbox")).click();/////always check the ASplits Available

		
		////// Filling the Fees Details//////
		
		TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_PM_Fees")), "Fees Button");

		TB_GG_Wait();
		
		TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_PM_ApplicationFee")), "Application Fee", TB_GG_ReadXL(intRowid, "Ed_PM_ApplicationFee", strFile));

		TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_PM_DischargeFee")), "Discharge Fee", TB_GG_ReadXL(intRowid, "Ed_PM_DischargeFee", strFile));
		
		TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_PM_SettlementFee")), "Settlement Fee", TB_GG_ReadXL(intRowid, "Ed_PM_SettlementFee", strFile));


		
		if(!strMthOngoingfee.isEmpty())
		{
			TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_PM_OngoingMonthlyFee")), "OngoingMonthly Fee", TB_GG_ReadXL(intRowid, "Ed_PM_OngoingMonthlyFee", strFile));
			TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_PM_MonthlySelect"), "OngoingMonthly Fee Period", TB_GG_ReadXL(intRowid, "Dlst_PM_MonthlySelect", strFile));

		}
		if(!strQuarOngoingfee.isEmpty())
		{	
			TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_PM_OngoingQuarterlyFee")), "OngoingQuarterly Fee", TB_GG_ReadXL(intRowid, "Ed_PM_OngoingQuarterlyFee", strFile));
			TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_PM_QuarterlySelect"), "OngoingQuarterly Fee Period", TB_GG_ReadXL(intRowid, "Dlst_PM_QuarterlySelect", strFile));//TB_GG_ReadXL(intRowid, "Cb_OPP_Broker", strFile));

		}
		if(!strSemiAnnOngoingfee.isEmpty())
		{
			TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_PM_OngoingSemiAnnualFee")), "OngoingSemiAnnual Fee", TB_GG_ReadXL(intRowid, "Ed_PM_OngoingSemiAnnualFee", strFile));
			TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_PM_SemiAnnualSelect"), "OngoingSemiAnnual Fee Period", TB_GG_ReadXL(intRowid, "Dlst_PM_SemiAnnualSelect", strFile));//TB_GG_ReadXL(intRowid, "Cb_OPP_Broker", strFile));
		}
		if(!strAnnOngoingfee.isEmpty())
		{
			TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_PM_OngoingAnnualFee")), "OngoingAnnual Fee", TB_GG_ReadXL(intRowid, "Dlst_PM_AnnualSelect", strFile));
			TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_PM_AnnualSelect"), "OngoingAnnual Fee Period", TB_GG_ReadXL(intRowid, "Dlst_PM_AnnualSelect", strFile));
		}
		
		
		

	/*	driver.findElement(By.id("attributes-maximumInterestOnly-maximumInterestOnlyTermText")).clear();
		driver.findElement(By.id("attributes-maximumInterestOnly-maximumInterestOnlyTermText")).sendKeys("360");*/
		
		
		/*driver.findElement(By.id("attributes-maximumNumberOfSplits-maximumNumberOfSplitsText")).clear();
		driver.findElement(By.id("attributes-maximumNumberOfSplits-maximumNumberOfSplitsText")).sendKeys("10");*/
		
		driver.findElement(By.xpath(prop.getProperty("Btn_PM_SaveProduct"))).click();
//		TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_PM_SaveProduct")), "Save Product Profile Button");
		
		TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_PM_BackProduct")), "Back To Product Button");
		
		if(TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Ed_PM_Keyword")), intTimeOut))
			{
			 TB_GG_Report("Product Created Sucessfull","Pass", true);
			 bResult=true;
			}
		else
			TB_GG_Report("Product is not Created","Fail", true); 
		}

	catch(Exception ee)
		{
		TB_GG_captureScreen(driver, "ProductSearchEX");
			ee.printStackTrace();
			TB_GG_Log("Got an exception! "+ ee.getMessage().toString());
		}

	return bResult;

 }
/**********************************************************************************************************
@author Ruchi
@doc  Update the AAPR
@param WebDriver, data row
@Date 2Oct,2012
**************************************************************************************************************/		

	public boolean TB_LB_UpdateAAPRTerm(WebDriver driver, int intRowid)
	{
		String strFile=TB_GG_SetInputFile("TB_DFL_CreateProduct.xls");
		boolean bResult=false;
		Date date=new Date();
		Calendar cal = Calendar.getInstance();
	    SimpleDateFormat sdf = new SimpleDateFormat(DATE_FORMAT_NOW1);
	    TB_GG_Report("Update AAPR Term","", true); 
	    
		try{	
			
			TB_GG_Click(driver, By.xpath(prop.getProperty("Lb_PM_AAPR")), "AAPR Term Button");
			TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_PM_UpdateAAPR")), "Update AAPR Button");
			TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_PM_NewAAPR")), "New AAPR", TB_GG_ReadXL(intRowid, "Ed_PM_NewAAPR", strFile));
			
		
			WebElement calendar= driver.findElement(By.xpath(prop.getProperty("Ed_PM_StartDateAAPR")));
	     	calendar.clear();
	     	System.out.print(sdf.format(cal.getTime()));
	     	calendar.sendKeys(sdf.format(cal.getTime()));//System Date
		//	TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_PM_SaveAAPR")), "Save AAPR Button");

		
		}
		catch(Exception ee)
		{
			ee.printStackTrace();
			TB_GG_Log("Got an exception! "+ ee.getMessage().toString());
		}
		
		return bResult;
		
	}
	/**********************************************************************************************************
	@author Ruchi
	@doc  Check the product in produt search 
	@param WebDriver, data row
	@return AAPR of the product selected in product search
	@Date 2Oct,2012
	**************************************************************************************************************/		
	
	
	public double TB_LB_ClickProduct(WebDriver driver, int intRowid)
	{
		String strFile=TB_GG_SetInputFile("TB_DFL_CreateProduct.xls");
		//boolean b=false;
		String s1,s2,s3,s4;
		String strPages="";
		int intPages;
		String strProduct="";
		//double dAaprResult=0;
		double dAaprProduct=0;
	
		//boolean bclick=false;
		TB_GG_Report("Select Product","", true); 
		s1=".//*[@id='ext-gen22']/div[";
		s2="]/table/tbody/tr/td[6]/div/a";
		s4="]/table/tbody/tr/td[1]/div/div";
		try
		{
			strProduct =  TB_GG_ReadXL(intRowid, "Ed_PM_ProuctInstance", strFile);
			
			if(TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Txt_PS_NumOfPages")), intTimeOut))
			strPages=driver.findElement(By.id("ext-comp-1005")).getText();
			strPages=strPages.substring(3);
			intPages=Integer.parseInt(strPages);
			/*if(TB_GG_DoesWebElementExist(driver, By.xpath(".//*[@id='ext-gen22']/div/table/tbody/tr/td[1]/div/div"), intTimeOut))
				{
					TB_GG_Click(driver, By.xpath(".//*[@id='ext-gen22']/div/table/tbody/tr/td[1]/div/div"), "Select product");
					TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_PS_Comparisions")), "Product Comparison Button");
					dAaprProduct = Double.parseDouble(driver.findElement(By.xpath(prop.getProperty("Txt_PS_AAPR"))).getText());
					return dAaprProduct;
				}*/
		//	else
			//{
				for(int a=1;a <=intPages+1;a++ )
				{
					System.out.println("Page Number " +a );
					for(int p=1;p<11;p++)
					{
						if(TB_GG_DoesWebElementExist(driver, By.xpath(s1+p+s2), intTimeOut))
						{
							s3=driver.findElement(By.xpath(s1+p+s2)).getText();
						
							
							if(s3.equalsIgnoreCase(strProduct))
							{
								driver.findElement(By.xpath(s1+p+s4)).click();
								driver.findElement(By.xpath(prop.getProperty("Btn_PS_Comparisions"))).click();//TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_PS_Comparisions")), "Product Comparison Button");
								dAaprProduct = Double.parseDouble(driver.findElement(By.xpath(prop.getProperty("Txt_PS_AAPR"))).getText());
								TB_GG_Report("Product is Selected","Pass", true); 
								return dAaprProduct;
							}	
						}
									}
					
					TB_GG_Click(driver, By.id("ext-comp-1006"), "Next Page");
						
				//}
			}
	}
		catch(Exception ee)
		{
			TB_GG_captureScreen(driver, "ClickProduct");
			ee.printStackTrace();
			TB_GG_Log("Got an exception! "+ ee.getMessage().toString());
		}
		
		
		return dAaprProduct;
		
	}
	/**********************************************************************************************************
	@author Ruchi
	@doc  Calculate the AAPR as per formula
	@param WebDriver, data row
	@return AAPR (Result of Formula)
	@Date 2Oct,2012
	**************************************************************************************************************/		
	
	public double TB_LB_AAPRCalculator(WebDriver driver, int intRowid)
	{
		String strFile=TB_GG_SetInputFile("TB_DFL_CreateProduct.xls");
		
		double dLoanAmount=0;
		double dRate=0;
		double dRateTerm=0;
		double dMthOngoingfee=0;
		double dQuarOngoingfee=0;
		double dSemiAnnOngoingfee=0;
		double dAnnOngoingfee=0;
		double dFstRevertRate=0;
		double dFstRevertRateTerm=0;
		double dSecRevertRate=0;
		double dSecRevertRateTerm=0;
		double dThirdRevertRate=0;
		double dThirdRevertRateTerm=0;
		double dFinRevertRate=0;
		double dFinRevertRateTerm=0;
		double dApppFee=0;
		double dDischargeFee=0;
		double dSettlementFee=0;
		
		double dAaprTerm=0;
		double dAapr=0;
		double dDinominator=1;
		double dNumerator=1;
		
		TB_GG_Report("APPR Calculator","", true); 
		
		try
		{
		
			 dLoanAmount=Double.parseDouble(TB_GG_ReadXL(intRowid, "Ed_NA_TotLaonAmount", strFile));
			 if(! TB_GG_ReadXL(intRowid, "Ed_PM_InitialRate", strFile).equals(""))
			 {
				 dRate=Double.parseDouble((TB_GG_ReadXL(intRowid, "Ed_PM_InitialRate", strFile)).replace('%', ' '));
			 	 dRateTerm=Double.parseDouble(TB_GG_ReadXL(intRowid, "Ed_PM_InitialRateTerm", strFile));
			 }
			 if(! TB_GG_ReadXL(intRowid, "Ed_PM_OngoingMonthlyFee", strFile).equals(""))
			 dMthOngoingfee=Double.parseDouble(TB_GG_ReadXL(intRowid, "Ed_PM_OngoingMonthlyFee", strFile));
			 
			 if(! TB_GG_ReadXL(intRowid, "Ed_PM_OngoingQuarterlyFee", strFile).equals(""))
			 dQuarOngoingfee=Double.parseDouble(TB_GG_ReadXL(intRowid, "Ed_PM_OngoingQuarterlyFee", strFile));
			 
			 if(! TB_GG_ReadXL(intRowid, "Ed_PM_OngoingSemiAnnualFee", strFile).equals("")) 
			 dSemiAnnOngoingfee=Double.parseDouble(TB_GG_ReadXL(intRowid, "Ed_PM_OngoingSemiAnnualFee", strFile));
			 
			 if(! TB_GG_ReadXL(intRowid, "Ed_PM_OngoingAnnualFee", strFile).equals(""))
			 dAnnOngoingfee=Double.parseDouble(TB_GG_ReadXL(intRowid, "Ed_PM_OngoingAnnualFee", strFile));
			 
			 if(! TB_GG_ReadXL(intRowid, "Ed_PM_RevertRate1", strFile).equals(""))
			 {
				 dFstRevertRate=Double.parseDouble((TB_GG_ReadXL(intRowid, "Ed_PM_RevertRate1", strFile)).replace('%', ' '));
				 dFstRevertRateTerm=Double.parseDouble(TB_GG_ReadXL(intRowid, "Ed_PM_RevertRate1Term", strFile));
			 }
			 
			 if(! TB_GG_ReadXL(intRowid, "Ed_PM_RevertRate2", strFile).equals(""))
			 {
				 dSecRevertRate=Double.parseDouble((TB_GG_ReadXL(intRowid, "Ed_PM_RevertRate2", strFile)).replace('%', ' '));
				 dSecRevertRateTerm=Double.parseDouble(TB_GG_ReadXL(intRowid, "Ed_PM_RevertRate2Term", strFile));
			 }
			 
			 if(! TB_GG_ReadXL(intRowid, "Ed_PM_RevertRate3", strFile).equals(""))
			 {
				 dThirdRevertRate=Double.parseDouble((TB_GG_ReadXL(intRowid, "Ed_PM_RevertRate3", strFile)).replace('%', ' '));
				 dThirdRevertRateTerm=Double.parseDouble(TB_GG_ReadXL(intRowid, "Ed_PM_RevertRate3Term", strFile));
			 }
			 if(! TB_GG_ReadXL(intRowid, "Ed_PM_RevertRateFin", strFile).equals(""))
			 {
				 dFinRevertRate=Double.parseDouble((TB_GG_ReadXL(intRowid, "Ed_PM_RevertRateFin", strFile)).replace('%', ' '));
				 dFinRevertRateTerm=Double.parseDouble(TB_GG_ReadXL(intRowid, "Ed_PM_RevertRateFinTerm", strFile));
			 }
			 
			  dApppFee=Double.parseDouble(TB_GG_ReadXL(intRowid, "Ed_PM_ApplicationFee", strFile));
			 
			  dDischargeFee=Double.parseDouble(TB_GG_ReadXL(intRowid, "Ed_PM_DischargeFee", strFile));
			
			  dSettlementFee=Double.parseDouble(TB_GG_ReadXL(intRowid, "Ed_PM_SettlementFee", strFile));
			 
			  dAaprTerm = Double.parseDouble(TB_GG_ReadXL(intRowid, "Ed_PM_NewAAPR", strFile));
			 dNumerator =( (dLoanAmount*dRate/100*dRateTerm/12) + (dLoanAmount*dFstRevertRate/100*dFstRevertRateTerm/12) + (dLoanAmount*dSecRevertRate/100*dSecRevertRateTerm/12) +
					 (dLoanAmount*dThirdRevertRate/100*dThirdRevertRateTerm/12) + (dLoanAmount*dFinRevertRate/100*dFinRevertRateTerm/12) + (dMthOngoingfee*12*dAaprTerm ) + (dQuarOngoingfee*4*dAaprTerm ) + (dSemiAnnOngoingfee*2*dAaprTerm ) + (dAnnOngoingfee*dAaprTerm ) + dApppFee + dSettlementFee + dDischargeFee ) ;
			 
			 dDinominator =( dLoanAmount * dAaprTerm );
			
			 dAapr= ( dNumerator/dDinominator) * 100;
	}	
		 catch(Exception ee)
			{
				ee.printStackTrace();
				TB_GG_Log("Got an exception! "+ ee.getMessage().toString());
			}
		 
		return dAapr;
	}
	
	
/**********************************************************************************************************
@doc  Approve And Deployment of Product
@author rusingh
@param intRowid: row number from data sheet
@Date 12 Oct,2012
@return boolean
**************************************************************************************************************/	
	public boolean TB_LB_ProductApproveDeployment(WebDriver driver, int intRowid)
	{
		String strFile=TB_GG_SetInputFile("TB_DFL_CreateProduct.xls");
		boolean bResult=false;
		TB_GG_Report("ProductApproveDeployment","", true); 
		TB_GG_Click(driver, By.xpath(prop.getProperty("Tb_Menu_Maintenance")), "Maintenance Tab");
		
		//TB_GG_Click(driver, By.xpath(prop.getProperty("Tb_Menu_ProductHub")), "ProductHub Tab");
		
		TB_GG_Wait();
		driver.navigate().to("https://t1uat.test.aussie.com.au/tonto/lender");
		TB_GG_Wait();
		
	//	TB_GG_Click(driver, By.xpath(prop.getProperty("Tb_Menu_Approve&Deploy")), "Approve&Deploy Tab");
		
	//	((JavascriptExecutor)driver).executeScript("return $(\"a:contains('Approve & Deploy')\").mouseover;");  
	//	driver.findElement(By.xpath(".//*[@id='menuItem417']/ul/li[2]/a")).click();

		
		//hoverOnMenu(driver, "", "App&Dep");
		
		TB_GG_Click(driver, By.xpath(prop.getProperty("Tb_Menu_Approve&Deploy")), "AwaitingApprove Tab");
		
		TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_ApprovalFilter"), "Approval Filter", "Profile Name");
		
		TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_ApprovalKeyword")), "Approval Keyword", TB_GG_ReadXL(intRowid, "Ed_PM_ProuctInstance", strFile));
		
		TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_ApprovalSearch")), "Search Approval Button");
	
		TB_GG_Wait();
		 if(! TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Txt_ApprovalMsg")), intTimeOut))
		//if(! (driver.findElement(By.className("pad")).getText().equalsIgnoreCase("Sorry no result found")))
				//xpath(prop.getProperty("Txt_ApprovalMsg"))).getText().equalsIgnoreCase("Sorry no result found"))
		{	
			
			TB_GG_Click(driver, By.xpath(prop.getProperty("Lb_A/DSelectAll")), "Select All");
				
				
				
				TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_ApproveChanges")), "Approve Changes Button");
				
				Actions action = new Actions(driver); 
				action.sendKeys(Keys.TAB).perform();
				action.sendKeys(Keys.ENTER).perform();
				TB_GG_Wait(4000);
				
				if(TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Txt_ApprovalMsg")), intTimeOut))
				if(! driver.findElement(By.xpath(prop.getProperty("Txt_ApprovalMsg"))).getText().equalsIgnoreCase("Sorry no result found"))
				
					TB_GG_Report("Approval is done successsfully", "Pass", true);
				TB_GG_Wait();
				driver.navigate().to("https://t1uat.test.aussie.com.au/tonto/product/deploy");
				TB_GG_Wait();
				//TB_GG_Click(driver, By.xpath(prop.getProperty("Tb_Menu_AwaitingDeploy")), "Product Tab");
				
				TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_DeployFilter"), "Deployment Filter", "Profile Name");
				
				TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_DeployKeyword")), "Deployment Keyword",TB_GG_ReadXL(intRowid, "Ed_PM_ProuctInstance", strFile));
				
				TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_DeploySearch")), "Search Deployment Button");
				
				TB_GG_Click(driver, By.xpath(prop.getProperty("Lb_A/DSelectAll")), "Select All");
				
				TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_ScheduleDeployment")), "Schedule Deployment");
				
				action.sendKeys(Keys.TAB).perform();
				action.sendKeys(Keys.TAB).perform();
				action.sendKeys(Keys.TAB).perform();
				action.sendKeys(Keys.TAB).perform();
				action.sendKeys(Keys.ENTER).perform();
				action.sendKeys(Keys.TAB).perform();
				action.sendKeys(Keys.ENTER).perform();
				TB_GG_Wait(6000);
				
				if(TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Txt_DeployMsg")), intTimeOut))

				if(! driver.findElement(By.xpath(prop.getProperty("Txt_DeployMsg"))).getText().equalsIgnoreCase("No Records Scheduled for Deployment"))
					{
					 TB_GG_Report("Deployment is done successsfully", "Pass", true);
					 bResult=true;
					}
				
				else TB_GG_Report("Deployment is Fail", "Fail", true);
		}	
		return bResult;
		
	}
	
/**********************************************************************************************************
	@author Skaur
	@doc  Fills Customer Information part of application
	@param WebDriver, data row
	@Date 2Oct,2012
**************************************************************************************************************/		
	public boolean TB_LB_CustomerInformationApp(WebDriver driver, int intRowid)
	{
		//Set Data input file and row 
		String strFile=TB_GG_SetInputFile("TB_DFL_NeedAnalysisXML.xls");
		String strStepdetail="";
		String strResult="";
		TB_GG_Report("Customer Information In Application","", true); 
		System.out.println("Application Form opened");
		TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_Loading")),30000);
		String[] custs=new String[5];
		
		//capturing javascript generated customer id
		TB_GG_WaitAnElementPresent(driver, By.xpath( prop.getProperty("Dlst_APP_PreferredContact")), 20000);
		custs=TB_LB_GetCustomerID(driver,By.xpath(prop.getProperty("Dlst_APP_PreferredContact")),intTimeOutForPaging);
		strCustId=custs[0];
		TB_GG_Log("Customer Id for given session is:" + strCustId);
		if(custs[1] != null) 
			{
				strCustIdJoint=custs[1];
				TB_GG_Log("Customer Id for Joint customer is:" + strCustIdJoint);
			}
		else
			strCustIdJoint="";
		//
		
		if(!(TB_GG_FindElement(driver, By.xpath(prop.getProperty("Lb_APP_leftMenu")),10000).getAttribute("class")).equals("menu-inactive"))
		{
//Customer Details From
			TB_GG_Click(driver,By.xpath(prop.getProperty("Lb_APP_leftMenuCD")),"Customer Details");
			TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_Loading")),30000);
			if(strSearchType.equalsIgnoreCase("Personal"))
			{
				TB_GG_WaitAnElementPresent(driver, By.xpath( prop.getProperty("Dlst_APP_AddressType")+strCustId+"']"), 20000);

				TB_GG_Wait();
				boolean c = TB_GG_Click(driver, By.className("edit_"+strCustId),"Edit address");
				if(!c) c = TB_GG_Click(driver, By.cssSelector("a.edit.edit_"+strCustId),"Edit address");
				if(!c) TB_GG_Click(driver, By.xpath(prop.getProperty("Img_APP_EditAdd")+strCustId+"']/fieldset[3]/ul/li[7]/div/table/tbody/tr[1]/td[4]/a[2]"), "Edit");
				
				TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_Loading")),15000);
				TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_APP_LivingTerm")+strCustId+"']", "Living Term",TB_GG_ReadXL(intRowid, "Dlst_NA_LivingTerm", strFile));
				TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_APP_AddressType")+strCustId+"']", "Address Type","Current");
				WebElement calendar=driver.findElement(By.xpath(prop.getProperty("Ed_APP_DateMovedIn")+strCustId+"']"));
	             calendar.clear();
	             calendar.sendKeys("09/09/2000");
				//new Select(driver.findElement(By.xpath(prop.getProperty("Dlst_APP_ExistingAddress")+strCustId+"']"))).selectByIndex(1);
				TB_GG_FindElement(driver, By.xpath(prop.getProperty("Cb_APP_ExistingBankingCustomerNo")+strCustId+"-2']"),5000).click();
				TB_GG_FindElement(driver, By.xpath(prop.getProperty("Cb_APP_CustomerHaveABN")+strCustId+"-2']"), 5000).click();
				TB_GG_FindElement(driver, By.xpath(prop.getProperty("Cb_APP_HaveDriversLicence")+strCustId+"-1']"), 5000).click();
				TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_APP_LicenceIssuingState")+strCustId+"']", "Licence Issuing State","Australian Capital Territory");
				TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APP_LicenceNumber")+strCustId+"']"), "Licence Number", "79 875 985 603");
				 calendar=driver.findElement(By.xpath(prop.getProperty("Ed_APP_LicenceExpiryDate")+strCustId+"']"));
	             calendar.clear();
	             calendar.sendKeys("09/09/2016");
	             TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_APP_CD_Save")+strCustId+"']"), "Save Details");	
				
				TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_Loading")),30000);
			}
			else //Company customer
			{
				TB_GG_WaitAnElementPresent(driver, By.xpath( prop.getProperty("Ed_APPCC_CompanyABN")+strCustId+"']"), 20000);
				boolean c = TB_GG_Click(driver, By.className("edit_"+strCustId),"Edit address");
				if(!c) TB_GG_Click(driver, By.cssSelector("a.edit.edit_"+strCustId),"Edit address");
				WebElement ele = TB_GG_FindElement(driver, By.xpath(prop.getProperty("Dlst_APP_ApplicationClass")+strCustId+"']"),7000);
				if(TB_GG_getSelectedOption(ele).equalsIgnoreCase("Trust Fund"))
				{
					TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APPCC_TrustABN")+strCustId+"']"), "Trust ABN", "79 875 985 603");
					TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APPCC_TrustACN")+strCustId+"']"), "Trust ACN", "796 895 809");
				    TB_GG_Wait(6000);
				}
				
				else
				{
					TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APPCC_CompanyABN")+strCustId+"']"), "Company ABN", "79 875 985 603");
					TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APPCC_CompanyACN")+strCustId+"']"), "Company ACN", "796 895 809");
					TB_GG_Wait();
				}	
				TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_APP_AddressType")+strCustId+"']", "Address Type","Company Registered Address");
				TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_APP_CD_Save")+strCustId+"']"), "Save Details");	
				TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_Loading")),30000);	
			}			
			
//Occupation & Income From	
			TB_GG_Wait(7000);
			boolean click = TB_GG_Click(driver,By.xpath(prop.getProperty("Lb_APP_leftMenuOI")),"Occupation & Income");
			if(!click) TB_GG_Click(driver,By.xpath(prop.getProperty("Lb_APP_leftMenuOI")),"Occupation & Income");
			TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_Loading")),30000);
			if(strSearchType.equalsIgnoreCase("Company"))
			{
				TB_GG_WaitAnElementPresent(driver, By.xpath( prop.getProperty("Dlst_APPCC_CompanyTaxableIncomeYear")+strCustId+"']"), 20000);
				TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_APPCC_CompanyTaxableIncomeYear")+strCustId+"']", "Company Taxable Income Year", "2010 - 2011");
				//new Select(driver.findElement(By.id("APP_CI_OI_CompanyTaxableIncomeYear_104"))).selectByVisibleText("2010 - 2011");
				//driver.findElement(By.cssSelector("option[value=\"2010 - 2011\"]")).click();
				TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APPCC_CompanyNetProfit")+strCustId+"']"), "Company Net Profit", "500000");
				WebElement we=	TB_GG_FindElement(driver, By.xpath(prop.getProperty("Img_APPCC_AddIncomeRec")+strCustId+"']/img"), 5000);
				if(we.isDisplayed())
				{       we.click();
				
			//	TB_GG_FindElement(driver, By.xpath(prop.getProperty("Img_APPCC_AddIncomeRec")+strCustId+"']/img"), 5000).click();
				TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_APPCC_CompanyTaxableIncomeYear2")+strCustId+"']", "Company Taxable Income Year2", "2009 - 2010");
				TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APPCC_CompanyNetProfit2")+strCustId+"']"), "Company Net Profit 2", "600000");
				}
				TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_APPCC_CompanyTaxableIncomeYear2")+strCustId+"']", "Company Taxable Income Year2", "2009 - 2010");
				TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APPCC_CompanyNetProfit2")+strCustId+"']"), "Company Net Profit 2", "600000");
				TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APPCC_CompanyAccountantsName")+strCustId+"']"), "Company Accountants Name", "Smith");
				TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APPCC_CompanyAccountantsNumber")+strCustId+"']"), "Company Accountants Number", "0451754444");
			}
			if(strSearchType.equalsIgnoreCase("Personal"))
			{
				Actions action = new Actions(driver); 		
				//WebElement occuTab =TB_GG_FindElement(driver, By.xpath(prop.getProperty("Tbl_APP_EditOI")+strCustId+"']/div[2]/table/tbody/tr[1]/td/div/table"),10000);
				WebElement edit = TB_GG_FindElement(driver,By.className("edit"),5000);
				if(edit != null && edit.isEnabled() )//*[@id='content-ajax-170']/div[2]/table/tbody/tr/td/div/table
				{
					TB_GG_Wait(5000);
					edit.click();
				}
				else
				{
					
					TB_GG_Click(driver, By.xpath(prop.getProperty("Dlst_APPPC_IncomeStatus")+strCustId+"']"), "");
					TB_GG_Wait();
					//driver.findElement(By.xpath(prop.getProperty("Dlst_APPPC_IncomeStatus")+strCustId+"']")).click();
					//TB_GG_Click(driver, By.xpath(prop.getProperty("Dlst_APPPC_IncomeStatus")+strCustId+"']"), "");
					action.sendKeys(Keys.TAB).perform();
					action.sendKeys(Keys.TAB).perform();
					action.sendKeys(Keys.TAB).perform();
					action.sendKeys(Keys.ENTER).perform();
				}
				TB_GG_WaitAnElementPresent(driver, By.xpath( prop.getProperty("Dlst_APPPC_IncomeStatus")+strCustId+"']"), 20000);
				String incoemType = TB_GG_getSelectedOption(TB_GG_FindElement(driver, By.xpath(prop.getProperty("Dlst_APPPC_IncomeStatus")+strCustId+"']"),5000));
				if(incoemType.equals("PAYG"))
				{
					
					TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_APPPC_PaygEmployerType")+strCustId+"']","Employer Type","Public Sector");
					TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APP_PaygEmployerContact")+strCustId+"']"),"Employer Contact", "023456780");
					// address
					TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_PaygBuildingName")+strCustId+"']"),"Building Name","Sain Marino");
					TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_PaygFloorNumber")+strCustId+"']"),"Floor Number","1");
					TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_PaygUnitNumber")+strCustId+"']"),"Unit Number","23");
					TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_PaygStreetNumber")+strCustId+"']"),"Street Number","38");
					TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_PaygStreetName")+strCustId+"']"),"Street Name","Alice");
					TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_APP_PaygStreetType")+strCustId+"']","Street Type","Lane");
					TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_PaygSuburb")+strCustId+"']"),"Suburb","parra");
					TB_GG_Wait();
					driver.findElement(By.cssSelector("li.ui-autocomplete1-even")).click();
					driver.findElement(By.xpath(prop.getProperty("Ed_APP_PaygSuburb")+strCustId+"']")).click();
					///
					
					/*TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_PaygOccupation")+strCustId+"']"),"PAYG Occupation","Manager");
					TB_GG_Wait();
					driver.findElement(By.cssSelector("li.ui-autocomplete1-even > strong")).click();
					driver.findElement(By.xpath(prop.getProperty("Ed_APP_PaygOccupation")+strCustId+"']")).click();*/
					driver.findElement(By.xpath(prop.getProperty("Cb_APP_PaygQACompanyCarNo")+strCustId+"-no']")).sendKeys(Keys.TAB);
					action.sendKeys(Keys.ENTER).perform();
				}
				else if(incoemType.equals("Self-Employed"))
				{
					TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APP_companyOwned")), "Company Owned %","100");
					/// address
					TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_Add_SelfBuildingName")+strCustId+"']"),"Building Name","Sain Marino");
					TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_SelfFloorNumber")+strCustId+"']"),"Floor Number","1");
					TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_SelfUnitNumber")+strCustId+"']"),"Unit Number","23");
					TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_SelfStreetNumber")+strCustId+"']"),"Street Number","38");
					TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_SelfStreetName")+strCustId+"']"),"Street Name","Alice");
					TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_APP_SelfStreetType")+strCustId+"']","Street Type","Lane");
					TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_SelfSuburb")+strCustId+"']"),"Suburb","parra");
					TB_GG_Wait();
					driver.findElement(By.cssSelector("li.ui-autocomplete1-even")).click();
					driver.findElement(By.xpath(prop.getProperty("Ed_APP_SelfSuburb")+strCustId+"']")).click();
					//
					WebElement calendar=driver.findElement(By.xpath(prop.getProperty("Ed_APP_SelfDateEstablished")+strCustId+"']"));
		             calendar.clear();
		             calendar.sendKeys("09/09/2000");
					TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_ABNSelfEmployedOnly")+strCustId+"']"),"ABN No.","7497827930");
					TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_SelfAccountantsName")+strCustId+"']"),"Self Accountant's Name","Bill Speers");
					TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_SelfAccountantsPhoneNumber")+strCustId+"']"),"Accountant's Phone Number","0288918598");
					TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_SelfAccountantsFaxNumber")+strCustId+"']"),"Accountant's Fax Number","0288928577");
					action.sendKeys(Keys.TAB).perform();
					action.sendKeys(Keys.ENTER).perform();
			
				}
				TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_Loading")),30000);
			}	
//Credit History From	
			if(strSearchType.equalsIgnoreCase("Company"))
			{
				boolean cl = TB_GG_Click(driver,By.xpath(prop.getProperty("Lb_APP_LeftMenuCH")),"Credit History");
				if(!cl) TB_GG_Click(driver,By.xpath(prop.getProperty("Lb_APP_LeftMenuCH")),"Credit History");
				TB_GG_WaitAnElementPresent(driver,By.xpath(prop.getProperty("Cb_APP_ConfirmContractNo")+strCustId+"-2']"),15000);
				TB_GG_Click(driver, By.xpath(prop.getProperty("Cb_APP_ConfirmContractNo")+strCustId+"-2']"),"Confirm Contract No");
				TB_GG_FindElement(driver, By.xpath(prop.getProperty("Cb_APP_CreditDefaultNo")+strCustId+"-2']"),5000).click();
				TB_GG_FindElement(driver, By.xpath(prop.getProperty("Cb_APP_JudgementEnteredNo")+strCustId+"-2']"),5000).click();
				TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_APP_FinancialExperience")+strCustId+"']","Final Exp","Intermediate");//"Intermediate");
				TB_GG_Click(driver, By.xpath(prop.getProperty("Cb_APP_TranAcc")+strCustId+"-2']"),"Transaction Account No");
				TB_GG_Click(driver, By.xpath(prop.getProperty("Cb_APP_CreditCard")+strCustId+"-2']"),"Credit Card No");
				TB_GG_Click(driver, By.xpath(prop.getProperty("Cb_APP_Loan")+strCustId+"-2']"),"Loan No");

				
			}
		
		}
		else
		{
			strStepdetail="Application Froms are inactive";
			strResult="Fail";
			TB_GG_Report(strStepdetail, strResult, true);
			TB_GG_Log(strStepdetail);
			return false;
		}
		return true;
	}
	

	
/**********************************************************************************************************************************************************
	 * TB_LB_MortgageApp is to complete the Mortage part of APP
	 * @param int rowId
	 * @returns boolean 
	 * @category APP
	 * @author Skaur
	
*********************************************************************************************************************************************************/   	

	public boolean TB_LB_MortgageApp(WebDriver driver, int intRowid)
	{
		//Set Data input file and row 
		String strFile=TB_GG_SetInputFile("TB_DFL_NeedAnalysisXML.xls");
		
		TB_GG_Report("Mortgage Application","", true); 
		TB_GG_Wait();
		
	//Reference Details Form
			if(strSearchType.equalsIgnoreCase("Personal") || bMixed)
			{
				
				TB_GG_Click(driver, By.linkText("Reference Details"), "Reference Details");
				TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);
				if(!TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Ed_APP_FirstName")+strCustId+"']"),6000))
				{
					TB_GG_Click(driver, By.linkText("Reference Details"), "Reference Details");
					TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);
				}
				
				if(strSearchType.equalsIgnoreCase("Personal"))
				{	
					TB_GG_WaitAnElementPresent(driver,By.xpath(prop.getProperty("Ed_APP_FirstName")+strCustId+"']"),15000);
					TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APP_FirstName")+strCustId+"']"), "First Name", "James");//TB_GG_ReadXL(intRowid, "Ed_APP_FirstName", strFile));
					//driver.findElement(By.id("APP_MA_RD_FirstName_101")).sendKeys("Mehta");
					TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APP_LastName")+strCustId+"']"), "Last Name", "Sinna");//TB_GG_ReadXL(intRowid, "Ed_APP_LastName", strFile));
					TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APP_RelationshipToApplicant")+strCustId+"']"), "Relationship To Applicant", "Friend");
					new Select(driver.findElement(By.xpath(prop.getProperty("Dlst_APP_SelectExistingAddress")+strCustId+"']"))).selectByIndex(1);
				}
				else if(strSearchTypeJoint.equalsIgnoreCase("Personal"))
				{
					TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APP_FirstName")+strCustIdJoint+"']"), "First Name", "Ricky");
					//driver.findElement(By.id("APP_MA_RD_FirstName_101")).sendKeys("Mehta");
					TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APP_LastName")+strCustIdJoint+"']"), "Last Name", "Clinton");
					TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APP_RelationshipToApplicant")+strCustIdJoint+"']"), "Relationship To Applicant", "Friend");
					new Select(driver.findElement(By.xpath(prop.getProperty("Dlst_APP_SelectExistingAddress")+strCustIdJoint+"']"))).selectByIndex(1);
				}
				if(strCustIdJoint != "" && ! bMixed)
				{
					if( ! driver.findElement(By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint))).getAttribute("class").contains("ui-tabs-selected"))
	 					TB_GG_Click(driver, By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint)), "Tab of Next customer");
					if( ! driver.findElement(By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint))).getAttribute("class").contains("ui-tabs-selected"))
	 					TB_GG_Click(driver, By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint)), "Tab of Next customer");
					TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APP_FirstName")+strCustIdJoint+"']"), "First Name", "Ricky");
					//driver.findElement(By.id("APP_MA_RD_FirstName_101")).sendKeys("Mehta");
					TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APP_LastName")+strCustIdJoint+"']"), "Last Name", "Clinton");
					TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APP_RelationshipToApplicant")+strCustIdJoint+"']"), "Relationship To Applicant", "Friend");
					new Select(driver.findElement(By.xpath(prop.getProperty("Dlst_APP_SelectExistingAddress")+strCustIdJoint+"']"))).selectByIndex(1);
				}
			}	
	//Security Property Details From	
		/* TB_GG_Click(driver, By.linkText("Security Property Details"), "Security Property Details");
			TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);		
			//TB_GG_WaitAnElementPresent(driver,By.xpath(prop.getProperty("Dlst_APP_OwnershipStatus")),15000);
			if(!TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Dlst_APP_OwnershipStatus")),10000))
			{
				TB_GG_Click(driver, By.linkText("Security Property Details"), "Security Property Details");
				TB_GG_WaitAnElementPresent(driver,By.xpath(prop.getProperty("Dlst_APP_OwnershipStatus")),15000);
			}
			TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_APP_OwnershipStatus"), "Ownership Status","Buying It");
			TB_GG_ClickFast(driver,By.xpath(prop.getProperty("Cb_APP_PropertyFoundYes","Property Found")),"Property Found Yes");
			///For property found yes
			TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APP_FloorNumber")), "Floor Number", "4");
			TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APP_UnitNumber")), "Unit Number", "11");
			TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APP_StreetNumber")), "Street Number", "22");
			TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APP_StreetName")), "Street Name", "Pitt");
			TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_APP_StreetType"),"Street Type","Street");
			TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_Suburb")),"Suburb","parra");
			TB_GG_Wait();
			driver.findElement(By.cssSelector("li.ui-autocomplete1-odd")).click();
			driver.findElement(By.xpath(prop.getProperty("Ed_APP_Suburb"))).click();
			//
			TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_APP_PropertyType"),"Property Type","House");
			if(strCustIdJoint != "" && ! TB_GG_ReadXL(intRowid+1, "Dlst_NA_ApplicantType", strFile).equals("Guarantor"))
			{
				TB_GG_ClickFast(driver,By.xpath(prop.getProperty("Cbox_APP_ApplicantName")+strCustId+"']"),"Customer Owned");
				TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_SPD_PercentOwned")+strCustId+"']"),"Percent Owned","60");
				TB_GG_ClickFast(driver,By.xpath(prop.getProperty("Cbox_APP_ApplicantName")+strCustIdJoint+"']"),"Customer Owned");
				TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_SPD_PercentOwned")+strCustIdJoint+"']"),"Percent Owned","40");
			}
			else
			{
				TB_GG_ClickFast(driver,By.xpath(prop.getProperty("Cbox_APP_ApplicantName")+strCustId+"']"),"Customer Owned");
				TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_SPD_PercentOwned")+strCustId+"']"),"Percent Owned","100");
			}
			TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_SecurityValue")),"Security Value",TB_GG_ReadXL(intRowid, "Ed_NA_TotalSecurityPropertyValue", strFile));
			TB_GG_ClickFast(driver,By.xpath(prop.getProperty("Cb_APP_ConstructionInvolvedNo")),"Construction Involved No");
			if(TB_GG_ReadXL(intRowid, "Dlst_NA_LoanPurpose", strFile).equals("Owner Occupied"))
					TB_GG_ClickFast(driver,By.xpath(prop.getProperty("Cb_APP_OwnerOccupiedYes")),"Owner Occupied Yes");
				
			else
				 {
					boolean click = TB_GG_ClickFast(driver,By.xpath(prop.getProperty("Cb_APP_OwnerOccupiedNo")),"Owner Occupied No");
					if(click)
						{
							TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_ProposedRentalIncome")),"Proposed Rental Income","300");
							TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_APP_RentalIncomePeriod"),"Rental Income Period","Monthly");
						}
				 }
			//new Select(driver.findElement(By.id("APP_MA_SPD_TypeOfTitle"))).selectByVisibleText("Leasehold");
			
			TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_VCRealEstateAgent")),"Real Estate Agent","LJ Hooker");
			TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_VCContactName")),"Contact Name","Jill Person");
			TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_VCContactPhone")),"Contact Phone","788776622");
			TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_LandArea")),"Land Area","400");
			TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_FloorArea")),"Floor Area","250");
			TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_NumberOfBedrooms")),"Number Of Bedrooms","4");
			//new Select(driver.findElement(By.id("APP_MA_SPD_CarAccomodation"))).selectByVisibleText("Garage");
			TB_GG_Click(driver,By.xpath(prop.getProperty("Btn_APP_SPD_Save")),"Save");
			TB_GG_Wait(2000);*/
	//Loan Details form		
			TB_GG_Click(driver, By.linkText("Loan Details"),"Loan Detail");
			TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);
			//TB_GG_WaitAnElementPresent(driver,By.xpath(prop.getProperty("Dlst_APP_RepaymentType")),15000);
			if(	!TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Dlst_APP_RepaymentType")),6000))
			{
				TB_GG_ClickFast(driver, By.linkText("Loan Details"),"Loan Detail");
				TB_GG_WaitAnElementPresent(driver,By.xpath(prop.getProperty("Dlst_APP_RepaymentType")),9000);
			}
			TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_APP_RepaymentType"),"Repayment Type","Principle & Interest");
			TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_APP_RepaymentMethod"),"Repayment Method","Direct Debit - Exsiting Account");
			TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_BSB")),"BSB Number","7999");
			
			TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_AccountNumber")),"Account Number","09778646545543");
			TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_AccountName")),"Account Name","savings");
			if(TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Lb_APP_VariationDetailsPanel")), intTimeOut))
			{
				 WebElement calendar=driver.findElement(By.xpath(prop.getProperty("Ed_APP_OrgSettDate")));
	             calendar.clear();
	             calendar.sendKeys("09/09/1999");
	 			TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_AddLoanPurpose")),"Additional Loan Purpose","Testing");
	 			TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_OrgMortTerm")),"Original Loan Term","30");

	            
			}
			if(strCustIdJoint != "" && ! bgfJoint.customerDetails.get("ApplicantType").equals("Guarantor"))
			{
				TB_GG_ClickFast(driver,By.xpath(prop.getProperty("Cbox_APP_divPercentOwned")),"Customer Owned");
				TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_LD_PercentOwned")+strCustId+"']"),"Percent Owned","60");
				TB_GG_ClickFast(driver,By.xpath(prop.getProperty("Cbox_APP_divPercentOwned")),"Customer Owned");
				TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_LD_PercentOwned")+strCustIdJoint+"']"),"Percent Owned","40");
			}
			else
			{
				TB_GG_ClickFast(driver,By.xpath(prop.getProperty("Cbox_APP_divPercentOwned")),"Customer Owned");
				TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_LD_PercentOwned")+strCustId+"']"),"Percent Owned","100");
			}
			
	//Legal Representation form			
			TB_GG_ClickFast(driver, By.linkText("Legal Representation"),"Legal Representation");
			TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);
			//TB_GG_WaitAnElementPresent(driver,By.xpath(prop.getProperty("Dlst_APP_RepaymentType")),15000);
			if(!TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Dlst_APP_SendDocumentTo")),10000))
			{
				TB_GG_ClickFast(driver, By.linkText("Legal Representation"),"Legal Representation");
				TB_GG_WaitAnElementPresent(driver,By.xpath(prop.getProperty("Dlst_APP_SendDocumentTo")),15000);
			}
			TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_APP_SendDocumentTo"),"Send Document To","Customer");
			TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_LegalRepresentitive")),"Legal Representative Name","John Walsh");
			TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_Phone")),"Phone No","0451789065");
			TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_FaxArea")),"Fax Area","45");
			TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_Fax")),"Fax","0298789895");
			TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_Email")),"Phone No","jhonwalsh@aussie.com.au");
			
			return true;			
				
		
	}
	
	/**********************************************************************************************************
	@author Skaur
	@doc  Fills Customer Information part of application
	@param WebDriver, data row
	@Date 14 Dec,2012
**************************************************************************************************************/			
	
	private boolean TB_LB_FundsToComplete(WebDriver driver, int intRowid)
	{
		//Set Data input file and row 
		String strFile=TB_GG_SetInputFile("TB_DFL_NeedAnalysisXML.xls");
		boolean click;	
		TB_GG_Report("Funds To Complete","", true); 
		click = TB_GG_Click(driver, By.linkText("Funds To Complete"),"Funds To Complete");
		if(!click)
			TB_GG_Click(driver, By.xpath(".//*[@id='need-analysis-left-menu']/div[4]/ul/li/ul/li[1]/a"),"Funds To Complete");
		TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);
		TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APP_PurchasePrice")), "Purchase Price", TB_GG_ReadXL(intRowid, "Ed_NAC_TotalSecurityValue", strFile));
		TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APP_Savings")),"Savings",TB_GG_ReadXL(intRowid, "Ed_NA_EFTCSavings", strFile));//"45000");
		
		return true;
	}
/**********************************************************************************************************
	@author Skaur
	@doc  Fills Customer Information part of application
	@param WebDriver, data row
	@Date 2 Oct,2012
**************************************************************************************************************/		
public boolean TB_LB_CompleteApp(WebDriver driver, int intRowid)
	{
		return TB_LB_CompleteApp(driver,intRowid, false);
		
	}
public boolean TB_LB_CompleteApp(WebDriver driver,int intRowid, boolean bJoint)
{
	System.out.println();
	boolean b1, b2 = true,b3 = true; // b3 is true to have a final true for company cust where FCR is not required
	if(bJoint)
		b1 = TB_LB_CustomerInformationAppJoint(driver, intRowid);
	else
		b1 = TB_LB_CustomerInformationApp(driver, intRowid);
	//if(!bgf.meetingDetails.get("LoanReason").contains("Variation"))
		b2 = TB_LB_MortgageApp(driver, intRowid);
	if(strSearchType.equalsIgnoreCase("Personal"))
		b3 = TB_LB_FinalCapacityToRepay(driver);
	else
		b3 = TB_LB_FundsToComplete(driver, intRowid);
	if(b1 && b2 && b3) return true;
	return false;
}

/**********************************************************************************************************
	@author Skaur
	@doc  clicks the view needs analysis link on opportunity page
	@param WebDriver
	@Date 2 Oct,2012
**************************************************************************************************************/	 	
public void TB_LB_ProceedToApp(WebDriver driver)	
{
	TB_GG_Report("Proceed Application","", true); 
	try{
		if(TB_GG_DoesWebElementExist(driver, By.id(prop.getProperty("Tba_AP_NAEditID")), intTimeOut))
	
			{	
				WebElement w =driver.findElement(By.id(prop.getProperty("Tba_AP_NAEditID")));
				TB_GG_Wait(7000);
				List <WebElement> rows = w.findElements(By.tagName("tr"));
				System.out.println("no of rows: "+rows.size());
				//int r=0;
				if(rows.size()>0)
				{
					//r= rows.size()-1;
					TB_GG_WaitAnElementDisappears(driver, By.xpath(prop.getProperty("Img_AP_loadingNA")),20000);
					//if(TB_GG_FindElement(driver,By.xpath(prop.getProperty("Lb_AP_RecentNATr")+r+"]/td[5]"), 7000)!=null)
					{
						if(TB_GG_FindElement(driver, By.xpath(prop.getProperty("Img_AP_UnLockNA")), 5000) != null)
							TB_GG_Click(driver,By.xpath(prop.getProperty("Lb_AP_RecentNATr")+1+"]/td[5]/a[2]"), "View Needs Analysis");
						else
							TB_GG_captureScreen(driver, "View_NA_not_found");
					}
				}
				else
				{
					TB_GG_captureScreen(driver, "View_NA_not_found");
					
					TB_GG_Report("No Active Needs Analysis is available", "Fail", true);
					TB_GG_Log("No Active Needs Analysis is available");
				}
			}
	}
	catch(Exception e)
	{
		TB_GG_captureScreen(driver, "View_NA_not_found");
		e.printStackTrace();
	}

}

/**********************************************************************************************************
Loads Living Expense values as setup in Toolbox ot local arrays for verification later
@author Skaur
@param WebDriver
@Date 8 Oct,2012
**************************************************************************************************************/	 	


public boolean TB_LB_LoadLivingExp(WebDriver driver)	
{
	
	TB_GG_Report("Load Living Exp", "", true);
	/*TB_GG_Click(driver, By.xpath(prop.getProperty("Tb_Menu_Maintenance")), "Maintenance Tab");
	TB_GG_Click(driver, By.xpath(prop.getProperty("Tb_Menu_ProductHub")), "ProductHub Tab");
	TB_GG_Click(driver, By.linkText("Living Expenses"),"Living Expenses");*/
	driver.navigate().to("https://t1uat.test.aussie.com.au/tonto/serviceability/living-expenses");
	// PCR
	for(int i = 0; i<=5; i++)
	{
	// FOR COUPLE	

		P_Couple[0][i]=driver.findElement(By.xpath(prop.getProperty("Lb_P_C_NSW")+i+"']")).getAttribute("value");
		P_Couple[1][i]=driver.findElement(By.xpath(prop.getProperty("Lb_P_C_OLD")+i+"']")).getAttribute("value");
		P_Couple[2][i]=driver.findElement(By.xpath(prop.getProperty("Lb_P_C_VIC")+i+"']")).getAttribute("value");
		P_Couple[3][i]=driver.findElement(By.xpath(prop.getProperty("Lb_P_C_ACT")+i+"']")).getAttribute("value");
		P_Couple[4][i]=driver.findElement(By.xpath(prop.getProperty("Lb_P_C_TAS")+i+"']")).getAttribute("value");
		P_Couple[5][i]=driver.findElement(By.xpath(prop.getProperty("Lb_P_C_WA")+i+"']")).getAttribute("value");
		P_Couple[6][i]=driver.findElement(By.xpath(prop.getProperty("Lb_P_C_SA")+i+"']")).getAttribute("value");
		P_Couple[7][i]=driver.findElement(By.xpath(prop.getProperty("Lb_P_C_NT")+i+"']")).getAttribute("value");
	// FOR SINGLE	
		P_Single[0][i]=driver.findElement(By.xpath(prop.getProperty("Lb_P_S_NSW")+i+"']")).getAttribute("value");
		P_Single[1][i]=driver.findElement(By.xpath(prop.getProperty("Lb_P_S_OLD")+i+"']")).getAttribute("value");
		P_Single[2][i]=driver.findElement(By.xpath(prop.getProperty("Lb_P_S_VIC")+i+"']")).getAttribute("value");
		P_Single[3][i]=driver.findElement(By.xpath(prop.getProperty("Lb_P_S_ACT")+i+"']")).getAttribute("value");
		P_Single[4][i]=driver.findElement(By.xpath(prop.getProperty("Lb_P_S_TAS")+i+"']")).getAttribute("value");
		P_Single[5][i]=driver.findElement(By.xpath(prop.getProperty("Lb_P_S_WA")+i+"']")).getAttribute("value");
		P_Single[6][i]=driver.findElement(By.xpath(prop.getProperty("Lb_P_S_SA")+i+"']")).getAttribute("value");
		P_Single[7][i]=driver.findElement(By.xpath(prop.getProperty("Lb_P_S_NT")+i+"']")).getAttribute("value");
		TB_GG_Report("Load given Living Expenses for PCR"+i, "Pass", true);
	}	
	//FCR
	TB_GG_Click(driver, By.xpath(prop.getProperty("Tb_LivExp_FCR")),"FCR Tab");	
	for(int i = 0; i<=5; i++)
	{
		
		// FOR COUPLE	
				F_Couple[0][i]=driver.findElement(By.xpath(prop.getProperty("Lb_F_C_NSW")+i+"']")).getAttribute("value");
				F_Couple[1][i]=driver.findElement(By.xpath(prop.getProperty("Lb_F_C_OLD")+i+"']")).getAttribute("value");
				F_Couple[2][i]=driver.findElement(By.xpath(prop.getProperty("Lb_F_C_VIC")+i+"']")).getAttribute("value");
				F_Couple[3][i]=driver.findElement(By.xpath(prop.getProperty("Lb_F_C_ACT")+i+"']")).getAttribute("value");
				F_Couple[4][i]=driver.findElement(By.xpath(prop.getProperty("Lb_F_C_TAS")+i+"']")).getAttribute("value");
				F_Couple[5][i]=driver.findElement(By.xpath(prop.getProperty("Lb_F_C_WA")+i+"']")).getAttribute("value");
				F_Couple[6][i]=driver.findElement(By.xpath(prop.getProperty("Lb_F_C_SA")+i+"']")).getAttribute("value");
				F_Couple[7][i]=driver.findElement(By.xpath(prop.getProperty("Lb_F_C_NT")+i+"']")).getAttribute("value");
			// FOR SINGLE	
				F_Single[0][i]=driver.findElement(By.xpath(prop.getProperty("Lb_F_S_NSW")+i+"']")).getAttribute("value");
				F_Single[1][i]=driver.findElement(By.xpath(prop.getProperty("Lb_F_S_OLD")+i+"']")).getAttribute("value");
				F_Single[2][i]=driver.findElement(By.xpath(prop.getProperty("Lb_F_S_VIC")+i+"']")).getAttribute("value");
				F_Single[3][i]=driver.findElement(By.xpath(prop.getProperty("Lb_F_S_ACT")+i+"']")).getAttribute("value");
				F_Single[4][i]=driver.findElement(By.xpath(prop.getProperty("Lb_F_S_TAS")+i+"']")).getAttribute("value");
				F_Single[5][i]=driver.findElement(By.xpath(prop.getProperty("Lb_F_S_WA")+i+"']")).getAttribute("value");
				F_Single[6][i]=driver.findElement(By.xpath(prop.getProperty("Lb_F_S_SA")+i+"']")).getAttribute("value");
				F_Single[7][i]=driver.findElement(By.xpath(prop.getProperty("Lb_F_S_NT")+i+"']")).getAttribute("value");
				TB_GG_Report("Load given Living Expenses for FCR"+i, "Pass", true);
	}
	loaded = true;
	try 
	{ 
	 
		for( int j =0 ; j<8; j++)
		{
			for(int i = 0; i<=5; i++)
			{
				
				System.out.println("LE"+i+": " +P_Couple[j][i]);   
				serv.setProperty("P_Couple["+j+"]["+i+"]", P_Couple[j][i]);        
				serv.setProperty("P_Single["+j+"]["+i+"]", P_Single[j][i]);      
				System.out.println("LE"+i+": " +F_Couple[j][i]);     
				serv.setProperty("F_Couple["+j+"]["+i+"]", F_Couple[j][i]); 
				serv.setProperty("F_Single["+j+"]["+i+"]", P_Single[j][i]); 
			}
		}		
				File file = new File("./TB_Serviceability.properties");     
				OutputStream out = new FileOutputStream( file );        
				serv.store(out, "This are Living Expense details loaded from serviceability");    
			}    
		catch (Exception e ) 
		{        e.printStackTrace();    }
	
	TB_GG_Wait();
	TB_LB_Logout(driver);
	TB_GG_Wait();
	bgf.admin = loaded;
	//bgf.setLivingExp(P_Couple, P_Single, F_Couple, F_Single);
	return loaded;
}

/**********************************************************************************************************
@doc  gets the value for Living Expense for given parrameters for an individual applicant
@author Skaur
@param CapToRepay: FCR/PCR
@param sOrc: Single or Couple
@param state: Given state
@param noOfDep: Given number of dependents
@Date 8 Oct,2012
**************************************************************************************************************/	 	
public double TB_LB_getExpLivingExpIndividual(String CapToRepay, String state, String maritalS, String empS, String noOfDep)
{
	String table = getTableRefForLE(maritalS, empS);
	int dep =0;
	try
	{
	 dep = Integer.parseInt(noOfDep);
	}
	catch(Exception e)
	{
		e.printStackTrace();
	}	
	return getExpLivingExpValue(CapToRepay, table, state, dep );
}
public double getExpLivingExpValue(String CapToRepay, String sOrc,  String state, int dep)
{
	
	double d = 0.0;
	int stat = 0;
	FileInputStream is;
	if(state.equalsIgnoreCase("New South Wales")) stat =0;
	else if(state.equalsIgnoreCase("Queensland")) stat =1;
	else if(state.equalsIgnoreCase("Victoria")) stat =2;
	else if(state.equalsIgnoreCase("Australian Capital Territory")) stat =3;
	else if(state.equalsIgnoreCase("Tasmania")) stat =4;
	else if(state.equalsIgnoreCase("Western Australia")) stat =5;
	else if(state.equalsIgnoreCase("South Australia")) stat =6;
	else if(state.equalsIgnoreCase("Northern Territory")) stat =7;
	if(dep > 5) dep =5;
	try 
	{       
		File f = new File("./TB_Serviceability.properties");       
		is = new FileInputStream( f );    
		if(is!=null) 
			{
				serv.load(is);
				this.loaded = true;
			}
		
	}    
	catch ( Exception e )
	{ 
		is = null; 
		this.loaded = false;
	}
	 
		String res="0";
		//dep = Integer.parseInt(noOfDep);
		if(this.loaded)
		{
			if(CapToRepay.equalsIgnoreCase("FCR") && sOrc.equalsIgnoreCase("Single"))	res = serv.getProperty("F_Single["+stat+"]["+dep+"]");
		
			else if(CapToRepay.equalsIgnoreCase("FCR") && sOrc.equalsIgnoreCase("Couple")) res =serv.getProperty("F_Couple["+stat+"]["+dep+"]");
		
			else if(CapToRepay.equalsIgnoreCase("PCR") && sOrc.equalsIgnoreCase("Couple")) res = serv.getProperty("P_Couple["+stat+"]["+dep+"]");
		
			else if(CapToRepay.equalsIgnoreCase("PCR") && sOrc.equalsIgnoreCase("Single")) res = serv.getProperty("P_Single["+stat+"]["+dep+"]");
		
			d = Double.parseDouble(res);
		}
		else
		{
			TB_GG_Report("First Load Living Expenses from Toolbox", "Fail", true);
		}
	
	
return d;
}
/**********************************************************************************************************
@doc  gets the value for Living Expense for given parrameters for an joint applicant
@author Skaur
@param CapToRepay: FCR/PCR
@param state1: Given state1
@param state2: Given state2
@param noOfDep: Given number of dependents 1 and 2
@Date  15 Oct,2012
**************************************************************************************************************/	 	
public double TB_LB_getExpLivingExpJoint(String CapToRepay,  String state1, String state2, String noOfDep1, String noOfDep2 )
{
	double d1,d2;
	int dep, dep1, dep2;

	try
	{
		dep1 = Integer.parseInt(noOfDep1);
		dep2 = Integer.parseInt(noOfDep2);
		if(dep1> dep2) dep= dep1;
		else dep = dep2;
		if(state1.equalsIgnoreCase(state2))
			return  getExpLivingExpValue(CapToRepay, "Couple", state1, dep);
		else
		{
			if(dep>0)
			{
				d1 = getExpLivingExpValue(CapToRepay, "Single", state1, dep);
				d2 = getExpLivingExpValue(CapToRepay, "Single", state2, dep);
				if(d1>d2) 
					return d1+ getExpLivingExpValue(CapToRepay, "Single", state2, 0);
				else
					return d2+ getExpLivingExpValue(CapToRepay, "Single", state1, 0);
			}
			else
				return getExpLivingExpValue(CapToRepay, "Single", state1, 0) + getExpLivingExpValue(CapToRepay, "Single", state2, 0);
		}
	}
	catch(Exception e)
	{
		e.printStackTrace();
		return 0.0;
	}	
}
/**********************************************************************************************************
@doc  gets Table refrence for Living Expense for given parrameters
@author Skaur
@return Single / Double
@param maritalStatus: Married/ De Facto
@param partnerName: Not in Application/ joint
@param empStatus: Employed/ Unemployed
@Date 9 Oct,2012
**************************************************************************************************************/	 
public String getTableRefForLE(String maritalStatus, String empStatus )
{
			if((maritalStatus.trim()).equalsIgnoreCase("Married") && empStatus.equalsIgnoreCase("Un-Employed")) 
			
				return "Couple";
			if((maritalStatus.trim()).equalsIgnoreCase("De Facto") && empStatus.equalsIgnoreCase("Un-Employed")) 
				return "Couple";
			
			else return "Single";
	
}

/**********************************************************************************************************
//needs strSearchType to be set from searchCustomer call
// needs a NA with all ticks 
@doc  Verify Living Expense calculation for all possible scenarios
@author Skaur
@param intRowid: row number from data sheet
@Date 9 Oct,2012
**************************************************************************************************************/

public boolean TB_LB_VerifyAllLivingExp(WebDriver driver, int intRowid, String capToRepay, boolean joint)
{
	//Set Data input file and row 
			String strFile=TB_GG_SetInputFile("TB_DFL_NeedAnalysisTEMP.xls");
			boolean bRes = false;
	// for calculations
			String state1, state2 = "", noOfdep1, noOfdep2= "", maritalStatus, partnerName, empStatus;
	
	//capturing javascript generated customer id
			String[] custs=new String[5];
			custs=TB_LB_GetCustomerID(driver,By.xpath(prop.getProperty("Dlst_NA_PrfContact")),intTimeOutForPaging);
			String custId=custs[0];
			
			TB_GG_Log("Customer Id for given session is:" + custId);
			if(custs.length>1) 
				{
					strCustIdJoint=custs[1];
					TB_GG_Log("Customer Id for Joint customer is:" + strCustIdJoint);
				}
	// assign local variables		
		state1 = 	TB_GG_ReadXL(intRowid, "Dlst_NA_State", strFile);
		maritalStatus = TB_GG_ReadXL(intRowid, "Dlst_NA_MaritalStatus", strFile);
		partnerName = TB_GG_ReadXL(intRowid, "Dlst_NA_PartnerName", strFile);
		empStatus =	TB_GG_ReadXL(intRowid, "DlstNA_PartnerEmp", strFile);
		noOfdep1 = TB_GG_ReadXL(intRowid, "Dlst_NA_NumDependents", strFile);
		
	TB_GG_Click(driver,By.xpath(prop.getProperty("Btn_NA_CustomerDetails")),"Customer Details");
	TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);
	
	
	//TB_GG_Wait(7000);
	//if page has not opened- click again
	if(!TB_GG_DoesWebElementExist(driver, (By.xpath(prop.getProperty("Dlst_NA_ApplicantClass")+custId+"']")), intTimeOutForPaging))
	{
		driver.findElement(By.xpath(prop.getProperty("Btn_NA_CustomerDetails"))).click();
		System.out.println("Clicked again");
		TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);
	}
	
	//TB_GG_Report("Customer Details","", true); 
	if(joint)
	{
	  // assign additional local variables for joint
		state2 = TB_GG_ReadXL(intRowid+1, "Dlst_NA_State", strFile);
		noOfdep2 = TB_GG_ReadXL(intRowid+1, "Dlst_NA_NumDependents", strFile);
		
		//fill applicant details	
			//TB_LB_CustomerDetails(driver,intRowid,strFile,"Personal",strCustId, joint);
			TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_State")+custId+"']","State",state1);
			//new Select(driver.findElement(By.id("NA_CI_CD_PartnerFullName_".concat(custId)))).selectByIndex(2);
			TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_NumDependents")+custId+"']","No of Dependents",noOfdep1);
			int idep = Integer.parseInt(TB_GG_ReadXL(intRowid, "Dlst_NA_NumDependents", strFile).trim());
			if(idep!=0)
			{	
				for( int i = 1; i<=idep; i++)
				{
					/*if(i == 1)
					{
						if(driver.findElement(By.id("NA_CI_CD_DependantOf0"+i+"_"+custId)).getAttribute("value").equals(""))
						TB_GG_Click(driver, By.xpath(prop.getProperty("Cbox_JNA_Dependents")+i+"-"+custId+"']/div[3]/div/input"), "Also Dependents of Joint");
					}
					else*/
					{
						if(driver.findElement(By.id("NA_CI_CD_DependantOf0"+i+"_"+custId)).getAttribute("value").equals(""))
							TB_GG_Click(driver, By.xpath(prop.getProperty("Cbox_JNA_Dependents")+i+strCustIdJoint+strCustId+"']"), "Linking Dependent" +i+" to Spouse");
							TB_GG_Click(driver, By.xpath(prop.getProperty("Cbox_JNA_Dependents")+i+"-"+custId+"']/div[2]/div/input"), "Also Dependents of Joint");
					}
				}	
			}
		// fill joint applicant details			
			TB_GG_Click(driver, By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint)), "Joint customer tab");
			TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_State")+strCustIdJoint+"']","State",state2);
			//new Select(driver.findElement(By.id("NA_CI_CD_PartnerFullName_".concat(strCustIdJoint)))).selectByIndex(2);
			TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_NumDependents")+strCustIdJoint+"']","No of Dependents",noOfdep2);			
			int idepJ = Integer.parseInt(TB_GG_ReadXL(intRowid+1, "Dlst_NA_NumDependents", strFile).trim());
			if(idepJ!=0)
			{	
				for( int i = 1; i<=idepJ; i++)
				{
					/*if(i == 1)
					{
						if(driver.findElement(By.id("NA_CI_CD_DependantOf0"+i+"_"+strCustIdJoint)).getAttribute("value").equals(""))
						TB_GG_Click(driver, By.xpath(prop.getProperty("Cbox_JNA_Dependents")+i+"-"+strCustIdJoint+"']/div[3]/div/input"), "Also Dependents of Joint");
						
					}	
					else*/
					{
						if(driver.findElement(By.id("NA_CI_CD_DependantOf0"+i+"_"+strCustIdJoint)).getAttribute("value").equals(""))
							TB_GG_Click(driver, By.xpath(prop.getProperty("Cbox_JNA_Dependents")+i+strCustId+strCustIdJoint+"']"), "Linking Dependent" +i+" to Spouse");
							//TB_GG_Click(driver, By.xpath(prop.getProperty("Cbox_JNA_Dependents")+i+"-"+strCustIdJoint+"']/div[2]/div/input"), "Also Dependents of Joint");
					}	
				}	
			}
					
			TB_LB_CheckGreenTick(driver,"Lb_NA_CustomerDetailsTick","Customer Details");
	}
	else
	{
		//TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_ApplicantClass")+custId+"']","Applicant class",TB_GG_ReadXL(intRowid, "Dlst_NA_ApplicantClass", strFile));
		//TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_ApplicantType")+custId+"']","Applicant type",TB_GG_ReadXL(intRowid, "Dlst_NA_ApplicantType", strFile));
		TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_State")+custId+"']","State",state1);
		//TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_RsdnStatus")+custId+"']","Residence Status",TB_GG_ReadXL(intRowid, "Dlst_NA_RsdnStatus", strFile));
		TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_MaritalStatus")+custId+"']","Marital Status",maritalStatus);
		if(TB_GG_ReadXL(intRowid,"Dlst_NA_MaritalStatus",strFile).equalsIgnoreCase("Married")||TB_GG_ReadXL(intRowid,"Dlst_NA_MaritalStatus",strFile).equalsIgnoreCase("De facto"))
		{
				TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_PartnerName")+custId+"']","Partner Name", partnerName);
				TB_GG_SelectDDListItem(driver,prop.getProperty("DlstNA_PartnerEmp")+custId+"']","Partner Emp", empStatus);
				
		}
		TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_NumDependents")+custId+"']","No of Dependents", noOfdep1);
	}
	
		//Estimated Funds To Complete
		TB_GG_Click(driver,By.xpath(prop.getProperty("Btn_NA_EstFunds")), "Estimated Funds To Complete");
		
		//PreliminaryCapacityToRepay
		TB_GG_Wait(7000);
		TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);
		//TB_GG_Click(driver, By.linkText("Preliminary Capacity To Repay"), "Customer Details");
		TB_GG_Click(driver,By.id("PreliminaryCapacityToRepayId"),"Preliminary Capacity To Repay");
		TB_GG_Wait(7000);
		TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);
		//if page not opened click again
		if(!TB_GG_DoesWebElementExist(driver, (By.id(prop.getProperty("Dlst_NA_LoanTermYearID"))), intTimeOutForPaging))
		{
			driver.findElement(By.id("PreliminaryCapacityToRepayId")).click();
			System.out.println("Clicked again");
			TB_GG_Wait(20000);
		}
		double disLivingExp = 0;
		String le = driver.findElement(By.xpath(prop.getProperty("Ed_NA_LivingExp"))).getAttribute("value");
		
		if (le!=null)
			{
				disLivingExp = TB_GG_StringToDouble(le);
				double expLivingExp;
				if(joint)
					expLivingExp = TB_LB_getExpLivingExpJoint(capToRepay, state1, state2, noOfdep1, noOfdep2);
				else
					expLivingExp = TB_LB_getExpLivingExpIndividual(capToRepay, state1, maritalStatus, empStatus, noOfdep1);
				
			//check and report
				
				if(disLivingExp==expLivingExp) 
				{
					TB_GG_Report("Expected: "+expLivingExp+" = Displayed: "+ disLivingExp, "Pass", true);
					bRes= true;
				}
				else
				{
					TB_GG_Report("Expected: "+expLivingExp+" = Displayed: "+ disLivingExp, "Fail", true);
				}
				
			}
		else
			TB_GG_Report("Current Scenario Execution", "Fail", true);
		
		
		return bRes;
}

/**********************************************************************************************************
Search customer by Opp Number from OPp Manager

@doc  created for Data Migration Testing
@author rusingh
@param intRowid: row number from data sheet
@Date 15 Oct,2012
@return true if success
**************************************************************************************************************/
	public boolean TB_LB_OppSearch(WebDriver driver, int intRowid){
	
	String strFile=TB_GG_SetInputFile("TB_DSL_OppSearch.xls");
	boolean bResult = false;
	strGivenOppNum = TB_GG_ReadXL(intRowid, "Ed_OM_OppNumber", strFile);
	String strDisOppNum = "";
	
	//	WebElement ee =driver.findElement(By.tagName("img").name("/images/ajax-loader.gif"));
	
	//System.out.println(ee);
	//TB_GG_WaitAnElementDisappears(driver,By.tagName("img").name("/images/ajax-loader.gif"),30000);
	
/*	TB_GG_Click(driver,By.xpath(prop.getProperty("Tb_Menu_OppManager")),"Opp Manager Tab");
	TB_GG_Wait(7000);
	if(! TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Dlst_OM_SearchType")), 9000))
		TB_GG_Click(driver,By.xpath(prop.getProperty("Tb_Menu_OppManager")),"Opp Manager Tab");
	TB_GG_Wait(7000);*/
	if(! TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Dlst_OM_SearchType")), 9000))
		{
		bhang=true;
		return bResult;
		}
	TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_OM_SearchType"),"Search Type","Opportunity Number");//"Trust Fund");

	TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_OM_OppNumber")),"Opp Number",strGivenOppNum);

	TB_GG_Click(driver,By.xpath(prop.getProperty("Btn_OM_Search")),"Search Opp Button");
	TB_GG_Wait(10000);
	if(TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Ed_OPP_No")), intTimeOut))
	{   
		strDisOppNum = driver.findElement(By.xpath(prop.getProperty("Ed_OPP_No"))).getText();
		
		if(strGivenOppNum.trim().equals((strDisOppNum).trim()))
			{
				bResult= true;
				TB_GG_Report("Correct Opportunity is found","Pass", true); 
				TB_GG_Click(driver,By.xpath(prop.getProperty("Img_NOR_EditOpp")),"Edit Opp Button");
				TB_GG_Wait(9000);
				if(! TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Txt_AP_Opp")), 110000))
				{
					TB_GG_Click(driver,By.xpath(prop.getProperty("Img_NOR_EditOpp")),"Edit Opp Button again");
				    TB_GG_Wait(7000);
				}
			}
		else 
		{
			TB_GG_captureScreen(driver, "SearchOpp");
			TB_GG_Report("No Opportunity is found","Fail", true);
			
		}
	
		
	}
	else
	{
		TB_GG_captureScreen(driver, "SearchOpp");
		TB_GG_Report("No Opportunity is found","Fail", true);
	}		
	
	return bResult;
	
	
	
	}
	
/**********************************************************************************************************
Update only customer mobile number

@doc  created for Data Migration Testing
@author rusingh
@param intRowid: row number from data sheet
@Date 15 Oct,2012
@return true if success
**************************************************************************************************************/
public boolean TB_LB_DMCustomerUpdate(WebDriver driver, int intRowid){
		
		String strFile=TB_GG_SetInputFile("TB_DFL_CreateCustomer.xls");
		boolean bResult = false;
		String strStepDetails="";
		String strGivenMobNumber ="";
		String strDispMobNumber ="";
		
		//String strStatus="";
		//String strSuiteStatus="";
		TB_GG_Report("Edit Customer","", true); 
		try{ 
			strStepDetails="Editing Customer Details";
			TB_GG_Log(strStepDetails);
			if(strSearchType.equalsIgnoreCase("Personal"))/////////////Personal Type Customer Search

			{
			 
				TB_GG_Click(driver,By.xpath(prop.getProperty("Btn_ECP_Edit")),"Edit Personal Customer");
				TB_GG_SwitchToIframe(driver,prop.getProperty("Frm_AllNewframes"));
		
				TB_GG_Wait(7000);
				//TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_CSP_MobArea")), "Mob Area Code", TB_GG_ReadXL(intRowid,"Ed_CSP_MobArea",strFile));
				driver.findElement(By.xpath(prop.getProperty("Ed_CSP_MobArea"))).clear();
				driver.findElement(By.xpath(prop.getProperty("Ed_CSP_MobArea"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_CSP_MobArea",strFile));

				TB_GG_Wait();
				
				driver.findElement(By.xpath(prop.getProperty("Ed_CSP_MobNum"))).clear();
				driver.findElement(By.xpath(prop.getProperty("Ed_CSP_MobNum"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_CSP_MobNum",strFile));
				
				//TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_CSP_MobNum")), "Mob Number", TB_GG_ReadXL(intRowid,"Ed_CSP_MobNum",strFile));
				//driver.findElement(By.xpath(prop.getProperty("Ed_CSP_MobArea"))).clear();
				TB_GG_Wait();
				//TB_GG_Report("Enter Mobile Area Code "+TB_GG_ReadXL(intRowid,"Ed_CSP_MobArea",strFile), "Pass", true);
				driver.findElement(By.xpath(prop.getProperty("Ed_CSP_MobArea"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_CSP_MobArea",strFile));

			/*	driver.findElement(By.xpath(prop.getProperty("Ed_CSP_MobNum"))).clear();
				driver.findElement(By.xpath(prop.getProperty("Ed_CSP_MobNum"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_CSP_MobNum",strFile));
				*/
				//if(bDataMigration)
				//	strGivenMobNumber = TB_GG_ReadXL(intRowid,"Ed_CSP_MobArea",strFile)+TB_GG_ReadXL(intRowid,"Ed_CSP_MobNum",strFile);
				//else
					strGivenMobNumber = TB_GG_ReadXL(intRowid,"Ed_CSP_MobArea",strFile) + "-" + TB_GG_ReadXL(intRowid,"Ed_CSP_MobNum",strFile);
				
			}
			else if(strSearchType.equalsIgnoreCase("Company"))
				{
				 	
				TB_GG_Click(driver,By.xpath(prop.getProperty("Btn_ECC_Edit")),"Edit Comapany Customer");
				 	TB_GG_SwitchToIframe(driver,prop.getProperty("Frm_AllNewframes"));
				 	
					TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_CSC_OfficeArea")), "Office Area Code", TB_GG_ReadXL(intRowid,"Ed_CSC_OfficeArea",strFile));

			//	 	driver.findElement(By.xpath(prop.getProperty("Ed_CSC_OfficeArea"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_CSC_OfficeArea",strFile));
					
					TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_CSC_OfficePhone")), "Office Number", TB_GG_ReadXL(intRowid,"Ed_CSC_OfficePhone",strFile));

					
				/*	driver.findElement(By.xpath(prop.getProperty("Ed_CSC_OfficePhone"))).clear();
					driver.findElement(By.xpath(prop.getProperty("Ed_CSC_OfficePhone"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_CSC_OfficePhone",strFile));
					*/
					//if(bDataMigration)
					//	strGivenMobNumber = TB_GG_ReadXL(intRowid,"Ed_CSC_OfficeArea",strFile)+TB_GG_ReadXL(intRowid,"Ed_CSC_OfficePhone",strFile);
					//else
					strGivenMobNumber = TB_GG_ReadXL(intRowid,"Ed_CSC_OfficeArea",strFile) + "-" + TB_GG_ReadXL(intRowid,"Ed_CSC_OfficePhone",strFile);
					
				}
			
			driver.findElement(By.xpath(prop.getProperty("Btn_Save"))).sendKeys(Keys.ENTER);
		    driver.switchTo().defaultContent();
			TB_GG_Wait(10000);
			TB_GG_captureScreen(driver, "Update_Customer");
			if(strSearchType.equalsIgnoreCase("Personal"))
			{
				TB_GG_WaitAnElementPresent(driver, By.xpath(prop.getProperty("Txt_ECP_MobNum")), 30000);
				strDispMobNumber = driver.findElement(By.xpath(prop.getProperty("Txt_ECP_MobNum"))).getText();
			}
			else if(strSearchType.equalsIgnoreCase("Company")){
			
				TB_GG_WaitAnElementPresent(driver, By.xpath(prop.getProperty("Txt_ECC_PhoneNum")), 30000);	
			strDispMobNumber = driver.findElement(By.xpath(prop.getProperty("Txt_ECC_PhoneNum"))).getText();
			}
			System.out.println(strGivenMobNumber);
			System.out.println(strDispMobNumber);
			System.out.println("finish");
			
			if(TB_LB_VerifyCustomer(strDispMobNumber, strGivenMobNumber))
				{
					bResult=true;
					TB_GG_Report("Customer Updated successfully", "Pass", true);
				}
			else
				TB_GG_Report("Customer is not Update", "Fail", true);
			
		}
		catch(Exception ex)
		{
            TB_GG_Log("Got an exception! "+ ex.getMessage().toString());
            
		}
		return bResult;
		
	}

/**********************************************************************************************************
Edit the Active Needs Analysis and update English speaking Ability in Meeting Details

@doc  created for Data Migration Testing
@author rusingh
@param intRowid: row number from data sheet
@Date 16 Oct,2012
@return true if success
**************************************************************************************************************/

public boolean TB_LB_NAMigration(WebDriver driver){
	
	boolean bResult=false;
	
	TB_LB_EditNA(driver);
	//driver.findElement(By.xpath(prop.getProperty("Lb_NA_MeetingDetailsTick"))).click();
	TB_GG_Wait();
	if(TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_NA_EnglishAbility"),"English ability","Non English Speaking - Interpreter Required"))//"English Speaking");
		bResult=true;
	
	TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_NA_BackToOpp")), "Back To Opp Page Button");
	
	
return bResult;
}
/**********************************************************************************************************
@doc  Calculate Monthly Gross Income
@author rusingh
@param instance of method which saves the required data from Needs 
@Date  28 Oct,2012
@return Annual Gross Income in double
**************************************************************************************************************/
public double TB_LB_CalGrossIncome( BusinessGlobalFunctions bg){
	
	double dMonGrossIncomeCal = 0;
	double dAnnGrossIncome = 0;
	double dMonGrossTaxableIncome = 0;
	
	dMonGrossIncomeCal = TB_GG_StringToDouble(bg.occupationAndIncome.get("BaseSalary")) + TB_GG_StringToDouble( bg.occupationAndIncome.get("OverTime")) + 
			TB_GG_StringToDouble(bg.occupationAndIncome.get("CommissionsBonus")) + TB_GG_StringToDouble(bg.occupationAndIncome.get("CompOwned"))/100 * 
			TB_GG_StringToDouble(bg.occupationAndIncome.get("AverageIncome"))/12+	TB_GG_StringToDouble(bg.occupationAndIncome.get("Investments")) +
			TB_GG_StringToDouble(bg.occupationAndIncome.get("SSGovPension")) + TB_GG_StringToDouble(bg.occupationAndIncome.get("FamilyAllowance")) +
			TB_GG_StringToDouble(bg.occupationAndIncome.get("PropRentIncome")) + TB_GG_StringToDouble(bg.assetsAndLiab.get("CurrentGrossRentalIncome1"))*TB_GG_StringToDouble(bgf.assetsAndLiab.get("AssPercentage1"))/100;
	
	dMonGrossTaxableIncome = TB_GG_StringToDouble(bg.occupationAndIncome.get("BaseSalary")) + TB_GG_StringToDouble( bg.occupationAndIncome.get("OverTime")) + 
			TB_GG_StringToDouble(bg.occupationAndIncome.get("CommissionsBonus")) + TB_GG_StringToDouble(bg.occupationAndIncome.get("CompOwned"))/100 * 
			TB_GG_StringToDouble(bg.occupationAndIncome.get("AverageIncome"))/12+	TB_GG_StringToDouble(bg.occupationAndIncome.get("Investments")) ;
	
	dAnnGrossTaxableIncome = dMonGrossTaxableIncome *12;
	dAnnGrossIncome = TB_GG_StringToDouble(df.format(dMonGrossIncomeCal*12));
	

	
	return dAnnGrossIncome;
}
/**********************************************************************************************************
@doc  Apply tax band on the annual gross income
@author rusingh
@param Annual Gross Income
@Date  28 Oct,2012
@return Tax deductable
**************************************************************************************************************/

public double TB_LB_CalTaxPayable(double dAnnGIncome){
	
	double dTaxPayable=0;
	
	if(0<=dAnnGIncome && dAnnGIncome<=18200)//Range from 0-18200
		return dTaxPayable;
	
	else if(18201 <=dAnnGIncome && dAnnGIncome<=37000)//Range from 18201-37000
	{
		dTaxPayable = (dAnnGIncome - 18200)*19/100;
		return dTaxPayable;
	}
	
	else if(37001 <=dAnnGIncome && dAnnGIncome<=80000)//Range from 37001-80000
	{
		dTaxPayable = ((dAnnGIncome - 37000)*32.5/100) + 3572;
		return dTaxPayable;
	}

	else if(80001 <=dAnnGIncome && dAnnGIncome<=180000)//Range from 80001-180000
	{
		dTaxPayable = ((dAnnGIncome - 80000)*37/100) + 17547;
		return dTaxPayable;
	}
	
	else if(180001 <=dAnnGIncome )//Range from 180001-Upwards
	{
		dTaxPayable = ((dAnnGIncome - 180000)*45/100) + 54547;
		return dTaxPayable;
	}
	return dTaxPayable;	
}
/**********************************************************************************************************
@doc  Apply Medicare Levy on annual gross income
@author rusingh
@param Annaul Gross Income
@Date  28 Oct,2012
@return Deductable Medicare
**************************************************************************************************************/

public double TB_LB_CalMedicareLevy(double dAnnGIncome){
	
	double dMLevyPayable=0;
	
	if(0<=dAnnGIncome && dAnnGIncome<=19404)//Range from 0-19404
		return dMLevyPayable;
	
	else if(19405 <=dAnnGIncome && dAnnGIncome<=22829)//Range from 19405-22829
	{
		dMLevyPayable = (dAnnGIncome - 19405)*10/100;
		return dMLevyPayable;
	}

	else if(22830 <=dAnnGIncome)//Range from 22830-Upwards
	{
		dMLevyPayable = (dAnnGIncome*1.5)/100 ;
		return dMLevyPayable;
	}
		
	return dMLevyPayable;	
}
/**********************************************************************************************************
@doc  Calculate Monthly Net Income
@author rusingh
@param Annual Gross Income
@Date  28 Oct,2012
@return Net Monthly Income
**************************************************************************************************************/

public double TB_LB_CalNetMonthlyInc(double dAnnGIncome)
{
	double dSumTaxMedLevy = TB_LB_CalMedicareLevy(dAnnGIncome) + TB_LB_CalTaxPayable(dAnnGIncome);
	double dMonNetIncomeCal=0;

	dMonNetIncomeCal = (dAnnGIncome - dSumTaxMedLevy)/12 ; //divide by 12 for converting in monthly
	return dMonNetIncomeCal;
}

 public boolean TB_LB_AppPipeline(WebDriver driver, int intRowid) 
 {
	 String strFile=TB_GG_SetInputFile("TB_DSL_AppOpp.xls");
	boolean bResult = false;
	String strDisOppNum = "";
	String pageTitle = driver.getTitle();
	assertEquals("Current page title", "Aussie Toolbox | Customer Search", pageTitle);
	strGivenOppNum = TB_GG_ReadXL(intRowid, "Ed_OM_OppNumber", strFile);
	driver.navigate().to("http://t1staff.test.ahlad.priv/pipeline");
	//TB_GG_Click(driver, By.xpath(prop.getProperty("Lnk_HP_BusiPipeline")), "Business Pipeline");
	TB_GG_WaitAnElementPresent(driver, By.xpath(prop.getProperty("Dlst_OM_SearchType")), 50000);
	TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_OM_SearchType"), "Search type", "Opportunity Number");
	TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_OM_OppNumber")),"Search Value", strGivenOppNum);
	TB_GG_ClickFast(driver, By.xpath(prop.getProperty("Btn_OM_Search")),"Search");
	TB_GG_Wait(15000);
	if(TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Lb_SubOPP_Details")), 50000))
	{   
		strDisOppNum = TB_GG_FindElement(driver, By.xpath(prop.getProperty("Lb_SubOpp_No")), 10000).getText();
		
		if(strGivenOppNum.trim().equals((strDisOppNum).trim()))
			{
				bResult= true;
				boolean b;
				TB_GG_Report("Opportunity found with No: "+strDisOppNum,"Pass", true); 
				b = TB_GG_ClickFast(driver,By.xpath(prop.getProperty("Img_SubOpp_editOpp")),"Edit Opp Button");
				if(b) 
					{
						try
						{
							TB_GG_WaitAnElementPresent(driver, By.xpath(prop.getProperty("Btn_SubOpp_Back")), 30000);
						}
						catch(NullPointerException ne)
						{
							TB_GG_Report("Fail to edit opportunity to add note", "Fail", true);
							
						}
					}
				else
					TB_GG_Report("Fail to edit opportunity to add note", "Fail", true);
			}
		
			
		else 
			TB_GG_Report("No Opportunity is found","Fail", true); 
	
		
	}
	else
	TB_GG_Report("No Opportunity is found","Fail", true);
	
	return bResult;
	
 }
 /**********************************************************************************************************
 @doc Adds note to application for given opportunity number
 @author Skaur
 @return Single / Double
 @param maritalStatus: Married/ De Facto
 @param partnerName: Not in Application/ joint
 @param empStatus: Employed/ Unemployed
 @Date 9 Oct,2012
 **************************************************************************************************************/	 

 public boolean TB_LB_AddApplicationNote(WebDriver driver, String oppNo){
 	
 	boolean bResult=false;
 	//String strOpp = "";
 	TB_GG_Report("Add Opportunity Note","", true); 
 	try{
 		String title = TB_GG_FindElement(driver, By.xpath(prop.getProperty("Lb_NOR_OppManager")), 10000).getText();
 		if(title.equals("APPLICATION PROGRESS"))    
 		{
 			//strOpp=  driver.findElement(By.xpath(prop.getProperty("Txt_AP_Opp"))).getText();
 		   //if(strOpp .equals(oppNo))
 		   {
 		    	
 		    	TB_GG_ClickFast(driver, By.xpath(prop.getProperty("Btn_AP_AddOppNotes")), "Add Note Button");
 		    
 				TB_GG_SwitchToIframe(driver, prop.getProperty("Frm_NoteFrame"));
 				TB_GG_Wait(8000);
 				
 				driver.findElement(By.xpath(prop.getProperty("Ed_NT_NoteArea"))).click();
 				driver.findElement(By.xpath(prop.getProperty("Ed_NT_NoteArea"))).sendKeys("Selenium - Application Migration Test");
 				
 				TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_NT_SubmitNote")), "Save Note Button");
 				driver.switchTo().defaultContent();
 				TB_GG_WaitAnElementPresent(driver, By.xpath(prop.getProperty("Txt_NT_Dispalyed")),10000);
 				TB_GG_Wait(10000);
 				if(TB_GG_FindElement(driver, By.xpath(prop.getProperty("Txt_NT_Dispalyed")),6000).getText().equalsIgnoreCase("Selenium - Application Migration Test"))
 					bResult=true;
 				if(bResult)
 					TB_GG_Report("Successfully Added Note to Opportunity "+oppNo, "Pass", true);
 				else
 					TB_GG_Report("Fail to Add Note to Opportunity "+oppNo, "Fail", true);
 		    }
 		} 
 		}
 		catch(Exception ee)
 		{
 			TB_GG_captureScreen(driver, "AddNoteEX");
 			ee.printStackTrace();
 			TB_GG_Log("Got an exception! "+ ee.getMessage().toString());
 		}
 	return bResult;
 	
 }
 public String TB_LB_DMLogin(WebDriver driver,int intRowid)
	{
		
		String strFile=TB_GG_SetInputFile("TB_DFL_DMLogin.xls");
		//int intRowid=TB_GG_GetExecutionRow();
		String strResult = "";
		String strTitle="";
		String strLogInfo="Login";
		TB_GG_Log(strLogInfo);
		TB_GG_Report(strLogInfo, "", true);
		try
			{
			String usName = TB_GG_ReadXL(intRowid,"Ed_LG_Username",strFile);
			driver.findElement(By.xpath(prop.getProperty("Ed_LG_Username"))).sendKeys(usName);
					
			driver.findElement(By.xpath(prop.getProperty("Ed_LG_Password"))).sendKeys(TB_GG_ReadXL(intRowid,"Ed_LG_Password",strFile));
					
			driver.findElement(By.xpath(prop.getProperty("Btn_LG_Login"))).click();
			TB_GG_Wait(5000);
			strTitle=driver.getTitle();
		
		
			if(strTitle.equalsIgnoreCase("Aussie Toolbox | Customer Search"))
				{
					strResult="Pass";
					strLogInfo = usName+ ": Logged in successfully";
				}
			else if(TB_GG_DoesWebElementExist(driver,By.xpath(prop.getProperty("Txt_LG_LoginError")),intTimeOutForPaging))
				{
					strResult="Fail";
					strLogInfo ="Invalid Login Details"; 
							
				}
			else 
			   {
				strResult="Fail";
				strLogInfo ="Cannot Login to the ToolBox"; 
			   }
				
				
			TB_GG_Log(strLogInfo);
			TB_GG_Report(strLogInfo, strResult, true);
			
			}
			catch(Exception ex)
			{
	            TB_GG_Log("Got an exception! "+ ex.getMessage().toString());
	            
			}
			return strResult;
	}

public void TB_LB_LoadNegativeGearing(WebDriver driver)
{
	TB_LB_Login(driver,7); // login as admin
	
	TB_GG_Report("Load Negative Gearing Configuration", "", true);
	
	TB_GG_Click(driver, By.xpath(prop.getProperty("Tb_Menu_Maintenance")), "Maintenance Tab");
	
	//Data Capturing for Existing Investment Loan
	
	if(TB_GG_getSelectedOption(driver.findElement(By.xpath(prop.getProperty("Dlst_P_Neg_RateCriteria")))).equalsIgnoreCase("Use Rate Captured within the Application"))
		dNegVariance = TB_GG_StringToDouble(driver.findElement(By.xpath(prop.getProperty("Lb_P_Neg_Variance"))).getAttribute("value"));
	else 
		dFinalExistingRate = TB_GG_StringToDouble(driver.findElement(By.xpath(prop.getProperty("Txt_P_Neg_ExistingFinalRate"))).getAttribute("value"));
	
	if(TB_GG_getSelectedOption(driver.findElement(By.xpath(prop.getProperty("Dlst_P_Neg_ApplyRate")))).equalsIgnoreCase("Outstanding Balance"))
	bOutstandingBalance = true;
	
	else if(TB_GG_getSelectedOption(driver.findElement(By.xpath(prop.getProperty("Dlst_P_Neg_ApplyRate")))).equalsIgnoreCase("Original Amount"))
		bOriginalAmount = true;
	
	//Data Capturing for Proposed Investment Loans
	
	if(TB_GG_getSelectedOption(driver.findElement(By.xpath(prop.getProperty("Dlst_P_Neg_PropRateCriteria")))).equalsIgnoreCase("Use Rate Captured within the Application"))
		dNegPropVariance = TB_GG_StringToDouble(driver.findElement(By.xpath(prop.getProperty("Lb_P_Neg_PropVariance"))).getAttribute("value"));
	else 
		dFinalPropRate = TB_GG_StringToDouble(driver.findElement(By.xpath(prop.getProperty("Txt_P_Neg_ExistingFinalRate"))).getAttribute("value"));
	
	
	
}

public double TB_LB_CalNegGearingGrsIncome( BusinessGlobalFunctions bg)

{
	double dMonGrossNegIncomeCal = 0;
	double dAnnGrossIncome = 0;
	double dMonGrossNegTaxableIncome = 0;
	dMonGrossNegIncomeCal = TB_GG_StringToDouble(bgf.occupationAndIncome.get("BaseSalary"))*dBaseSalaryAcc + TB_GG_StringToDouble( bg.occupationAndIncome.get("OverTime")) *dOverTimeAcc+ 
			TB_GG_StringToDouble(bg.occupationAndIncome.get("CommissionsBonus"))*dBonusAcc + TB_GG_StringToDouble(bg.occupationAndIncome.get("CompOwned")) * 
			TB_GG_StringToDouble(bg.occupationAndIncome.get("AverageIncome"))/12*dAvgSelfIncAcc+	TB_GG_StringToDouble(bg.occupationAndIncome.get("Investments"))*dInvestmentsAcc +
			TB_GG_StringToDouble(bg.occupationAndIncome.get("SSGovPension"))*dGovPenAcc + TB_GG_StringToDouble(bg.occupationAndIncome.get("FamilyAllowance"))*dFAAcc +
			TB_GG_StringToDouble(bg.occupationAndIncome.get("PropRentIncome"))*dPropRentIncAcc + TB_GG_StringToDouble(bg.assetsAndLiab.get("GrossRentalIncome"))*TB_GG_StringToDouble(bgf.assetsAndLiab.get("AssPercentage"))/100*dGrsrentIncAcc ;
	
	dMonGrossNegTaxableIncome = TB_GG_StringToDouble(bgf.occupationAndIncome.get("BaseSalary"))* dBaseSalaryAcc*dBaseSalaryTax+ TB_GG_StringToDouble( bg.occupationAndIncome.get("OverTime"))*dOverTimeAcc*dOverTimeTax + 
			TB_GG_StringToDouble(bg.occupationAndIncome.get("CommissionsBonus"))*dBonusAcc*dBonusTax + TB_GG_StringToDouble(bg.occupationAndIncome.get("CompOwned")) * 
			TB_GG_StringToDouble(bg.occupationAndIncome.get("AverageIncome"))/12*dAvgSelfIncAcc*dAvgSelfIncTax+	TB_GG_StringToDouble(bg.occupationAndIncome.get("Investments"))*dInvestmentsAcc*dInvestmentsTax ;
	
	dAnnGrossTaxableIncome = dMonGrossNegTaxableIncome *12;
	dAnnGrossIncome = TB_GG_StringToDouble(df.format(dMonGrossNegIncomeCal*12));
	
	return dAnnGrossTaxableIncome;
	

}
/**********************************************************************************************************
@doc Calculate Monthly Reoayment 
@author rusingh
@param 
@Date  07 Nov,2012
@return 
**************************************************************************************************************/


public double TB_LB_CalAssMonRepayment(String strAsRate,String strRepayType,String strLTerm )

{
	double dMonthlyRepay=0;
	
	double dDin=0;
	double dMonRate=0;
	double dLoanAmount=0;
	DecimalFormat df1 = new DecimalFormat("#.####");
	dLoanAmount = TB_GG_StringToDouble(bgf.meetingDetails.get("TotLaonAmount"));
	dMonRate =  (TB_GG_StringToDouble(strAsRate));
	//dMonRate = Double.parseDouble(df1.format(dMonRate));//Math.round(dMonRate* 1000) / 1000;
	
	if(strRepayType.equalsIgnoreCase("Interest Only"))
		dMonthlyRepay=Double.parseDouble(df.format(( dLoanAmount *dMonRate)/(100*12)));
	 else 
		 {
		
		 dDin= ( dLoanAmount *dMonRate)/(100*12)/(1-1/Math.pow((1+dMonRate/1200), (TB_GG_StringToDouble(strLTerm)*12)));
		 dMonthlyRepay =Double.parseDouble(df.format(dDin));
	    }
	return dMonthlyRepay;
}
/**********************************************************************************************************
@doc  Calculate Monthly Gross Income
@author rusingh
@param
@Date  08 Nov,2012
@return 
**************************************************************************************************************/

public boolean TB_LB_FinalCapacityToRepay(WebDriver driver )
{ 
	TB_GG_Report("Final Capacity To Repay","", true); 
	boolean bResult=false;
	TB_GG_Click(driver, By.linkText("Final Capacity To Repay"), "Final Capacity To Repay");
	TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);
	if(TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Ed_APP_SurplusInc")), 7000))
	{
			String si = driver.findElement(By.xpath(prop.getProperty("Ed_APP_SurplusInc"))).getAttribute("value");
			double disSI =  TB_GG_StringToDouble(si);
			String incomeAssessed = driver.findElement(By.xpath(prop.getProperty("Ed_APP_AssPurInc"))).getAttribute("value");
			String ongoingMExp= driver.findElement(By.xpath(prop.getProperty("Ed_APP_OngMonExpenses"))).getAttribute("value");
			
			//Get Assessmnet Rate to Calculate Monthly Repaymnet
			String strAssRate = driver.findElement(By.xpath(prop.getProperty("Ed_APP_AssRate"))).getAttribute("value");
		
			String livingExp = driver.findElement(By.xpath(prop.getProperty("Ed_APP_TotMonLivExp"))).getAttribute("value");
			String loanRepay = driver.findElement(By.xpath(prop.getProperty("Ed_APP_LoanRepay"))).getAttribute("value");
			String res ="";
	//////// LIVING EXPENSES TEST
			double disLivingExp = TB_GG_StringToDouble(livingExp);
			double expLivingExp =0.0;
			if(TB_GG_VerifyExecution("TB_BP_LoadLivingExp_Serviceability"))
			{
				if(!bgf.customerDetails.get("ApplicantClass").equalsIgnoreCase("Individual"))
					expLivingExp = TB_LB_getExpLivingExpJoint("FCR", bgf.customerDetails.get("State"), bgfJoint.customerDetails.get("State"), bgf.customerDetails.get("NumDependents"), bgfJoint.customerDetails.get("NumDependents"));
				else
					expLivingExp = TB_LB_getExpLivingExpIndividual("FCR",  bgf.customerDetails.get("State"), bgf.customerDetails.get("MaritalStatus"),bgf.customerDetails.get("PartnerEmp"), bgf.customerDetails.get("NumDependents"));
				//check and report
					res ="Expected Living Expenses: "+expLivingExp+" = Displayed Living Expenses: "+ disLivingExp;
					if(disLivingExp==expLivingExp) 
					{
						TB_GG_Report(res, "Pass", true);
						TB_GG_Log(res);
						
					}
					else
					{
						TB_GG_Report(res, "Fail", true);
						TB_GG_Log(res);
					}
				}
				else
				{
					TB_GG_Report("You haven't loaded Living Expenses form toolbox for expected values", "Pass", true);
				}
			/////////////////////  
			//Calculate Surplus Income
			double expSI = TB_LB_SurplusIncome(incomeAssessed,ongoingMExp, livingExp, loanRepay);
			
			res = "Displayed Surplus Income: "+ disSI +" = Expected Surplus Income: "+expSI;
			if(disSI == expSI)
			{
				TB_GG_Report(res + "in FCR", "Pass", true );
				bResult=true;
				TB_GG_Log(res);
			}
			else
			{
				TB_GG_Report(res, "Fail", true );
				bResult=false;
				TB_GG_Log(res);
			}
			System.out.println(res);
		///// Calculate Total Net &Gross  Income  Test
			double dGrInc1 = TB_LB_CalGrossIncome( bgf);
			double dNetInc1 = TB_LB_CalNetMonthlyInc( dAnnGrossTaxableIncome) + (dGrInc1/12 - dAnnGrossTaxableIncome/12);
			double dGrInc2 = 0;
			double dNetInc2 =0;
			
			if(!strCustIdJoint.isEmpty())
			{
				if(! bgfJoint.customerDetails.get("ApplicantType").equalsIgnoreCase("Guarantor"))
				{
					 dGrInc2 = TB_LB_CalGrossIncome( bgfJoint);
					 dNetInc2 = TB_LB_CalNetMonthlyInc( dAnnGrossTaxableIncome) + (dGrInc2/12 - dAnnGrossTaxableIncome/12);
				}
			}
			dTotalNetIncome = dNetInc1+ dNetInc2;
			dTotalGrossIncome = (dGrInc1 + dGrInc2)/12;
			
			
			double dMonNetIncomeDis = TB_GG_StringToDouble(driver.findElement(By.xpath(prop.getProperty("Ed_APP_NetMonInc"))).getAttribute("value"));
		
			System.out.println("Total Net Income is Dispalyed  :"+ dMonNetIncomeDis+ " Expected : " + (double)Math.round(dTotalNetIncome* 100) / 100);
			if(((double)Math.round(dTotalNetIncome* 100) / 100) ==((double)Math.round(dMonNetIncomeDis* 100) / 100)) //Format and round about by two decimal place
			{
				//if(df.format(dTotalNetIncome).equals(df.format(dMonNetIncomeDis)))
				TB_GG_Report("Correct Total Net Income is Dispalyed in FCR Actual :"+ dMonNetIncomeDis+ " Expected : " + (double)Math.round(dTotalNetIncome* 100) / 100 , "Pass", true);
				bResult=true;
			}
			else
			{
				 TB_GG_Report("Incorrect Total Net Income is Dispalyed in FCR Actual :"+ dMonNetIncomeDis+ " Expected : " + (double)Math.round(dTotalNetIncome* 100) / 100, "Fail", true);
				 bResult=false;
			}
			
			
		
			///  Total Gross Income Income
		
			double	dMonGrossIncomeDisp = TB_GG_StringToDouble(driver.findElement(By.xpath(prop.getProperty("Ed_APP_GrsMonInc"))).getAttribute("value"));
			
			System.out.println("Total Gross Income in FCR is Dispalyed  :"+ dMonGrossIncomeDisp+ " Expected : " + dTotalGrossIncome);
			
			if(((double)Math.round(dTotalGrossIncome* 100) / 100) ==((double)Math.round(dMonGrossIncomeDisp* 100) / 100))
			{
				//if(df.format(dTotalGrossIncome).equals(df.format(dMonGrossIncomeDisp)))
					TB_GG_Report("Correct Total Gross Income is Dispalyed in FCR Actual :"+ dMonGrossIncomeDisp+ " Expected : " + (double)Math.round(dTotalGrossIncome* 100) / 100, "Pass", true);
					bResult=true;
			}
			else
			{
				TB_GG_Report("Incorrect Total Gross Income is Dispalyed in FCR Actual :"+ dMonGrossIncomeDisp+ " Expected : " + (double)Math.round(dTotalGrossIncome* 100) / 100, "Fail", true);
				bResult=false;
			}
			 //Calculate Monthly Repayment
			
			double drepay= TB_LB_CalAssMonRepayment( strAssRate, strRepaymentType, strLoanTerm );
			if(drepay==TB_GG_StringToDouble(loanRepay))
			{
				TB_GG_Report("Correct  Monthly Repayment in FCR Actual :"+ loanRepay+ " Expected : " + drepay, "Pass", true);
				bResult=true;
			}
			else
			{
				TB_GG_Report("Incorrect Monthly Repayment in FCR Actual :"+ loanRepay+ " Expected : " + drepay, "Fail", true);
				bResult=false;
			}
			
			System.out.println("Monthly Repayment Actual :"+ loanRepay+ " Expected : " + drepay);
	}
	else TB_GG_Report("Final Capacity to Repay Tab is disable","Fail",true);
			return bResult;
}
/**********************************************************************************************************
@doc  Joint Customer Information
@author rusingh
@param driver & Data row
@Date  20 Nov,2012
@return true if successful
**************************************************************************************************************/

public boolean TB_LB_CustomerInformationAppJoint(WebDriver driver, int intRowid)
{
	        //Set Data input file and row 
			String strFile=TB_GG_SetInputFile("TB_DFL_NeedAnalysisXML.xls");
	//bMixed=true;
			String strStepdetail="";
			String strResult="";
			boolean clickPen=false;
			TB_GG_Report("Customer Information In ApplicationJoint","", true); 
			System.out.println("Application Form opened");
			TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);
			String[] custs=new String[5];
			Actions action = new Actions(driver); 	
			//capturing javascript generated customer id
			TB_GG_WaitAnElementPresent(driver, By.xpath( prop.getProperty("Dlst_APP_PreferredContact")), 20000);
			custs=TB_LB_GetCustomerID(driver,By.xpath(prop.getProperty("Dlst_APP_PreferredContact")),intTimeOutForPaging);
			strCustId=custs[0];
			TB_GG_Log("Customer Id for given session is:" + strCustId);
			if(custs.length>1) 
				{
					strCustIdJoint=custs[1];
					TB_GG_Log("Customer Id for Joint customer is:" + strCustIdJoint);
				}
			else
				strCustIdJoint="";
			//
			
			if(!(TB_GG_FindElement(driver, By.xpath(prop.getProperty("Lb_APP_leftMenu")),10000).getAttribute("class")).equals("menu-inactive"))
			{
				
	
				
	//Customer Details From
				//driver.findElement(By.xpath("(//a[contains(text(),'Customer Details')])[2]")).click();
				TB_GG_Click(driver,By.xpath(prop.getProperty("Lb_APP_leftMenuCD")),"Customer Details");
				TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);
				if(strSearchType.equalsIgnoreCase("Personal"))
				{
					 if( ! driver.findElement(By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustId))).getAttribute("class").equalsIgnoreCase("ui-tabs-selected"))
		 					TB_GG_Click(driver, By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustId)), "Tab of Next customer");
					TB_GG_WaitAnElementPresent(driver, By.xpath( prop.getProperty("Dlst_APP_AddressType")+strCustId+"']"), 20000);
					boolean c = TB_GG_Click(driver, By.className("edit_"+strCustId),"Edit address");
					if(!c) c = TB_GG_Click(driver, By.cssSelector("a.edit.edit_"+strCustId),"Edit address");
					if(!c) TB_GG_Click(driver, By.xpath(prop.getProperty("Img_APP_EditAdd")+strCustId+"']/fieldset[3]/ul/li[7]/div/table/tbody/tr[1]/td[4]/a[2]"), "Edit");
					
					TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_APP_LivingTerm")+strCustId+"']", "Living Term",TB_GG_ReadXL(intRowid, "Dlst_NA_LivingTerm", strFile));
					TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_APP_AddressType")+strCustId+"']", "Address Type","Current");
					TB_GG_Wait(7000);//driver.findElement(By.cssSelector("a.edit.edit_"+strCustId)).click();
					TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),15000);
					//new Select(driver.findElement(By.xpath(prop.getProperty("Dlst_APP_ExistingAddress")+strCustId+"']"))).selectByIndex(1);
					TB_GG_FindElement(driver, By.xpath(prop.getProperty("Cb_APP_ExistingBankingCustomerNo")+strCustId+"-2']"),5000).click();
					TB_GG_FindElement(driver, By.xpath(prop.getProperty("Cb_APP_CustomerHaveABN")+strCustId+"-2']"), 5000).click();
					TB_GG_FindElement(driver, By.xpath(prop.getProperty("Cb_APP_HaveDriversLicence")+strCustId+"-1']"), 5000).click();
					TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_APP_LicenceIssuingState")+strCustId+"']", "Licence Issuing State","Australian Capital Territory");
					TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APP_LicenceNumber")+strCustId+"']"), "Licence Number", "79 875 985 603");
					 WebElement calendar=driver.findElement(By.xpath(prop.getProperty("Ed_APP_LicenceExpiryDate")+strCustId+"']"));
		             calendar.clear();
		             calendar.sendKeys("09/09/2016");
		             TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_APP_CD_Save")+strCustId+"']"), "Save Details");	
					 TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),60000);

		             if(strCustIdJoint != "" && !bMixed)///For Joint Customer
		             {
		            	 if( ! driver.findElement(By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint))).getAttribute("class").equalsIgnoreCase("ui-tabs-selected"))
		 					TB_GG_Click(driver, By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint)), "Tab of Next customer");
		            	
		 				//driver.findElement(By.cssSelector("a.edit.edit_"+strCustId)).click();
		            	boolean c1 = TB_GG_Click(driver, By.className("edit_"+strCustIdJoint),"Edit address");
		 				if(!c1) c1 = TB_GG_Click(driver, By.cssSelector("a.edit.edit_"+strCustIdJoint),"Edit address");
		 				if(!c1) TB_GG_Click(driver, By.xpath(prop.getProperty("Img_APP_EditAdd")+strCustIdJoint+"']/fieldset[3]/ul/li[7]/div/table/tbody/tr[1]/td[4]/a[2]"), "Edit");
		 				TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),15000);
		 				TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_APP_LivingTerm")+strCustIdJoint+"']", "Living Term",TB_GG_ReadXL(intRowid, "Dlst_NA_LivingTerm", strFile));
		 				TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_APP_AddressType")+strCustIdJoint+"']", "Address Type","Current");
		 				TB_GG_FindElement(driver, By.xpath(prop.getProperty("Cb_APP_ExistingBankingCustomerNo")+strCustIdJoint+"-2']"),5000).click();
		 				TB_GG_FindElement(driver, By.xpath(prop.getProperty("Cb_APP_CustomerHaveABN")+strCustIdJoint+"-2']"), 5000).click();
		 				TB_GG_FindElement(driver, By.xpath(prop.getProperty("Cb_APP_HaveDriversLicence")+strCustIdJoint+"-1']"), 5000).click();
		 				TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_APP_LicenceIssuingState")+strCustIdJoint+"']", "Licence Issuing State","New South Wales");
		 				TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APP_LicenceNumber")+strCustIdJoint+"']"), "Licence Number", "21 892 654 633");
		 				 WebElement calendar1=driver.findElement(By.xpath(prop.getProperty("Ed_APP_LicenceExpiryDate")+strCustIdJoint+"']"));
		 	             calendar1.clear();
		 	             calendar1.sendKeys("09/09/2016");	
		 	            TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_APP_CD_Save")+strCustIdJoint+"']"), "Save Details");	
		             }
					if(bMixed)//company customer deatils with joint custID
						
					{
						 /*if( ! driver.findElement(By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint))).getAttribute("class").contains("ui-tabs-selected"))*/
							 TB_GG_Click(driver, By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint)), "Tab of Next customer");
						 if( ! driver.findElement(By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint))).getAttribute("class").contains("ui-tabs-selected"))
			 					TB_GG_Click(driver, By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint)), "Tab of Next customer");
						 String AppClass1=TB_GG_getSelectedOption(TB_GG_FindElement(driver,  By.xpath( prop.getProperty("Dlst_APP_ApplicantClass")+strCustIdJoint+"']"), 5000));
							if(AppClass1.contains("Trust"))
								AppClass1="Trust";
							else
								AppClass1="Company";
						 	TB_GG_WaitAnElementPresent(driver, By.xpath( prop.getProperty("Ed_APPCC_ABNACN")+AppClass1+"ABN_"+strCustIdJoint+"']"), 20000);
						 	TB_GG_Click(driver, By.className("edit_"+strCustIdJoint),"Edit address");
						 	TB_GG_Wait(8000);
						 	TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APPCC_ABNACN")+AppClass1+"ABN_"+strCustIdJoint+"']"), AppClass1+"ABN", "79 875 985 603");
							TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APPCC_ABNACN")+AppClass1+"ACN_"+strCustIdJoint+"']"), AppClass1+"ACN", "796 895 809");
							TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_APP_AddressType")+strCustIdJoint+"']", "Address Type","Company Registered Address");
							TB_GG_Wait();
							TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_APP_CD_Save")+strCustIdJoint+"']"), "Save Details");
		             
					}
					TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);
				}
				else if(strSearchType.equalsIgnoreCase("Company"))
				{
					TB_GG_Wait(8000);
					 if( ! driver.findElement(By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustId))).getAttribute("class").contains("ui-tabs-selected"))
		 					TB_GG_Click(driver, By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustId)), "Tab of Next customer");
				    String AppClass=TB_GG_getSelectedOption(TB_GG_FindElement(driver,  By.xpath( prop.getProperty("Dlst_APP_ApplicantClass")+strCustId+"']"), 5000));
					if(AppClass.contains("Trust"))
						AppClass="Trust";
					else
						AppClass="Company";
					TB_GG_WaitAnElementPresent(driver, By.xpath( prop.getProperty("Ed_APPCC_ABNACN")+AppClass+"ABN_"+strCustId+"']"), 20000);
					TB_GG_Click(driver, By.className("edit_"+strCustId),"Edit address");
					TB_GG_Wait(8000);
					TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APPCC_ABNACN")+AppClass+"ABN_"+strCustId+"']"), AppClass+"ABN", "79 875 985 603");
					TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APPCC_ABNACN")+AppClass+"ACN_"+strCustId+"']"), AppClass+"ACN", "796 895 809");
					TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_APP_AddressType")+strCustId+"']", "Address Type","Company Registered Address");
					TB_GG_Wait();
					TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_APP_CD_Save")+strCustId+"']"), "Save Details");	
					TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),60000);

					
					
						 if( ! driver.findElement(By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint))).getAttribute("class").contains("ui-tabs-selected"))
			 					TB_GG_Click(driver, By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint)), "Tab of Next customer");
						 if( ! driver.findElement(By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint))).getAttribute("class").contains("ui-tabs-selected"))
			 					TB_GG_Click(driver, By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint)), "Tab of Next customer");
						 if(strCustIdJoint != "" && !bMixed)///For Joint Customer
			             {
						 String AppClass1=TB_GG_getSelectedOption(TB_GG_FindElement(driver,  By.xpath( prop.getProperty("Dlst_APP_ApplicantClass")+strCustIdJoint+"']"), 5000));
							if(AppClass1.contains("Trust"))
								AppClass1="Trust";
							else
								AppClass1="Company";
						 	TB_GG_WaitAnElementPresent(driver, By.xpath( prop.getProperty("Ed_APPCC_ABNACN")+AppClass1+"ABN_"+strCustIdJoint+"']"), 20000);
						 	TB_GG_Click(driver, By.className("edit_"+strCustIdJoint),"Edit address");
						 	TB_GG_Wait(8000);
						 	TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APPCC_ABNACN")+AppClass1+"ABN_"+strCustIdJoint+"']"), AppClass1+"ABN", "79 875 985 603");
							TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APPCC_ABNACN")+AppClass1+"ACN_"+strCustIdJoint+"']"), AppClass1+"ACN", "796 895 809");
							TB_GG_Wait();
							TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_APP_AddressType")+strCustIdJoint+"']", "Address Type","Company Registered Address");
							TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_APP_CD_Save")+strCustIdJoint+"']"), "Save Details");
		                   }
						 else if(bMixed)
						 {
							  
				 				//driver.findElement(By.cssSelector("a.edit.edit_"+strCustId)).click();
				            	boolean c1 = TB_GG_Click(driver, By.className("edit_"+strCustIdJoint),"Edit address");
				 				if(!c1) c1 = TB_GG_Click(driver, By.cssSelector("a.edit.edit_"+strCustIdJoint),"Edit address");
				 				if(!c1) TB_GG_Click(driver, By.xpath(prop.getProperty("Img_APP_EditAdd")+strCustIdJoint+"']/fieldset[3]/ul/li[7]/div/table/tbody/tr[1]/td[4]/a[2]"), "Edit");
				 				TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),15000);
				 				TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_APP_LivingTerm")+strCustIdJoint+"']", "Living Term",TB_GG_ReadXL(intRowid, "Dlst_NA_LivingTerm", strFile));
				 				 TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_APP_AddressType")+strCustIdJoint+"']", "Address Type","Current");
				 				TB_GG_FindElement(driver, By.xpath(prop.getProperty("Cb_APP_ExistingBankingCustomerNo")+strCustIdJoint+"-2']"),5000).click();
				 				TB_GG_FindElement(driver, By.xpath(prop.getProperty("Cb_APP_CustomerHaveABN")+strCustIdJoint+"-2']"), 5000).click();
				 				TB_GG_FindElement(driver, By.xpath(prop.getProperty("Cb_APP_HaveDriversLicence")+strCustIdJoint+"-1']"), 5000).click();
				 				TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_APP_LicenceIssuingState")+strCustIdJoint+"']", "Licence Issuing State","New South Wales");
				 				TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APP_LicenceNumber")+strCustIdJoint+"']"), "Licence Number", "21 892 654 633");
				 				WebElement calendar1=driver.findElement(By.xpath(prop.getProperty("Ed_APP_LicenceExpiryDate")+strCustIdJoint+"']"));
				 	            calendar1.clear();
				 	            calendar1.sendKeys("09/09/2016");	
				 	            TB_GG_Click(driver, By.xpath(prop.getProperty("Btn_APP_CD_Save")+strCustIdJoint+"']"), "Save Details");	
				          
						 }
					     TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);	
				}			
				
	//Occupation & Income From	
				TB_GG_Wait(7000);
				boolean click = TB_GG_Click(driver,By.xpath(prop.getProperty("Lb_APP_leftMenuOI")),"Occupation & Income");
				TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);
				if(!click) TB_GG_Click(driver,By.xpath(prop.getProperty("Lb_APP_leftMenuOI")),"Occupation & Income");
				
				TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);
				if(strSearchType.equalsIgnoreCase("Company"))
				{
					 if( ! driver.findElement(By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustId))).getAttribute("class").contains("ui-tabs-selected"))
		 					TB_GG_Click(driver, By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustId)), "Tab of Next customer");
					
					TB_GG_WaitAnElementPresent(driver, By.xpath( prop.getProperty("Dlst_APPCC_CompanyTaxableIncomeYear")+strCustId+"']"), 20000);
					TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_APPCC_CompanyTaxableIncomeYear")+strCustId+"']", "Company Taxable Income Year", "2010 - 2011");
					//new Select(driver.findElement(By.id("APP_CI_OI_CompanyTaxableIncomeYear_104"))).selectByVisibleText("2010 - 2011");
					//driver.findElement(By.cssSelector("option[value=\"2010 - 2011\"]")).click();
					TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APPCC_CompanyNetProfit")+strCustId+"']"), "Company Net Profit", "500000");
					WebElement we=	TB_GG_FindElement(driver, By.xpath(prop.getProperty("Img_APPCC_AddIncomeRec")+strCustId+"']/img"), 5000);
					if(we.isDisplayed())
					{       we.click();
					
				//	TB_GG_FindElement(driver, By.xpath(prop.getProperty("Img_APPCC_AddIncomeRec")+strCustId+"']/img"), 5000).click();
					TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_APPCC_CompanyTaxableIncomeYear2")+strCustId+"']", "Company Taxable Income Year2", "2009 - 2010");
					TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APPCC_CompanyNetProfit2")+strCustId+"']"), "Company Net Profit 2", "600000");
					}
					TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APPCC_CompanyAccountantsName")+strCustId+"']"), "Company Accountants Name", "Smith");
					TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APPCC_CompanyAccountantsNumber")+strCustId+"']"), "Company Accountants Number", "0451754444");
					 
		 				TB_GG_Click(driver, By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint)), "Tab of Next customer");
					if( ! driver.findElement(By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint))).getAttribute("class").equalsIgnoreCase("ui-tabs-selected"))
	 					TB_GG_Click(driver, By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint)), "Tab of Next customer");
					if(!bMixed) 
					{
						    TB_GG_WaitAnElementPresent(driver, By.xpath( prop.getProperty("Dlst_APPCC_CompanyTaxableIncomeYear")+strCustIdJoint+"']"), 20000);
							TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_APPCC_CompanyTaxableIncomeYear")+strCustIdJoint+"']", "Company Taxable Income Year", "2010 - 2011");
							//new Select(driver.findElement(By.id("APP_CI_OI_CompanyTaxableIncomeYear_104"))).selectByVisibleText("2010 - 2011");
							//driver.findElement(By.cssSelector("option[value=\"2010 - 2011\"]")).click();
							TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APPCC_CompanyNetProfit")+strCustIdJoint+"']"), "Company Net Profit", "500000");
							we=	TB_GG_FindElement(driver, By.xpath(prop.getProperty("Img_APPCC_AddIncomeRec")+strCustIdJoint+"']/img"), 5000);
							if(we.isDisplayed())
							{       we.click();
							
						//	TB_GG_FindElement(driver, By.xpath(prop.getProperty("Img_APPCC_AddIncomeRec")+strCustId+"']/img"), 5000).click();
							TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_APPCC_CompanyTaxableIncomeYear2")+strCustIdJoint+"']", "Company Taxable Income Year2", "2009 - 2010");
							TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APPCC_CompanyNetProfit2")+strCustIdJoint+"']"), "Company Net Profit 2", "600000");
							}
							TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APPCC_CompanyAccountantsName")+strCustIdJoint+"']"), "Company Accountants Name", "Smith");
							TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APPCC_CompanyAccountantsNumber")+strCustIdJoint+"']"), "Company Accountants Number", "0451754444");
							
					 }
					else if(bMixed)
					{
						clickPen = false;
					/*	WebElement edit2 = TB_GG_FindElement(driver,By.className("edit"),5000);
						if(edit2 != null && edit2.isEnabled() )//*[@id='content-ajax-170']/div[2]/table/tbody/tr/td/div/table
						{
							TB_GG_Wait(5000);
							clickPen= TB_GG_Click(driver,By.className("edit"),"Edit");
							
						}*/
						if(!clickPen)
						{
						
						//	driver.findElement(By.xpath(prop.getProperty("Dlst_APPPC_IncomeStatus")+strCustIdJoint+"']")).click();
							TB_GG_Click(driver, By.xpath(prop.getProperty("Dlst_APP_IncomeStatus")+strCustIdJoint+"']"), "");
							action.sendKeys(Keys.TAB).perform();
							action.sendKeys(Keys.TAB).perform();
							action.sendKeys(Keys.TAB).perform();
							action.sendKeys(Keys.ENTER).perform();
						}
						TB_GG_WaitAnElementPresent(driver, By.xpath( prop.getProperty("Dlst_APPPC_IncomeStatus")+strCustIdJoint+"']"), 20000);
						String incomestatus = TB_GG_getSelectedOption(TB_GG_FindElement(driver, By.xpath(prop.getProperty("Dlst_APPPC_IncomeStatus")+strCustIdJoint+"']"),5000));
						TB_GG_Wait(8000);
						if(incomestatus.equals("PAYG") )
						{
							
							TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_APPPC_PaygEmployerType")+strCustIdJoint+"']","Employer Type","Public Sector");
							TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APP_PaygEmployerContact")+strCustIdJoint+"']"),"Employer Contact", "023456780");
						// address
							TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_PaygBuildingName")+strCustIdJoint+"']"),"Building Name","Sain Marino");
							TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_PaygFloorNumber")+strCustIdJoint+"']"),"Floor Number","1");
							TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_PaygUnitNumber")+strCustIdJoint+"']"),"Unit Number","23");
							TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_PaygStreetNumber")+strCustIdJoint+"']"),"Street Number","38");
							TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_PaygStreetName")+strCustIdJoint+"']"),"Street Name","Alice");
							TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_APP_PaygStreetType")+strCustIdJoint+"']","Street Type","Lane");
							TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_PaygSuburb")+strCustIdJoint+"']"),"Suburb","parra");
							TB_GG_Wait();
							driver.findElement(By.cssSelector("li.ui-autocomplete1-even")).click();
							driver.findElement(By.xpath(prop.getProperty("Ed_APP_PaygSuburb")+strCustIdJoint+"']")).click();
							///
						
							/*TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_PaygOccupation")+strCustId+"']"),"PAYG Occupation","Manager");
							TB_GG_Wait();
							driver.findElement(By.cssSelector("li.ui-autocomplete1-even > strong")).click();
							driver.findElement(By.xpath(prop.getProperty("Ed_APP_PaygOccupation")+strCustId+"']")).click();*/
							driver.findElement(By.xpath(prop.getProperty("Cb_APP_PaygQACompanyCarNo")+strCustIdJoint+"-no']")).sendKeys(Keys.TAB);
							action.sendKeys(Keys.ENTER).perform();
						}
						else if(incomestatus.equals("Self-Employed"))
						{
						//	TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APP_companyOwned")), "Company Owned %",bgfJoint.occupationAndIncome.get("IncomeStatus"));
						/// address
							TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_Add_SelfBuildingName")+strCustIdJoint+"']"),"Building Name","Sain Marino");
							TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_SelfFloorNumber")+strCustIdJoint+"']"),"Floor Number","1");
							TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_SelfUnitNumber")+strCustIdJoint+"']"),"Unit Number","23");
							TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_SelfStreetNumber")+strCustIdJoint+"']"),"Street Number","38");
							TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_SelfStreetName")+strCustIdJoint+"']"),"Street Name","Alice");
							TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_APP_SelfStreetType")+strCustIdJoint+"']","Street Type","Lane");
							TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_SelfSuburb")+strCustIdJoint+"']"),"Suburb","parra");
							TB_GG_Wait();
							driver.findElement(By.cssSelector("li.ui-autocomplete1-even")).click();
							driver.findElement(By.xpath(prop.getProperty("Ed_APP_SelfSuburb")+strCustIdJoint+"']")).click();
							//
							TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_ABNSelfEmployedOnly")+strCustIdJoint+"']"),"ABN No.","7497827930");
							TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_SelfAccountantsName")+strCustIdJoint+"']"),"Self Accountant's Name","Bill Speers");
							TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_SelfAccountantsFaxNumber")+strCustIdJoint+"']"),"Accountant's Fax Number","733998877");
							action.sendKeys(Keys.TAB).perform();
							action.sendKeys(Keys.ENTER).perform();
					     }
						else if(incomestatus.equals("--Select--") )
						{
							TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_APPPC_OccupationType")+strCustIdJoint+"']","Occupation Type","Current");//"Current");
							TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_APPPC_IncomeStatus")+strCustIdJoint+"']","Income Status","PAYG");
							TB_GG_WaitSelectDDListItem(driver,prop.getProperty("Dlst_APPPC_PaygEmploymentType")+strCustIdJoint+"']","EmpType","Full Time");//"Full Time");

							TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_PaygEmployerName")+strCustIdJoint+"']"),"Employer Name","TPG");//"Emp1");
							TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_APPPC_PaygPAYGIncomeType")+strCustIdJoint+"']","PAYGIncomeType","Gross");
							TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APP_BaseSalary")+strCustIdJoint+"']"),"Base Salary","8000");
							TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_APPPC_PaygEmployerType")+strCustIdJoint+"']","Employer Type","Public Sector");
							TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APP_PaygEmployerContact")+strCustIdJoint+"']"),"Employer Contact", "023456780");
						// address
							TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_PaygBuildingName")+strCustIdJoint+"']"),"Building Name","Sain Marino");
							TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_PaygFloorNumber")+strCustIdJoint+"']"),"Floor Number","1");
							TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_PaygUnitNumber")+strCustIdJoint+"']"),"Unit Number","23");
							TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_PaygStreetNumber")+strCustIdJoint+"']"),"Street Number","38");
							TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_PaygStreetName")+strCustIdJoint+"']"),"Street Name","Alice");
							TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_APP_PaygStreetType")+strCustIdJoint+"']","Street Type","Lane");
							TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_PaygSuburb")+strCustIdJoint+"']"),"Suburb","parra");
							TB_GG_Wait();
							driver.findElement(By.cssSelector("li.ui-autocomplete1-even")).click();
							driver.findElement(By.xpath(prop.getProperty("Ed_APP_PaygSuburb")+strCustIdJoint+"']")).click();
							
						
							driver.findElement(By.xpath(prop.getProperty("Cb_APP_PaygQACompanyCarNo")+strCustIdJoint+"-no']")).sendKeys(Keys.TAB);
							action.sendKeys(Keys.ENTER).perform();
						}
						
					}
					
				}
				if(strSearchType.equalsIgnoreCase("Personal"))
				{
						
				
					clickPen = false;
					 if( ! driver.findElement(By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustId))).getAttribute("class").contains("ui-tabs-selected"))
		 					TB_GG_Click(driver, By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustId)), "Tab of Next customer");
						WebElement edit = TB_GG_FindElement(driver,By.className("edit"),5000);
						if(edit != null && edit.isEnabled() )//*[@id='content-ajax-170']/div[2]/table/tbody/tr/td/div/table
						{
							TB_GG_Wait(5000);
							clickPen= TB_GG_Click(driver,By.className("edit"),"Edit");
							
						}
						if(!clickPen)
						{
							
							TB_GG_Click(driver, By.xpath(prop.getProperty("Dlst_APPPC_IncomeStatus")+strCustId+"']"), "");
							TB_GG_Wait();
							action.sendKeys(Keys.TAB).perform();
							action.sendKeys(Keys.TAB).perform();
							action.sendKeys(Keys.TAB).perform();
							action.sendKeys(Keys.ENTER).perform();
						  }
							TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);

							String incometype = TB_GG_getSelectedOption(TB_GG_FindElement(driver, By.xpath(prop.getProperty("Dlst_APPPC_IncomeStatus")+strCustId+"']"),5000));
							System.out.println("Found Income type to be: "+incometype);
							if(incometype.equals("PAYG"))
							{
							
								TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_APPPC_PaygEmployerType")+strCustId+"']","Employer Type","Public Sector");
								TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APP_PaygEmployerContact")+strCustId+"']"),"Employer Contact", "023456780");
							// address
								TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_PaygBuildingName")+strCustId+"']"),"Building Name","Sain Marino");
								TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_PaygFloorNumber")+strCustId+"']"),"Floor Number","1");
								TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_PaygUnitNumber")+strCustId+"']"),"Unit Number","23");
								TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_PaygStreetNumber")+strCustId+"']"),"Street Number","38");
								TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_PaygStreetName")+strCustId+"']"),"Street Name","Alice");
								TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_APP_PaygStreetType")+strCustId+"']","Street Type","Lane");
								TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_PaygSuburb")+strCustId+"']"),"Suburb","parramatta");
								TB_GG_Wait();
								driver.findElement(By.cssSelector("li.ui-autocomplete1-even")).click();
								driver.findElement(By.xpath(prop.getProperty("Ed_APP_PaygStreetName")+strCustId+"']")).click();
							///
						
								/*TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_PaygOccupation")+strCustId+"']"),"PAYG Occupation","Manager");
								TB_GG_Wait();
								driver.findElement(By.cssSelector("li.ui-autocomplete1-even > strong")).click();
								driver.findElement(By.xpath(prop.getProperty("Ed_APP_PaygOccupation")+strCustId+"']")).click();*/
								driver.findElement(By.xpath(prop.getProperty("Cb_APP_PaygQACompanyCarNo")+strCustId+"-no']")).sendKeys(Keys.TAB);
								action.sendKeys(Keys.ENTER).perform();
								TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);

							}
							else if(incometype.equals("Self-Employed"))
							{
							//	TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APP_companyOwned")), "Company Owned %",bgf.occupationAndIncome.get("IncomeStatus"));
								/// address
								TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_Add_SelfBuildingName")+strCustId+"']"),"Building Name","Sain Marino");
								TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_SelfFloorNumber")+strCustId+"']"),"Floor Number","1");
								TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_SelfUnitNumber")+strCustId+"']"),"Unit Number","23");
								TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_SelfStreetNumber")+strCustId+"']"),"Street Number","38");
								TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_SelfStreetName")+strCustId+"']"),"Street Name","Alice");
								TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_APP_SelfStreetType")+strCustId+"']","Street Type","Lane");
								TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_SelfSuburb")+strCustId+"']"),"Suburb","parra");
								TB_GG_Wait();
								driver.findElement(By.cssSelector("li.ui-autocomplete1-even")).click();
								driver.findElement(By.xpath(prop.getProperty("Ed_APP_SelfSuburb")+strCustId+"']")).click();
								//
								TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_ABNSelfEmployedOnly")+strCustId+"']"),"ABN No.","7497827930");
								TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_SelfAccountantsName")+strCustId+"']"),"Self Accountant's Name","Bill Speers");
								TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_SelfAccountantsFaxNumber")+strCustId+"']"),"Accountant's Fax Number","0288918598");
								action.sendKeys(Keys.TAB).perform();
								action.sendKeys(Keys.ENTER).perform();
								TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);

							}
					TB_GG_Wait(8000);
					
			 					TB_GG_Click(driver, By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint)), "Tab of Next customer");
						 if( ! driver.findElement(By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint))).getAttribute("class").contains("ui-tabs-selected"))
			 					TB_GG_Click(driver, By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint)), "Tab of Next customer");
			 					TB_GG_Wait(4000);
						 if(!bMixed)
							{
							/* WebElement edit1 = TB_GG_FindElement(driver,By.className("edit"),5000);
							if(edit1 != null && edit1.isEnabled() )//*[@id='content-ajax-170']/div[2]/table/tbody/tr/td/div/table
								{
									TB_GG_Wait(5000);
									clickPen= TB_GG_Click(driver,By.className("edit"),"Edit");
										
								}*/
								if(!clickPen)
								{
								
									TB_GG_Click(driver,By.xpath(prop.getProperty("Dlst_APPPC_IncomeStatus")+strCustIdJoint+"']"),"Income Status");
									
									action.sendKeys(Keys.TAB).perform();
									action.sendKeys(Keys.TAB).perform();
									action.sendKeys(Keys.TAB).perform();
									action.sendKeys(Keys.ENTER).perform();
								}
								TB_GG_Wait(6000);
								String incoemType1 = TB_GG_getSelectedOption(TB_GG_FindElement(driver, By.xpath(prop.getProperty("Dlst_APPPC_IncomeStatus")+strCustIdJoint+"']"),5000));
								System.out.println("Found Income type to be: "+incoemType1);
								if(incoemType1.equals("PAYG"))
								{
									
									TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_APPPC_PaygEmployerType")+strCustIdJoint+"']","Employer Type","Public Sector");
									TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APP_PaygEmployerContact")+strCustIdJoint+"']"),"Employer Contact", "023456780");
								// address
									TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_PaygBuildingName")+strCustIdJoint+"']"),"Building Name","Sain Marino");
									TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_PaygFloorNumber")+strCustIdJoint+"']"),"Floor Number","1");
									TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_PaygUnitNumber")+strCustIdJoint+"']"),"Unit Number","23");
									TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_PaygStreetNumber")+strCustIdJoint+"']"),"Street Number","38");
									TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_PaygStreetName")+strCustIdJoint+"']"),"Street Name","Alice");
									TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_APP_PaygStreetType")+strCustIdJoint+"']","Street Type","Lane");
									TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_PaygSuburb")+strCustIdJoint+"']"),"Suburb","parra");
									TB_GG_Wait();
									driver.findElement(By.cssSelector("li.ui-autocomplete1-even")).click();
									driver.findElement(By.xpath(prop.getProperty("Ed_APP_PaygSuburb")+strCustIdJoint+"']")).click();
									///
								
										driver.findElement(By.xpath(prop.getProperty("Cb_APP_PaygQACompanyCarNo")+strCustIdJoint+"-no']")).sendKeys(Keys.TAB);
									action.sendKeys(Keys.ENTER).perform();
								}
								else if(incoemType1.equals("Self-Employed"))
								{
								//	TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APP_companyOwned")), "Company Owned %",bgfJoint.occupationAndIncome.get("IncomeStatus"));
								/// address
									TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_Add_SelfBuildingName")+strCustIdJoint+"']"),"Building Name","Sain Marino");
									TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_SelfFloorNumber")+strCustIdJoint+"']"),"Floor Number","1");
									TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_SelfUnitNumber")+strCustIdJoint+"']"),"Unit Number","23");
									TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_SelfStreetNumber")+strCustIdJoint+"']"),"Street Number","38");
									TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_SelfStreetName")+strCustIdJoint+"']"),"Street Name","Alice");
									TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_APP_SelfStreetType")+strCustIdJoint+"']","Street Type","Lane");
									TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_SelfSuburb")+strCustIdJoint+"']"),"Suburb","parra");
									TB_GG_Wait();
									driver.findElement(By.cssSelector("li.ui-autocomplete1-even")).click();
									driver.findElement(By.xpath(prop.getProperty("Ed_APP_SelfSuburb")+strCustIdJoint+"']")).click();
									//
									TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_ABNSelfEmployedOnly")+strCustIdJoint+"']"),"ABN No.","7497827930");
									TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_SelfAccountantsName")+strCustIdJoint+"']"),"Self Accountant's Name","Bill Speers");
									TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_APP_SelfAccountantsFaxNumber")+strCustIdJoint+"']"),"Accountant's Fax Number","0288918598");
									action.sendKeys(Keys.TAB).perform();
									action.sendKeys(Keys.ENTER).perform();
							     }
						}
						 else if(bMixed){
							    TB_GG_WaitAnElementPresent(driver, By.xpath( prop.getProperty("Dlst_APPCC_CompanyTaxableIncomeYear")+strCustIdJoint+"']"), 20000);
								TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_APPCC_CompanyTaxableIncomeYear")+strCustIdJoint+"']", "Company Taxable Income Year", "2010 - 2011");
							
								TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APPCC_CompanyNetProfit")+strCustIdJoint+"']"), "Company Net Profit", "500000");
								WebElement we=	TB_GG_FindElement(driver, By.xpath(prop.getProperty("Img_APPCC_AddIncomeRec")+strCustIdJoint+"']/img"), 5000);
								if(we.isDisplayed())
								{       we.click();
										TB_GG_SelectDDListItem(driver, prop.getProperty("Dlst_APPCC_CompanyTaxableIncomeYear2")+strCustIdJoint+"']", "Company Taxable Income Year2", "2009 - 2010");
										TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APPCC_CompanyNetProfit2")+strCustIdJoint+"']"), "Company Net Profit 2", "600000");
								}
								TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APPCC_CompanyAccountantsName")+strCustIdJoint+"']"), "Company Accountants Name", "Smith");
								TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_APPCC_CompanyAccountantsNumber")+strCustIdJoint+"']"), "Company Accountants Number", "0451754444");
								
							 
						 }
					TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);
				}	
	//Credit History From	
			/*	if(bMixed)
				{
					boolean cl = TB_GG_Click(driver,By.xpath(".//*[@id='need-analysis-left-menu']/div[3]/ul/li[1]/ul/li[6]/a"),"Credit History");
					if(!cl) TB_GG_Click(driver,By.xpath(".//*[@id='need-analysis-left-menu']/div[3]/ul/li[1]/ul/li[6]/a"),"Credit History");
		//			TB_GG_WaitAnElementPresent(driver,By.xpath(prop.getProperty("Cb_APP_ConfirmContractNo")+strCustId+"-2']"),15000);
					TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);

					if( ! driver.findElement(By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint))).getAttribute("class").equalsIgnoreCase("ui-tabs-selected"))
	 					TB_GG_Click(driver, By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint)), "Tab of Next customer");
					if( ! driver.findElement(By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint))).getAttribute("class").equalsIgnoreCase("ui-tabs-selected"))
	 					TB_GG_Click(driver, By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint)), "Tab of Next customer");
					TB_GG_Click(driver, By.xpath(prop.getProperty("Cb_APP_ConfirmContractNo")+strCustIdJoint+"-2']"),"Confirm Contract No");
					TB_GG_FindElement(driver, By.xpath(prop.getProperty("Cb_APP_CreditDefaultNo")+strCustIdJoint+"-2']"),5000).click();
					TB_GG_FindElement(driver, By.xpath(prop.getProperty("Cb_APP_JudgementEnteredNo")+strCustIdJoint+"-2']"),5000).click();
					TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_APP_FinancialExperience")+strCustIdJoint+"']","Final Exp","Intermediate");//"Intermediate");
				
				}*/
				if(strSearchType.equalsIgnoreCase("Company") || bMixed)
				{   
					if(bMixed) 
					{
						TB_GG_Click(driver,By.xpath(".//*[@id='need-analysis-left-menu']/div[3]/ul/li[1]/ul/li[6]/a"),"Credit History");
					    if(!TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Cb_APP_ConfirmContractNo")+strCustId+"-2']"), 7000))
					    	TB_GG_Click(driver,By.xpath(".//*[@id='need-analysis-left-menu']/div[3]/ul/li[1]/ul/li[6]/a"),"Credit History");
					    if(!TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Cb_APP_ConfirmContractNo")+strCustId+"-2']"), 7000))
					    	TB_GG_Click(driver,By.xpath(".//*[@id='need-analysis-left-menu']/div[3]/ul/li[1]/ul/li[6]/a"),"Credit History");
	
					}
					else
					{
						boolean cl = TB_GG_Click(driver,By.xpath(prop.getProperty("Lb_APP_LeftMenuCH")),"Credit History");
					    if(!TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Cb_APP_ConfirmContractNo")+strCustId+"-2']"), 7000))
							TB_GG_Click(driver,By.xpath(prop.getProperty("Lb_APP_LeftMenuCH")),"Credit History");
					    if(!TB_GG_DoesWebElementExist(driver, By.xpath(prop.getProperty("Cb_APP_ConfirmContractNo")+strCustId+"-2']"), 7000))
							TB_GG_Click(driver,By.xpath(prop.getProperty("Lb_APP_LeftMenuCH")),"Credit History");
					}
					TB_GG_WaitAnElementPresent(driver,By.xpath(prop.getProperty("Cb_APP_ConfirmContractNo")+strCustId+"-2']"),15000);
					TB_GG_WaitAnElementDisappears(driver,By.xpath(prop.getProperty("Img_NA_Waiting")),30000);

					if( ! driver.findElement(By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustId))).getAttribute("class").contains("ui-tabs-selected"))
 					TB_GG_Click(driver, By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustId)), "Tab of Next customer");
				
					TB_GG_Click(driver, By.xpath(prop.getProperty("Cb_APP_ConfirmContractNo")+strCustId+"-2']"),"Confirm Contract No");
					TB_GG_FindElement(driver, By.xpath(prop.getProperty("Cb_APP_CreditDefaultNo")+strCustId+"-2']"),5000).click();
					TB_GG_FindElement(driver, By.xpath(prop.getProperty("Cb_APP_JudgementEnteredNo")+strCustId+"-2']"),5000).click();
					TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_APP_FinancialExperience")+strCustId+"']","Final Exp","Intermediate");//"Intermediate");
					TB_GG_Click(driver, By.xpath(prop.getProperty("Cb_APP_TranAcc")+strCustId+"-2']"),"Transaction Account No");
					TB_GG_Click(driver, By.xpath(prop.getProperty("Cb_APP_CreditCard")+strCustId+"-2']"),"Credit Card No");
					TB_GG_Click(driver, By.xpath(prop.getProperty("Cb_APP_Loan")+strCustId+"-2']"),"Loan No");

					
					if( ! driver.findElement(By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint))).getAttribute("class").contains("ui-tabs-selected"))
	 					TB_GG_Click(driver, By.id(prop.getProperty("Tb_JNA_CustTab").concat(strCustIdJoint)), "Tab of Next customer");
					TB_GG_Click(driver, By.xpath(prop.getProperty("Cb_APP_ConfirmContractNo")+strCustIdJoint+"-2']"),"Confirm Contract No");
					TB_GG_FindElement(driver, By.xpath(prop.getProperty("Cb_APP_CreditDefaultNo")+strCustIdJoint+"-2']"),5000).click();
					TB_GG_FindElement(driver, By.xpath(prop.getProperty("Cb_APP_JudgementEnteredNo")+strCustIdJoint+"-2']"),5000).click();
					TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_APP_FinancialExperience")+strCustIdJoint+"']","Final Exp","Intermediate");//"Intermediate");
					TB_GG_Click(driver, By.xpath(prop.getProperty("Cb_APP_TranAcc")+strCustIdJoint+"-2']"),"Transaction Account No");
					TB_GG_Click(driver, By.xpath(prop.getProperty("Cb_APP_CreditCard")+strCustIdJoint+"-2']"),"Credit Card No");
					TB_GG_Click(driver, By.xpath(prop.getProperty("Cb_APP_Loan")+strCustIdJoint+"-2']"),"Loan No");

					
				}
			
			}
			else
			{
				strStepdetail="Application Froms are inactive";
				strResult="Fail";
				TB_GG_Report(strStepdetail, strResult, true);
				TB_GG_Log(strStepdetail);
			}
			return true;
}
/**********************************************************************************************************
@doc  Got to Broker Centre
@author rusingh
@param driver
@Date  21 Nov,2012
@return true
**************************************************************************************************************/

 public boolean TB_LB_BrokerCentre(WebDriver driver,String strbpId)
 {       
	     Actions action = new Actions(driver); 
	     boolean bBCentre=false;
	     TB_GG_Report("Broker Centre","", true); 
	     String err="";
	     TB_GG_Wait(8000);
		 String winHandleBefore = driver.getWindowHandle();
		 System.out.println(strOppNo );
	//     TB_GG_WriteOpportunityNumber(strbpId , strOppNo);
	//	if(! TB_GG_Click(driver,By.xpath(prop.getProperty("Btn_APP_Validate")),"Validate Application"))
			if(! TB_GG_Click(driver,By.linkText("View/Validate/Print/Submit Application"),"Validate Application"))
			return bBCentre;
			 TB_GG_Wait(7000);
		if(! bgf.meetingDetails.get("LoanReason").contains("Variation"));
		if(! TB_GG_Click(driver,By.xpath(prop.getProperty("Btn_BC_Submit")),"OK"))
			{
			  TB_GG_Report("FCR is not Pass to Enter in BC", "Fail", true);
			  TB_GG_WriteOpportunityNumber(strbpId , strOppNo);
			  return bBCentre;
			}
	 
		
		 TB_GG_Wait(30000);
	     for(String winHandle : driver.getWindowHandles()){
	            driver.switchTo().window(winHandle);
	            
	        }
	     TB_GG_Wait(10000);
	     System.out.println(strOppNo );
	     TB_GG_WriteOpportunityNumber(strbpId , strOppNo);///writing all Application Number in Excel sheet
	    if(TB_GG_DoesWebElementExist(driver, By.className("ActionToolbar"), 5000))
	    {
			    	WebElement cont2 =driver.findElement(By.className("ActionToolbar"));
			        List <WebElement> lstOptions = cont2.findElements(By.tagName("img"));
				
				 for (WebElement weOption : lstOptions)
				 {
					 System.out.println(weOption.getAttribute("src"));
				   if(weOption.getAttribute("src").contains("images/icons/comm.gif"))
				   {	
					    
					    weOption.click();
					    TB_GG_Report("Click on Submit Application","Pass", true); 
						TB_GG_Wait(10000);
						err = driver.findElement(By.xpath(".//*[@id='SubmissionPopupResponseArea']/div/div/a")).getText();
						TB_GG_Click(driver,By.name("btnClose"),"Close"); 
						action.sendKeys(Keys.ENTER);
						System.out.println(err);
						break;
				   }
				 }
				 //TB_GG_Wait();
				 if(err.equalsIgnoreCase("Validation errors"))
				  TB_GG_Report("Fail to Submit Application in Broker Centre", "Fail", true);
					 
				  else
				  {
					  TB_GG_Report("Application is Submitted in Broker Centre", "Pass", true);
					  bBCentre=true;
				  }
					 
				 
				/* WebElement cont3 =driver.findElement(By.className("ActionToolbar"));
				 List <WebElement> lstOptions1 = cont3.findElements(By.tagName("img"));
				 for (WebElement weOption1 : lstOptions1)
				 {
				   if(weOption1.getAttribute("src").contains("images/icons/print16.gif"))
						   {	
					   			System.out.println(weOption1.getAttribute("src"));
								weOption1.click();
								TB_GG_Wait();
								break;
						   }	
			    
				 }	
					
					 for(String winHandle : driver.getWindowHandles())
					 {
				            driver.switchTo().window(winHandle);
				            
				        }
				    	
					 
					 TB_GG_Click(driver,By.xpath(".//*[@id='NextgenDiv']/table/tbody/tr[1]/td[1]/input"),"check"); 
					 TB_GG_Wait();
					 TB_GG_Click(driver,By.xpath(".//*[@id='LenderDiv']/table/tbody/tr[1]/td[1]/input"),"unceck"); 
					 TB_GG_Click(driver,By.xpath(".//*[@id='LenderDiv']/table/tbody/tr[5]/td[1]/input"),"uncehck"); 
					 TB_GG_Click(driver,By.xpath(".//*[@id='oPrintButton']"),"Print"); 
					 TB_GG_Wait(9000);
					 for(String winHandle : driver.getWindowHandles())
					 {
				            driver.switchTo().window(winHandle);
				            
				        }
				//	 action.keyDown(Keys.ALT);
				//	 action.sendKeys(keys.%{F});
					// action.sendKeys("%F");
					 TB_GG_Wait(9000);
					 
					 action.sendKeys(Keys.F10).perform();
					// action.sendKeys(Keys.ALT, "F");
					// action.sendKeys(Keys.ALT.DOWN);
					 //action.sendKeys("F");
					 
					 TB_GG_Wait(100000);
					 action.sendKeys("A");
					 TB_GG_Wait();
					 action.sendKeys(strAppno);
					 action.sendKeys(Keys.TAB);
					 action.sendKeys(Keys.TAB);
					 action.sendKeys(Keys.ENTER);
					 
				 	 //BC_LB_ApplicantsTab(driver);
				 	 //BC_Security(driver);  // Perform the actions on new window
				 	 //BC_Financial(driver);
				            //Close the new window, if that window no more required*/
			         driver.close();
		
			        //Switch back to original browser (first window)
			        
			         
			        driver.switchTo().window(winHandleBefore);
	    }
	    else 
	    	 TB_GG_Report("Fail to Enter Broker Centre", "Fail", true);
	   return bBCentre;     //continue with original browser (first window)
	 	
	 	 
 }
 public boolean BC_LB_ClickRedCrossTab(WebElement ee){
	 
	 boolean bClick = false;
	
	// WebElement cont =driver.findElement(By.className("\""+classname+"\""));
	 List <WebElement> lstOptions = ee.findElements(By.tagName("img"));
	
	 for (WebElement weOption : lstOptions)
	 {
		 System.out.println(weOption.getAttribute("src"));
		if(weOption.getAttribute("src").contains("images/icons/cross_nav.gif"))
	   {	
			ee.click();
			bClick = true;
			break;
		}
	 }
	 return bClick ;
 }

 public boolean BC_Security(WebDriver driver)
 {
	 WebElement tab =driver.findElement(By.className("SecurityTab"));
	 
	 if(BC_LB_ClickRedCrossTab(tab))
	 {
		 new Select(driver.findElement(By.id("TitleType"))).selectByVisibleText("Strata Title");
		 driver.findElement(By.linkText("Save")).click();
	 }
	 if(!BC_LB_ClickRedCrossTab(tab))
		 return true;
	 else
		 return false;
 }

 public boolean BC_Financial(WebDriver driver)
 {
	 
	 WebElement tab =driver.findElement(By.className("FinancialTab"));
	 if(BC_LB_ClickRedCrossTab(tab))
	 {
		 TB_GG_Input(driver, By.xpath(prop.getProperty("Ed_BC_F_IDAJZFGT")), "Repayments", "500");
		 driver.findElement(By.linkText("Save")).click();
	 }
	 if(!BC_LB_ClickRedCrossTab(tab))
		 return true;
	 else
		 return false;
 }
 public void BC_LB_ApplicantsTab(WebDriver driver){
	 WebElement cont =driver.findElement(By.className("ApplicantTab"));
	 Actions action = new Actions(driver); 
	 if(BC_LB_ClickRedCrossTab(cont))
	 {
		 new Select(driver.findElement(By.xpath(".//*[@id='AddressResidential']"))).selectByIndex(1); 
		// new Select(driver.findElement(By.xpath("(//select[@name='EmpType'])[2]"))).selectByIndex(1);
		 TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_BC_A_ResStrDate")),"Residential Start Date","11dec1999");
		 TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_BC_A_HousingStatus"),"Housing Status","Renting");//"Intermediate");
		//.//*[@id='IDAFB0LQ']
		 new Select(driver.findElement(By.xpath("(//select[@name='EmpType'])[2]"))).selectByIndex(1);
		 //driver.findElement(By.name("EmpType")).click();
		 TB_GG_Wait(8000);
		 action.sendKeys(Keys.TAB).perform();
		 action.sendKeys(Keys.TAB).perform();
		 action.sendKeys(Keys.TAB).perform();
		 action.sendKeys(Keys.TAB).perform();
		 action.sendKeys("11dec2000").perform();
	//	 driver.findElement(By.name("EmpStartDate")).sendKeys("11dec2000");
		// TB_GG_Input(driver,By.name("EmpStartDate"),"Residential Start Date","11dec2000");
		/* driver.findElement(By.xpath("(//img[@alt='Lookup Role Code...'])[2]")).click();
		 driver.findElement(By.xpath("(//img[@alt='Lookup Role Code...'])[2]")).click();
		 driver.findElement(By.id("SearchText")).clear();
		 driver.findElement(By.id("SearchText")).sendKeys("sales");
		 driver.findElement(By.id("FindText")).click();
		 driver.switchTo().window("name=fbMainContainer");
		 driver.findElement(By.id("1231-11")).click();//TB_GG_SwitchToIframe(driver, "")
		/* selenium.selectWindow("name=fbMainContainer");
		 selenium.click("id=fbInspectButton");*/
	/*	 TB_GG_Input(driver,By.xpath(prop.getProperty("Ed_BC_A_ProfBefTax")),"Profit Before TAx","100000");
		 driver.findElement(By.xpath("(//a[contains(text(),'New')])[16]")).click();
		driver.findElement(By.xpath("(//input[@id='CompanyName'])[2]")).clear();
		driver.findElement(By.xpath("(//input[@id='CompanyName'])[2]")).sendKeys("Manager");
		driver.findElement(By.xpath("(//input[@name='FixedAreaCode'])[2]")).clear();
		driver.findElement(By.xpath("(//input[@name='FixedAreaCode'])[2]")).sendKeys("02");
		driver.findElement(By.xpath("(//input[@name='FixedPhone'])[2]")).clear();
		driver.findElement(By.xpath("(//input[@name='FixedPhone'])[2]")).sendKeys("12345678");
		driver.findElement(By.id("WindowOKButton")).click();*/
		 TB_GG_Wait(7000); 
		// new Select(driver.findElement(By.xpath(".//*[@id='EmployerRelated']"))).selectByIndex(0);
		TB_GG_Click(driver, By.name("IncomeValuePAYE "),"IncomeValuePAYE"); 
		
		action.sendKeys(Keys.TAB).perform();
		action.sendKeys(Keys.TAB).perform();
		action.sendKeys(Keys.TAB).perform();
		action.sendKeys(Keys.TAB).perform();
		action.sendKeys(Keys.TAB).perform();
		action.sendKeys(Keys.TAB).perform();
		action.sendKeys(Keys.TAB).perform();
		action.sendKeys(Keys.TAB).perform();
		action.sendKeys(Keys.ARROW_DOWN).perform();
		//TB_GG_SelectDDListItem(driver,prop.getProperty("Dlst_BC_A_Change"),"Change Status","No");
		 TB_GG_Wait(7000); 
		WebElement cbox =driver.findElement(By.className("InputSection"));
		 List <WebElement> lstOptions = cbox.findElements(By.tagName("td"));
		
		 for (WebElement weOption : lstOptions)
		 {
			 System.out.println(weOption.getAttribute("name"));
			if(weOption.getAttribute("name").contains("AllowThirdPartyDisclosure"))
				weOption.click();
		 }
		TB_GG_Click(driver, By.xpath(prop.getProperty("Cbox_BC_A_CreditCheck")),"Credit check");
		TB_GG_Click(driver, By.xpath(prop.getProperty("Cbox_BC_A_ThirdPartyDis")),"Third Party Disclosure");
		TB_GG_Click(driver, By.linkText("Save"),"Save Button");	
	 }
}

}














